#TRUSTED 87cdcaae57fc1dc7720f82209907d14d68f0a982344f3cf2cec66586ac361f404481876c1290fa0fca7b956b616ac612475f7b5dd074d5fe12086348e4cd94f98e35f94f66566e1f424ff87eb415943652e2a7ad1e252ccb7cae047f904309f94511d37889d7dc14a0c54414c493d5f6e4d56c218938f92bed95c871a0a4037b48a09b683e545c3a30e60060b341f461c9e7aa4abbdfce7b86a0c5a7045220adf6d4954e2901a3f657fc1e3d648a3e7f88d85b1add24801e43361caa4caffb99ccb961dfe8b1094ec0a336b853f08c0a5f9d406133989a4639ce43383bb906ea456b9d10f05b7159e2c442e0106518883b464bda1c6993d5f2ecd703c7a91a19889b7b12c6f9ac986b80c83a26c06fcb792a02db26c08f381ceb94b5263b659738ee8f834acaa25fb225c4b624cd0001104e65c3c016ee6e8acfeda77cf9e2dc4e39906b6fbbabc2a3aca9d2f23f865d42722a67fa23ce8f40bc1d64584b6a893414cb736b08c06c4af9d84f0cc4c6e72f29c73461e1f6968c60cc9474686453ffb470711836c1b61a037d8aecba34a5d9f761754edd65eeb8b4ba58e36bde46a2cb960b12db5b9fbd91c0e2615269871e5e3d7370c6d094cabbe204b1ddb7ae47b2a85fbaacc288797d029a618e2bcad6dd9903b78ab611df55162eeedb2921bb36f85c7f85ef714db1c5eb455f30e5f63ccfa54ce1948790723743296dbabc
#TRUST-RSA-SHA256 ae6abf90ef4c9ec32bbcdf4923d381c16fb4c13cc5fd1d0b99c40621faf9d916b3d9710d31ed804e3fe7dc972bab30248d53fa35f056d3b535599b74a61a8d4f5d1c33e0e2f48a5af9371db194826463b782e0759b5783be301969b9c8336484d90abaec3d5ae59bc5af65b0f53e175345cf35b1fe1b71d6542f9f4fda2fa34ee316d31c69969725db0d77ebe895a751b770ed3ff35e94216557d73a13c4d138a838c4f4f813aad4bea1ff32473c3b50cba09c8a8596b451608a134bfaaeb22de39236aefc0469895e2b0502f2405f6af1e063e481d21ca9220a6891da8be4d4869e2314f085e47acdb04afc3cc04307729daae227ac18e2b0d8321cea745ec512159b67159a3d0ef3954f087c8f6b0e247ae554c43273f61c06457944ccd84b72ff930ed6be12e8fedefef1b46c34a8133f59e5a4aa5c7ca2602a1024f73840f4bac8301fd4b73a11d6da9a2823c1b725737b68d2131f45238f5c6f2bcc8b128b84a4769c2c8c31ebd52f7567ac379976eec5f4eefe7818078b9433c6bba0f42abdff2b1c309f24fca4ee4c1de8f06cf096ab14736be31336acf1ae1931f4af86e80c12a5f2d1e0c738ff0449ca49570c122f04a54b80b213e40353a7b71905d66592b6399211e897f91a5d434db46df41f66095ecb4879d75a88d36b69b5e47a1d137c30309203a1b7436a4e2d06f778a259c287a4417c65b4d1a087b160da
#
# This script is Copyright (C) 2004-2023 and is owned by Tenable, Inc. or an Affiliate thereof.
#
# This script is released under the Tenable Subscription License and
# may not be used from within scripts released under another license
# without authorization from Tenable, Inc.
#
# See the following licenses for details:
#
# http://static.tenable.com/prod_docs/Nessus_6_SLA_and_Subscription_Agreement.pdf
#
# @PROFESSIONALFEED@
# $Revision: 1.15 $
# $Date: 2023/07/20 $
#
# description : This document implements the security configuration as recommended by the
#               CIS Debian Linux 11 Benchmark
#
#<ui_metadata>
#<display_name>CIS Debian Linux 11 Workstation L1 v1.0.0</display_name>
#<spec>
#  <type>CIS</type>
#  <name>CIS Debian Linux 11 Workstation L1</name>
#  <version>1.0.0</version>
#  <link>https://workbench.cisecurity.org/files/4115</link>
#</spec>
#<labels>cis,debian_linux_11,agent,update_20230227</labels>
#<benchmark_refs>CSCv6,CSCv7,CSCv8,LEVEL</benchmark_refs>
#<variables>
#  <variable>
#    <name>BANNER_TEXT</name>
#    <default>All activities performed on this system will be monitored.</default>
#    <description>Banner Text</description>
#    <info>This is the text for the warning a user receives when logging onto the system.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>NTP_SERVER</name>
#    <default>0.pool.ntp.org</default>
#    <description>NTP server address</description>
#    <info>The IP address or FQDN of the Network Time Protocol (NTP) server for your organization.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>FALLBACK_NTP_SERVER</name>
#    <default>ntp.ubuntu.com</default>
#    <description>Fallback NTP</description>
#    <info>The IP address or FQDN of the Fallback Network Time Protocol (NTP) server for your organization. Only applies if timesyncd is used</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>SYSLOG_SERVER</name>
#    <default>192\.168\.0\.1</default>
#    <description>Log</description>
#    <info>Host address of the sytem log server for the target to send logs to.</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PAM_DENY_VALUE</name>
#    <default>5</default>
#    <description>PAM Max Password Attempts Value</description>
#    <info>Maximum number of password attempts for PAM Common Auth settings that conform to your site policy.</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#  <variable>
#    <name>PAM_LOCKOUT_VALUE</name>
#    <default>900</default>
#    <description>PAM Account Lockout Delay Value</description>
#    <info>Account lockout delay for PAM Common Auth settings that conform to your site policy.</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#  <variable>
#    <name>PLATFORM_VERSION</name>
#    <default>11</default>
#    <description>Linux Distribution Version</description>
#    <info>Linux Distribution Version</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_MINIMUM_LENGTH</name>
#    <default>(1[4-9]|[2-9][0-9])</default>
#    <description>Password Minimum Length</description>
#    <info>Password Minimum Length found in /etc/security/pwquality.conf</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_MINCLASS</name>
#    <default>4</default>
#    <description>Password Complexity Value</description>
#    <info>Password complexity value found in /etc/security/pwquality.conf</info>
#    <value_type>INTEGER</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_DCREDIT</name>
#    <default>-[1-9]</default>
#    <description>Password digits required</description>
#    <info>Password digits value found in /etc/security/pwquality.conf</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_UCREDIT</name>
#    <default>-[1-9]</default>
#    <description>Password uppercase characters required</description>
#    <info>Password uppercase characters found in /etc/security/pwquality.conf</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_OCREDIT</name>
#    <default>-[1-9]</default>
#    <description>Password symbols required</description>
#    <info>Password symbols value found in /etc/security/pwquality.conf</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_LCREDIT</name>
#    <default>-[1-9]</default>
#    <description>Password lowercase characters required</description>
#    <info>Password lowercase characters found in /etc/security/pwquality.conf</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_MAX_DAYS</name>
#    <default>([1-9]|[1-9][0-9]|[12][0-9][0-9]|3[0-5][0-9]|36[0-5])</default>
#    <description>Password expiration</description>
#    <info>Password expiration parameter found in /etc/login.defs</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_WARN_AGE</name>
#    <default>([7-9]|[1-9][0-9]+)</default>
#    <description>Password expiration warning</description>
#    <info>Password expiration warning parameter found in /etc/login.defs</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_MIN_DAYS</name>
#    <default>([1-9]|[1-9][0-9]+)</default>
#    <description>Password minimum days</description>
#    <info>Minimum days between password changes parameter found in /etc/login.defs</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>INACTIVE_PASSWORD_LOCK</name>
#    <default>(30|[1-2][0-9]|[1-9])</default>
#    <description>Password lock for inactive users</description>
#    <info>The given period of time a user can be inactive before account is locked</info>
#    <value_type>STRING</value_type>
#  </variable>
#  <variable>
#    <name>PASSWORD_ENCRYPTION</name>
#    <default>yescrypt</default>
#    <description>Password encryption to use</description>
#    <info>Type of encryption to use for passwords, as found in /etc/login.defs</info>
#    <value_type>STRING</value_type>
#  </variable>
#</variables>
#</ui_metadata>

<check_type:"Unix">

<if>
  <condition type:"AND">
    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "Debian found"
      file        : "/etc/debian_version"
      regex       : "@PLATFORM_VERSION@"
      expect      : "@PLATFORM_VERSION@"
    </custom_item>
  </condition>

  <then>
    <report type:"PASSED">
      description : "CIS_Debian_Linux_11_v1.0.0_L1_Workstation.audit from CIS Debian Linux 11 Benchmark"
      see_also    : "https://workbench.cisecurity.org/files/4115"
    </report>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.1 Ensure mounting of cramfs filesystems is disabled - modprobe"
      info        : "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
      solution    : "Run the following script to disable cramfs:

#!/usr/bin/env bash

{
   l_mname='cramfs' # set module name
   # Check if the module exists on the system
   if [ -z '$(modprobe -n -v '$l_mname' 2>&1 | grep -Pi -- '\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory')' ]; then
      # Remediate loadable
      l_loadable='$(modprobe -n -v '$l_mname')'
      [ '$(wc -l <<< '$l_loadable')' -gt '1' ] && l_loadable='$(grep -P -- '(^\h*install|\b$l_mname)\b' <<< '$l_loadable')'
      if ! grep -Pq -- '^\h*install \/bin\/(true|false)' <<< '$l_loadable'; then
         echo -e ' - setting module: \'$l_mname\' to be not loadable'
         echo -e 'install $l_mname /bin/false' >> /etc/modprobe.d/'$l_mname'.conf
      fi
      # Remediate loaded
      if lsmod | grep '$l_mname' > /dev/null 2>&1; then
         echo -e ' - unloading module \'$l_mname\''
         modprobe -r '$l_mname'
      fi
      # Remediate deny list
      if ! modprobe --showconfig | grep -Pq -- '^\h*blacklist\h+$l_mname\b'; then
         echo -e ' - deny listing \'$l_mname\''
         echo -e 'blacklist $l_mname' >> /etc/modprobe.d/'$l_mname'.conf
      fi
   else
      echo -e ' - Nothing to remediate\n - Module \'$l_mname\' doesn't exist on the system'
   fi
}"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/modprobe -n -v cramfs | /bin/grep -E '(cramfs|install)'"
      expect      : "install /bin/(true|false)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.1.1 Ensure mounting of cramfs filesystems is disabled - lsmod"
      info        : "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
      solution    : "Run the following script to disable cramfs:

#!/usr/bin/env bash

{
   l_mname='cramfs' # set module name
   # Check if the module exists on the system
   if [ -z '$(modprobe -n -v '$l_mname' 2>&1 | grep -Pi -- '\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory')' ]; then
      # Remediate loadable
      l_loadable='$(modprobe -n -v '$l_mname')'
      [ '$(wc -l <<< '$l_loadable')' -gt '1' ] && l_loadable='$(grep -P -- '(^\h*install|\b$l_mname)\b' <<< '$l_loadable')'
      if ! grep -Pq -- '^\h*install \/bin\/(true|false)' <<< '$l_loadable'; then
         echo -e ' - setting module: \'$l_mname\' to be not loadable'
         echo -e 'install $l_mname /bin/false' >> /etc/modprobe.d/'$l_mname'.conf
      fi
      # Remediate loaded
      if lsmod | grep '$l_mname' > /dev/null 2>&1; then
         echo -e ' - unloading module \'$l_mname\''
         modprobe -r '$l_mname'
      fi
      # Remediate deny list
      if ! modprobe --showconfig | grep -Pq -- '^\h*blacklist\h+$l_mname\b'; then
         echo -e ' - deny listing \'$l_mname\''
         echo -e 'blacklist $l_mname' >> /etc/modprobe.d/'$l_mname'.conf
      fi
   else
      echo -e ' - Nothing to remediate\n - Module \'$l_mname\' doesn't exist on the system'
   fi
}"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/lsmod | /bin/grep cramfs | /usr/bin/awk \'{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}\'"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "1.1.1.1 Ensure mounting of cramfs filesystems is disabled - blacklist"
      info            : "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.

Rationale:

Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it."
      solution        : "Run the following script to disable cramfs:

#!/usr/bin/env bash

{
   l_mname='cramfs' # set module name
   # Check if the module exists on the system
   if [ -z '$(modprobe -n -v '$l_mname' 2>&1 | grep -Pi -- '\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory')' ]; then
      # Remediate loadable
      l_loadable='$(modprobe -n -v '$l_mname')'
      [ '$(wc -l <<< '$l_loadable')' -gt '1' ] && l_loadable='$(grep -P -- '(^\h*install|\b$l_mname)\b' <<< '$l_loadable')'
      if ! grep -Pq -- '^\h*install \/bin\/(true|false)' <<< '$l_loadable'; then
         echo -e ' - setting module: \'$l_mname\' to be not loadable'
         echo -e 'install $l_mname /bin/false' >> /etc/modprobe.d/'$l_mname'.conf
      fi
      # Remediate loaded
      if lsmod | grep '$l_mname' > /dev/null 2>&1; then
         echo -e ' - unloading module \'$l_mname\''
         modprobe -r '$l_mname'
      fi
      # Remediate deny list
      if ! modprobe --showconfig | grep -Pq -- '^\h*blacklist\h+$l_mname\b'; then
         echo -e ' - deny listing \'$l_mname\''
         echo -e 'blacklist $l_mname' >> /etc/modprobe.d/'$l_mname'.conf
      fi
   else
      echo -e ' - Nothing to remediate\n - Module \'$l_mname\' doesn't exist on the system'
   fi
}"
      reference       : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also        : "https://workbench.cisecurity.org/files/4115"
      file            : "/etc/modprobe.d/*"
      regex           : "^[^#]blacklist[\\s]+cramfs"
      expect          : "^[^#]blacklist[\\s]+cramfs"
      min_occurrences : "1"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.2.1 Ensure /tmp is a separate partition"
      info        : "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.

Rationale:

Making /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.

This can be accomplished by either mounting tmpfs to /tmp, or creating a separate partition for /tmp.

Impact:

Since the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.

Running out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.

/tmp utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab."
      solution    : "First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.

# systemctl unmask tmp.mount

For specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab or tmp.mount.
Example of /etc/fstab configured tmpfs file system with specific mount options:

tmpfs/tmptmpfs     defaults,rw,nosuid,nodev,noexec,relatime,size=2G  0 0

Example of tmp.mount configured tmpfs file system with specific mount options:

[Unit]
Description=Temporary Directory /tmp
ConditionPathIsSymbolicLink=!/tmp
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target
After=swap.target

[Mount]
What=tmpfs
Where=/tmp
Type=tmpfs"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/findmnt /tmp"
      expect      : "^[\\s]*/tmp[\\s].*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.2.2 Ensure nodev option set on /tmp partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /tmp."
      solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.
Example:

<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/findmnt /tmp -n"
      expect      : "nodev"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.2.3 Ensure noexec option set on /tmp partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp."
      solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.
Example:

<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/findmnt /tmp -n"
      expect      : "noexec"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.2.4 Ensure nosuid option set on /tmp partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp."
      solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.
Example:

<device> /tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /tmp with the configured options:

# mount -o remount /tmp"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/findmnt /tmp -n"
      expect      : "nosuid"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.3.2 Ensure nodev option set on /var partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /var filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var."
      solution    : "IF the /var partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.
Example:

<device> /var    <fstype>     defaults,rw,nosuid,nodev,relatime  0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.3.3 Ensure nosuid option set on /var partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var."
      solution    : "IF the /var partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.
Example:

<device> /var    <fstype>     defaults,rw,nosuid,nodev,relatime  0 0

Run the following command to remount /var with the configured options:

# mount -o remount /var"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.4.2 Ensure noexec option set on /var/tmp partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp."
      solution    : "IF the /var/tmp partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.
Example:

<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/tmp | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "(noexec|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.4.3 Ensure nosuid option set on /var/tmp partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp."
      solution    : "IF the /var/tmp partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.
Example:

<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/tmp | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "(nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.4.4 Ensure nodev option set on /var/tmp partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/tmp."
      solution    : "IF the /var/tmp partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.
Example:

<device> /var/tmp    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/tmp with the configured options:

# mount -o remount /var/tmp"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/tmp | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "(nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.5.2 Ensure nodev option set on /var/log partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log."
      solution    : "IF the /var/log partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.
Example:

<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/log | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.5.3 Ensure noexec option set on /var/log partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log."
      solution    : "IF the /var/log partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.
Example:

<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/log | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?noexec|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.5.4 Ensure nosuid option set on /var/log partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log."
      solution    : "IF the /var/log partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.
Example:

<device> /var/log    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/log with the configured options:

# mount -o remount /var/log"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/log | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.6.2 Ensure noexec option set on /var/log/audit partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Since the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit."
      solution    : "IF the /var/log/audit partition exists, edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var partition.
Example:

<device> /var/log/audit    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/log/audit | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?noexec|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.6.3 Ensure nodev option set on /var/log/audit partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log/audit."
      solution    : "IF the /var/log/audit partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.
Example:

<device> /var/log/audit    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/log/audit | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.6.4 Ensure nosuid option set on /var/log/audit partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit."
      solution    : "IF the /var/log/audit partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.
Example:

<device> /var/log/audit    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /var/log/audit with the configured options:

# mount -o remount /var/log/audit"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /var/log/audit | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.7.2 Ensure nodev option set on /home partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /home filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /home."
      solution    : "IF the /home partition exists, edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.
Example:

<device> /home    <fstype>     defaults,rw,nosuid,nodev,relatime  0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /home | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.7.3 Ensure nosuid option set on /home partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Since the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home."
      solution    : "IF the /home partition exists, edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.
Example:

<device> /home    <fstype>     defaults,rw,nosuid,nodev,relatime  0 0

Run the following command to remount /home with the configured options:

# mount -o remount /home"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /home | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.8.1 Ensure nodev option set on /dev/shm partition"
      info        : "The nodev mount option specifies that the filesystem cannot contain special devices.

Rationale:

Since the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions."
      solution    : "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.
Run the following command to remount /dev/shm using the updated options from /etc/fstab:

# mount -o remount /dev/shm

Additional Information:

/dev/shm should be added to /etc/fstab even though it is already being mounted on boot to add additional mount options."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /dev/shm | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nodev|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.8.2 Ensure noexec option set on /dev/shm partition"
      info        : "The noexec mount option specifies that the filesystem cannot contain executable binaries.

Rationale:

Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system."
      solution    : "Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.
Example:

<device> /dev/shm    <fstype>     defaults,rw,nosuid,nodev,noexec,relatime  0 0

Run the following command to remount /dev/shm with the configured options:

# mount -o remount /dev/shm

NOTE It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /dev/shm | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?noexec|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.1.8.3 Ensure nosuid option set on /dev/shm partition"
      info        : "The nosuid mount option specifies that the filesystem cannot contain setuid files.

Rationale:

Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them."
      solution    : "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.
Run the following command to remount /dev/shm using the updated options from /etc/fstab:

# mount -o remount /dev/shm

Additional Information:

/dev/shm should be added to /etc/fstab even though it is already being mounted on boot to add additional mount options."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/findmnt --kernel /dev/shm | /usr/bin/awk '{print} END {if (NR == 0) print \"not mounted\"}'"
      expect      : "([\\s]*[,]?nosuid|not mounted)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.2.1 Ensure package manager repositories are configured"
      info        : "Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.

Rationale:

If a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Configure your package manager repositories according to site policy."
      reference   : "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/apt-cache policy"
      expect      : ""
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "1.2.2 Ensure GPG keys are configured"
      info          : "Most packages managers implement GPG key signing to verify package integrity during installation.

Rationale:

It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution      : "Update your package manager GPG keys in accordance with site policy."
      reference     : "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7"
      see_also      : "https://workbench.cisecurity.org/files/4115"
      cmd           : "/usr/bin/apt-key list"
      expect        : ""
      dont_echo_cmd : YES
      severity      : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.3.1 Ensure AIDE is installed - aide"
      info        : "AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.

Rationale:

By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries."
      solution    : "Install AIDE using the appropriate package manager or manual installation:

# apt install aide aide-common

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.
Run the following commands to initialize AIDE:

# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

Additional Information:

The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Run prelink -ua to restore the binaries to their prelinked state, thus avoiding false positives from AIDE."
      reference   : "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s aide 2>&1"
      expect      : "install[\\s]+ok[\\s]+installed"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.3.1 Ensure AIDE is installed - aide-common"
      info        : "AIDE takes a snapshot of filesystem state including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.

Rationale:

By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries."
      solution    : "Install AIDE using the appropriate package manager or manual installation:

# apt install aide aide-common

Configure AIDE as appropriate for your environment. Consult the AIDE documentation for options.
Run the following commands to initialize AIDE:

# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

Additional Information:

The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Run prelink -ua to restore the binaries to their prelinked state, thus avoiding false positives from AIDE."
      reference   : "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s aide-common 2>&1"
      expect      : "install[\\s]+ok[\\s]+installed"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "aidecheck.service is enabled"
          cmd         : "/bin/systemctl is-enabled aidecheck.service"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "aidecheck.timer is enabled"
          cmd         : "/bin/systemctl is-enabled aidecheck.timer"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "aidecheck.timer is active"
          cmd         : "/bin/systemctl status aidecheck.timer"
          expect      : "^[\\s]*Active[\\s]*:[\\s]*active[\\s]*\\(running\\)"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.3.2 Ensure filesystem integrity is regularly checked"
          info        : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
          solution    : "If cron will be used to schedule and run aide check:
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --check

OR If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "echo 'aidecheck.service:'; /bin/systemctl is-enabled aidecheck.service; /bin/systemctl status aidecheck.service; echo ''; echo 'aidecheck.timer:'; /bin/systemctl is-enabled aidecheck.timer; /bin/systemctl status aidecheck.timer"
          expect      : "running"
        </custom_item>
      </then>

      <else>
        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "check root crontab"
              cmd         : "/usr/bin/crontab -u root -l | /bin/grep aide"
              expect      : "^([^#]+\\s+)?(\\/usr\\/s?bin\\/|^\\s*)aide(\\.wrapper)?\\s(--check|\\$AIDEARGS)\\b"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system          : "Linux"
              type            : FILE_CONTENT_CHECK
              description     : "1.3.2 Ensure filesystem integrity is regularly checked"
              info            : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
              solution        : "If cron will be used to schedule and run aide check:
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --check

OR If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
              reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
              see_also        : "https://workbench.cisecurity.org/files/4115"
              file            : "/etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/* /etc/cron.weekly/* /var/spool/cron/* /etc/crontab"
              regex           : "^([^#\\n\\r]+\\h+)?(\\/usr\\/s?bin\\/|^\\h*)aide(\\.wrapper)?\\h+(--check|([^#\\n\\r]+\\h+)?\\$AIDEARGS)\\b"
              expect          : "^([^#\\n\\r]+\\h+)?(\\/usr\\/s?bin\\/|^\\h*)aide(\\.wrapper)?\\h+(--check|([^#\\n\\r]+\\h+)?\\$AIDEARGS)\\b"
              min_occurrences : "1"
              string_required : NO
            </custom_item>
          </then>

          <else>
            <custom_item>
              system          : "Linux"
              type            : FILE_CONTENT_CHECK
              description     : "1.3.2 Ensure filesystem integrity is regularly checked"
              info            : "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.

Rationale:

Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion."
              solution        : "If cron will be used to schedule and run aide check:
Run the following command:

# crontab -u root -e

Add the following line to the crontab:

0 5 * * * /usr/bin/aide.wrapper --config /etc/aide/aide.conf --check

OR If aidecheck.service and aidecheck.timer will be used to schedule and run aide check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the following lines:

[Unit]
Description=Aide Check

[Service]
Type=simple
ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check

[Install]
WantedBy=multi-user.target

Create or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:

[Unit]
Description=Aide check every day at 5AM

[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service

[Install]
WantedBy=multi-user.target

Run the following commands:

# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*

# systemctl daemon-reload

# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer"
              reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|14.9,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
              see_also        : "https://workbench.cisecurity.org/files/4115"
              file            : "/etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/* /etc/cron.weekly/* /var/spool/cron/* /etc/crontab"
              regex           : "^([^#\\n\\r]+\\h+)?(\\/usr\\/s?bin\\/|^\\h*)aide(\\.wrapper)?\\h+(--check|([^#\\n\\r]+\\h+)?\\$AIDEARGS)\\b"
              expect          : "^([^#\\n\\r]+\\h+)?(\\/usr\\/s?bin\\/|^\\h*)aide(\\.wrapper)?\\h+(--check|([^#\\n\\r]+\\h+)?\\$AIDEARGS)\\b"
              min_occurrences : "1"
              string_required : NO
            </custom_item>
          </else>
        </if>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.4.1 Ensure bootloader password is set - 'set superusers'"
      info        : "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters

Rationale:

Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time).

Impact:

If password protection is enabled, only the designated superuser can edit a Grub 2 menu item by pressing 'e' or access the GRUB 2 command line by pressing 'c'

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable, the configuration files will have to be edited via the LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. Password will still be required to edit menu items.

More Information: https://help.ubuntu.com/community/Grub2/Passwords"
      solution    : "Create an encrypted password with grub-mkpasswd-pbkdf2:

# grub-mkpasswd-pbkdf2

Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>

Add the following into a custom /etc/grub.d configuration file:

cat <<EOF
set superusers='<username>'
password_pbkdf2 <username> <encrypted-password>
EOF

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.
If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=
Example:

CLASS='--class gnu-linux --class gnu --class os --unrestricted'

Run the following command to update the grub2 configuration:

# update-grub

Default Value:

This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Replace /boot/grub/grub.cfg with the appropriate grub configuration file for your environment.

Additional Information:

Changes to /etc/grub.d/10_linux may be overwritten during updates to the grub-common package. You should review any changes to this file before rebooting otherwise the system may unexpectedly prompt for a password on the next boot."
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/boot/grub/grub.cfg"
      regex       : "^[\\s]*set[\\s]+superusers[\\s]*="
      expect      : "^[\\s]*set[\\s]+superusers[\\s]*=[\\s]*[^\\s]+[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "1.4.1 Ensure bootloader password is set - 'passwd_pbkdf2'"
      info        : "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters

Rationale:

Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off AppArmor at boot time).

Impact:

If password protection is enabled, only the designated superuser can edit a Grub 2 menu item by pressing 'e' or access the GRUB 2 command line by pressing 'c'

If GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable, the configuration files will have to be edited via the LiveCD or other means to fix the problem

You can add --unrestricted to the menu entries to allow the system to boot without entering a password. Password will still be required to edit menu items.

More Information: https://help.ubuntu.com/community/Grub2/Passwords"
      solution    : "Create an encrypted password with grub-mkpasswd-pbkdf2:

# grub-mkpasswd-pbkdf2

Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>

Add the following into a custom /etc/grub.d configuration file:

cat <<EOF
set superusers='<username>'
password_pbkdf2 <username> <encrypted-password>
EOF

The superuser/user information and password should not be contained in the /etc/grub.d/00_header file as this file could be overwritten in a package update.
If there is a requirement to be able to boot/reboot without entering the password, edit /etc/grub.d/10_linux and add --unrestricted to the line CLASS=
Example:

CLASS='--class gnu-linux --class gnu --class os --unrestricted'

Run the following command to update the grub2 configuration:

# update-grub

Default Value:

This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Replace /boot/grub/grub.cfg with the appropriate grub configuration file for your environment.

Additional Information:

Changes to /etc/grub.d/10_linux may be overwritten during updates to the grub-common package. You should review any changes to this file before rebooting otherwise the system may unexpectedly prompt for a password on the next boot."
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/boot/grub/grub.cfg"
      regex       : "^[\\s]*password"
      expect      : "^[\\s]*password_pbkdf2[\\s]+[^\\s]+[\\s]+[^\\s]+[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.4.2 Ensure permissions on bootloader config are configured"
      info        : "The grub configuration file contains information on boot settings and passwords for unlocking boot options.

Rationale:

Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them."
      solution    : "Run the following commands to set permissions on your grub configuration:

# chown root:root /boot/grub/grub.cfg
# chmod u-wx,go-rwx /boot/grub/grub.cfg

Additional Information:

This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Replace /boot/grub/grub.cfg with the appropriate grub configuration file for your environment"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/boot/grub/grub.cfg"
      owner       : "root"
      mask        : "377"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.4.3 Ensure authentication required for single user mode"
      info        : "Single user mode is used for recovery when the system detects an issue during boot or by manual selection from the bootloader.

Rationale:

Requiring authentication in single user mode prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials."
      solution    : "Run the following command and follow the prompts to set a password for the root user:

# passwd root"
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/shadow"
      regex       : "^root:"
      expect      : "^root:[\\*!]:"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.1 Ensure address space layout randomization (ASLR) is enabled - sysctl"
      info        : "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Rationale:

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting."
      solution    : "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
kernel.randomize_va_space = 2
' >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2

Default Value:

kernel.randomize_va_space = 2"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl kernel.randomize_va_space"
      expect      : "^[\\s]*kernel\\.randomize_va_space[\\s]*=[\\s]*2[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.1 Ensure address space layout randomization (ASLR) is enabled - config"
      info        : "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.

Rationale:

Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting."
      solution    : "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
kernel.randomize_va_space = 2
' >> /etc/sysctl.d/60-kernel_sysctl.conf

Run the following command to set the active kernel parameter:

# sysctl -w kernel.randomize_va_space=2

Default Value:

kernel.randomize_va_space = 2"
      reference   : "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "grep -Es \"^\\s*kernel\\.randomize_va_space\\s*=\\s*([0-1]|[3-9]|[1-9][0-9]+)\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | /usr/bin/awk '{print} END {if (NR == 0) print \"pass - no invalid randomzie_va_space results found\"; else print \"fail\"}'"
      expect      : "pass - no invalid randomzie_va_space results found"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.2 Ensure prelink is not installed"
      info        : "prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.

Rationale:

The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc."
      solution    : "Run the following command to restore binaries to normal:

# prelink -ua

Uninstall prelink using the appropriate package manager or manual installation:

# apt purge prelink"
      reference   : "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s prelink 2>&1"
      expect      : "(?:(^[\\s]*dpkg-query: package \'prelink\' is not installed.*$)|(^[\\s]*Status: deinstall ok config-files.*$))*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.3 Ensure Automatic Error Reporting is not enabled - enabled"
      info        : "The Apport Error Reporting Service automatically generates crash reports for debugging

Rationale:

Apport collects potentially sensitive data, such as core dumps, stack traces, and log files. They can contain passwords, credit card numbers, serial numbers, and other private material."
      solution    : "Edit /etc/default/apport and add or edit the enabled parameter to equal 0:

enabled=0

Run the following commands to stop and disable the apport service

# systemctl stop apport.service
# systemctl --now disable apport.service

-- OR --
Run the following command to remove the apport package:

# apt purge apport

Default Value:

enabled=1"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg-query -s apport > /dev/null 2>&1 && grep -Psi -- '^\h*enabled\h*=\h*[^0]\b' /etc/default/apport | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "1.5.3 Ensure Automatic Error Reporting is not enabled - active"
      info          : "The Apport Error Reporting Service automatically generates crash reports for debugging

Rationale:

Apport collects potentially sensitive data, such as core dumps, stack traces, and log files. They can contain passwords, credit card numbers, serial numbers, and other private material."
      solution      : "Edit /etc/default/apport and add or edit the enabled parameter to equal 0:

enabled=0

Run the following commands to stop and disable the apport service

# systemctl stop apport.service
# systemctl --now disable apport.service

-- OR --
Run the following command to remove the apport package:

# apt purge apport

Default Value:

enabled=1"
      reference     : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also      : "https://workbench.cisecurity.org/files/4115"
      cmd           : "/usr/bin/systemctl is-enabled systemd-journal-upload.service | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
      expect        : "(disabled|masked|static)"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.4 Ensure core dumps are restricted - limits config"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

IF systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1005, T1005.000

TA0007"
      reference   : "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*\\*[\\s]+hard[\\s]+core[\\s]+0[\\s]*$' /etc/security/limits.conf /etc/security/limits.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.4 Ensure core dumps are restricted - sysctl"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

IF systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1005, T1005.000

TA0007"
      reference   : "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl fs.suid_dumpable"
      expect      : "^[\\s]*fs\\.suid_dumpable[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.5.4 Ensure core dumps are restricted - sysctl config"
      info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
      solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

IF systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1005, T1005.000

TA0007"
      reference   : "800-171|3.1.7,800-171|3.4.6,800-171|3.4.7,800-53|AC-6(10),800-53|CM-7,800-53r5|AC-6(10),800-53r5|CM-7,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,ITSG-33|CM-7,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15a,NIAv2|SS15c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*fs\\.suid_dumpable[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "coredump.service is installed"
          cmd         : "/usr/bin/dpkg -s systemd-coredump | /bin/grep Status: 2>&1"
          expect      : "^[\\s]*Status: install ok installed[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.5.4 Ensure core dumps are restricted - storage"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

IF systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1005, T1005.000

TA0007"
          reference   : "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/systemd/coredump.conf"
          regex       : "^[\\s]*Storage[\\s]*="
          expect      : "^[\\s]*Storage[\\s]*=[\\s]*none[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.5.4 Ensure core dumps are restricted - processsizemax"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

IF systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1005, T1005.000

TA0007"
          reference   : "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/systemd/coredump.conf"
          regex       : "^[\\s]*ProcessSizeMax[\\s]*="
          expect      : "^[\\s]*ProcessSizeMax[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.5.4 Ensure core dumps are restricted - storage"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

IF systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1005, T1005.000

TA0007"
          reference   : "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.5.4 Ensure core dumps are restricted - processsizemax"
          info        : "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system provides the ability to set a soft limit for core dumps, but this can be overridden by the user.

Rationale:

Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see limits.conf(5) ). In addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from dumping core."
          solution    : "Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:

* hard core 0

Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:

fs.suid_dumpable = 0

Run the following command to set the active kernel parameter:

# sysctl -w fs.suid_dumpable=0

IF systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:

Storage=none
ProcessSizeMax=0

Run the command:

systemctl daemon-reload

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1005, T1005.000

TA0007"
          reference   : "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1.1 Ensure AppArmor is installed - apparmor"
      info        : "AppArmor provides Mandatory Access Controls.

Rationale:

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
      solution    : "Install AppArmor.

# apt install apparmor apparmor-utils"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s apparmor | /bin/grep Status: 2>&1"
      expect      : "^[\\s]*Status: install ok installed[\\s]*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1.1 Ensure AppArmor is installed - apparmor-utils"
      info        : "AppArmor provides Mandatory Access Controls.

Rationale:

Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available."
      solution    : "Install AppArmor.

# apt install apparmor apparmor-utils"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s apparmor-utils | /bin/grep Status: 2>&1"
      expect      : "^[\\s]*Status: install ok installed[\\s]*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.6.1.2 Ensure AppArmor is enabled in the bootloader configuration - apparmor"
      info        : "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.

Note: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Rationale:

AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden."
      solution    : "Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX='apparmor=1 security=apparmor'

Run the following command to update the grub2 configuration:

# update-grub"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/boot/grub/grub.cfg"
      regex       : "^[\\s]*linux[\\s]*"
      expect      : "[Aa][Pp][Pp][Aa][Rr][Mm][Oo][Rr]=0"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.6.1.2 Ensure AppArmor is enabled in the bootloader configuration - security"
      info        : "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten by the bootloader boot parameters.

Note: This recommendation is designed around the grub bootloader, if LILO or another bootloader is in use in your environment enact equivalent settings.

Rationale:

AppArmor must be enabled at boot time in your bootloader configuration to ensure that the controls it provides are not overridden."
      solution    : "Edit /etc/default/grub and add the apparmor=1 and security=apparmor parameters to the GRUB_CMDLINE_LINUX= line

GRUB_CMDLINE_LINUX='apparmor=1 security=apparmor'

Run the following command to update the grub2 configuration:

# update-grub"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/boot/grub/grub.cfg"
      regex       : "^[\\s]*linux[\\s]*"
      expect      : "[Ss][Ee][Cc][Uu][Rr][Ii][Tt][Yy]=[^Aa][^Pp][^Pp][^Aa][^Rr][^Mm][^Oo][^Rr]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1.3 Ensure all AppArmor Profiles are in enforce or complain mode - loaded"
      info        : "AppArmor profiles define what resources applications are able to access.

Rationale:

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated."
      solution    : "Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

OR
Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/sbin/apparmor_status"
      expect      : "^[\\s]*[1-9][0-9]*[\\s]+profiles[\\s]+are[\\s]+loaded"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.6.1.3 Ensure all AppArmor Profiles are in enforce or complain mode - unconfined"
      info        : "AppArmor profiles define what resources applications are able to access.

Rationale:

Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that any policies that exist on the system are activated."
      solution    : "Run the following command to set all profiles to enforce mode:

# aa-enforce /etc/apparmor.d/*

OR
Run the following command to set all profiles to complain mode:

# aa-complain /etc/apparmor.d/*

Note: Any unconfined processes may need to have a profile created or activated for them and then be restarted"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/sbin/apparmor_status"
      expect      : "^[\\s]*0[\\s]+processes[\\s]+are[\\s]+unconfined"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.7.1 Ensure message of the day is configured properly - platform flags"
      info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
OR if the motd is not used, this file can be removed.
Run the following command to remove the motd file:

# rm /etc/motd

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1082, T1082.000, T1592, T1592.004

TA0007"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/motd"
      regex       : "\\\\[mrsv]"
      expect      : "\\\\[mrsv]"
      required    : NO
    </custom_item>

    <custom_item>
      system       : "Linux"
      type         : BANNER_CHECK
      description  : "1.7.1 Ensure message of the day is configured properly - banner"
      info         : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution     : "Edit the /etc/motd file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
OR if the motd is not used, this file can be removed.
Run the following command to remove the motd file:

# rm /etc/motd

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1082, T1082.000, T1592, T1592.004

TA0007"
      reference    : "800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also     : "https://workbench.cisecurity.org/files/4115"
      file         : "/etc/motd"
      content      : "@BANNER_TEXT@"
      is_substring : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.7.2 Ensure local login warning banner is configured properly - platform flags"
      info        : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version - or the operating system's name

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1082, T1082.000, T1592, T1592.004

TA0007"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/issue"
      regex       : "\\\\[mrsv]"
      expect      : "\\\\[mrsv]"
    </custom_item>

    <custom_item>
      system       : "Linux"
      type         : BANNER_CHECK
      description  : "1.7.2 Ensure local login warning banner is configured properly - banner"
      info         : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version - or the operating system's name

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution     : "Edit the /etc/issue file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1082, T1082.000, T1592, T1592.004

TA0007"
      reference    : "800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also     : "https://workbench.cisecurity.org/files/4115"
      file         : "/etc/issue"
      content      : "@BANNER_TEXT@"
      is_substring : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "1.7.3 Ensure remote login warning banner is configured properly - platform flags"
      info        : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution    : "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue.net

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1018, T1018.000, T1082, T1082.000, T1592, T1592.004

TA0007"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/issue.net"
      regex       : "\\\\[mrsv]"
      expect      : "\\\\[mrsv]"
    </custom_item>

    <custom_item>
      system       : "Linux"
      type         : BANNER_CHECK
      description  : "1.7.3 Ensure remote login warning banner is configured properly - banner"
      info         : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If mingetty(8) supports the following options, they display operating system information: \m - machine architecture \r - operating system release \s - operating system name \v - operating system version

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the ' uname -a ' command once they have logged in."
      solution     : "Edit the /etc/issue.net file with the appropriate contents according to your site policy, remove any instances of \m , \r , \s , \v or references to the OS platform

# echo 'Authorized uses only. All activity may be monitored and reported.' > /etc/issue.net

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1018, T1018.000, T1082, T1082.000, T1592, T1592.004

TA0007"
      reference    : "800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
      see_also     : "https://workbench.cisecurity.org/files/4115"
      file         : "/etc/issue.net"
      content      : "@BANNER_TEXT@"
      is_substring : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.7.4 Ensure permissions on /etc/motd are configured"
      info        : "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.

Rationale:

If the /etc/motd file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/motd :

# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)

OR run the following command to remove the /etc/motd file:

# rm /etc/motd

Default Value:

File doesn't exist

Additional Information:

If Message of the day is not needed, this file can be removed."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/motd"
      owner       : "root"
      mask        : "133"
      required    : NO
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.7.5 Ensure permissions on /etc/issue are configured"
      info        : "The contents of the /etc/issue file are displayed to users prior to login for local terminals.

Rationale:

If the /etc/issue file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/issue :

# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)

Default Value:

Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/issue"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "1.7.6 Ensure permissions on /etc/issue.net are configured"
      info        : "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.

Rationale:

If the /etc/issue.net file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information."
      solution    : "Run the following commands to set permissions on /etc/issue.net :

# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)

Default Value:

Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/issue.net"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <if>
      <condition type:"OR">
        <custom_item>
          type        : CMD_EXEC
          description : "GDM is installed"
          cmd         : "/usr/bin/dpkg -s gdm | /bin/grep Status: 2>&1"
          expect      : "^[\\s]*Status: install ok installed[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.8.2 Ensure GDM login banner is configured - banner-message-enable"
          info        : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place."
          solution    : "Run the following script to verify that the banner message is enabled and set:

#!/usr/bin/env bash

{
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   l_pcl='gdm gdm3' # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='$l_pkgoutput\n - Package: \'$l_pn\' exists on the system\n - checking configuration'
   done
   if [ -n '$l_pkgoutput' ]; then

      l_gdmprofile='gdm' # Set this to desired profile name IaW Local site policy
      l_bmessage=''Authorized uses only. All activity may be monitored and reported'' # Set to desired banner message
      if [ ! -f '/etc/dconf/profile/$l_gdmprofile' ]; then
         echo 'Creating profile \'$l_gdmprofile\''
         echo -e 'user-db:user\nsystem-db:$l_gdmprofile\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults' > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d '/etc/dconf/db/$l_gdmprofile.d/' ]; then
         echo 'Creating dconf database directory \'/etc/dconf/db/$l_gdmprofile.d/\''
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^\h*banner-message-enable\h*=\h*true\b' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo 'creating gdm keyfile for machine-wide settings'
         if ! grep -Piq -- '^\h*banner-message-enable\h*=\h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile='/etc/dconf/db/$l_gdmprofile.d/01-banner-message'
            echo -e '\n[org/gnome/login-screen]\nbanner-message-enable=true' >> '$l_kfile'
         else
            l_kfile='$(grep -Pil -- '^\h*banner-message-enable\h*=\h*' /etc/dconf/db/$l_gdmprofile.d/*)'
            ! grep -Pq '^\h*\[org\/gnome\/login-screen\]' '$l_kfile' && sed -ri '/^\s*banner-message-enable/ i\[org/gnome/login-screen]' '$l_kfile'
            ! grep -Pq '^\h*banner-message-enable\h*=\h*true\b' '$l_kfile' && sed -ri 's/^\s*(banner-message-enable\s*=\s*)(\S+)(\s*.*$)/\1true \3//' '$l_kfile'
 #           sed -ri '/^\s*\[org\/gnome\/login-screen\]/ a\\nbanner-message-enable=true' '$l_kfile'
         fi
      fi
      if ! grep -Piq '^\h*banner-message-text=[\'\']+\S+' '$l_kfile'; then
         sed -ri '/^\s*banner-message-enable/ a\banner-message-text=$l_bmessage' '$l_kfile'
      fi
      dconf update
   else
      echo -e '\n\n - GNOME Desktop Manager isn't installed\n - Recommendation is Not Applicable\n - No remediation required\n'
   fi
}

Note:

There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.

The banner message cannot be read from an external file.
OR

Run the following command to remove the gdm3 package:

# apt purge gdm3

Default Value:

disabled"
          reference   : "800-171|3.1.9,800-53|AC-8a.,800-53r5|AC-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8a.,LEVEL|1A,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/gdm3/greeter.dconf-defaults"
          regex       : "^[\\s]*banner-message-enable[\\s]*="
          expect      : "^[\\s]*banner-message-enable[\\s]*=[\\s]*true[\\s]*$"
        </custom_item>

        <custom_item>
          system       : "Linux"
          type         : BANNER_CHECK
          description  : "1.8.2 Ensure GDM login banner is configured - banner-message-text"
          info         : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place."
          solution     : "Run the following script to verify that the banner message is enabled and set:

#!/usr/bin/env bash

{
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   l_pcl='gdm gdm3' # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='$l_pkgoutput\n - Package: \'$l_pn\' exists on the system\n - checking configuration'
   done
   if [ -n '$l_pkgoutput' ]; then

      l_gdmprofile='gdm' # Set this to desired profile name IaW Local site policy
      l_bmessage=''Authorized uses only. All activity may be monitored and reported'' # Set to desired banner message
      if [ ! -f '/etc/dconf/profile/$l_gdmprofile' ]; then
         echo 'Creating profile \'$l_gdmprofile\''
         echo -e 'user-db:user\nsystem-db:$l_gdmprofile\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults' > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d '/etc/dconf/db/$l_gdmprofile.d/' ]; then
         echo 'Creating dconf database directory \'/etc/dconf/db/$l_gdmprofile.d/\''
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^\h*banner-message-enable\h*=\h*true\b' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo 'creating gdm keyfile for machine-wide settings'
         if ! grep -Piq -- '^\h*banner-message-enable\h*=\h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile='/etc/dconf/db/$l_gdmprofile.d/01-banner-message'
            echo -e '\n[org/gnome/login-screen]\nbanner-message-enable=true' >> '$l_kfile'
         else
            l_kfile='$(grep -Pil -- '^\h*banner-message-enable\h*=\h*' /etc/dconf/db/$l_gdmprofile.d/*)'
            ! grep -Pq '^\h*\[org\/gnome\/login-screen\]' '$l_kfile' && sed -ri '/^\s*banner-message-enable/ i\[org/gnome/login-screen]' '$l_kfile'
            ! grep -Pq '^\h*banner-message-enable\h*=\h*true\b' '$l_kfile' && sed -ri 's/^\s*(banner-message-enable\s*=\s*)(\S+)(\s*.*$)/\1true \3//' '$l_kfile'
 #           sed -ri '/^\s*\[org\/gnome\/login-screen\]/ a\\nbanner-message-enable=true' '$l_kfile'
         fi
      fi
      if ! grep -Piq '^\h*banner-message-text=[\'\']+\S+' '$l_kfile'; then
         sed -ri '/^\s*banner-message-enable/ a\banner-message-text=$l_bmessage' '$l_kfile'
      fi
      dconf update
   else
      echo -e '\n\n - GNOME Desktop Manager isn't installed\n - Recommendation is Not Applicable\n - No remediation required\n'
   fi
}

Note:

There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.

The banner message cannot be read from an external file.
OR

Run the following command to remove the gdm3 package:

# apt purge gdm3

Default Value:

disabled"
          reference    : "800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
          see_also     : "https://workbench.cisecurity.org/files/4115"
          file         : "/etc/gdm3/greeter.dconf-defaults"
          content      : "@BANNER_TEXT@"
          is_substring : YES
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "1.8.3 Ensure GDM disable-user-list option is enabled"
          info        : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

The disable-user-list option controls if a list of users is displayed on the login screen

Rationale:

Displaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on."
          solution    : "Run the following script to enable the disable-user-list option:
Note: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.

#!/usr/bin/env bash

{
   l_gdmprofile='gdm'
   if [ ! -f '/etc/dconf/profile/$l_gdmprofile' ]; then
      echo 'Creating profile \'$l_gdmprofile\''
      echo -e 'user-db:user\nsystem-db:$l_gdmprofile\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults' > /etc/dconf/profile/$l_gdmprofile
   fi
   if [ ! -d '/etc/dconf/db/$l_gdmprofile.d/' ]; then
      echo 'Creating dconf database directory \'/etc/dconf/db/$l_gdmprofile.d/\''
      mkdir /etc/dconf/db/$l_gdmprofile.d/
   fi
   if ! grep -Piq '^\h*disable-user-list\h*=\h*true\b' /etc/dconf/db/$l_gdmprofile.d/*; then
      echo 'creating gdm keyfile for machine-wide settings'
      if ! grep -Piq -- '^\h*\[org\/gnome\/login-screen\]' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo -e '\n[org/gnome/login-screen]\n# Do not show the user list\ndisable-user-list=true' >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen
      else
         sed -ri '/^\s*\[org\/gnome\/login-screen\]/ a\# Do not show the user list\ndisable-user-list=true' $(grep -Pil -- '^\h*\[org\/gnome\/login-screen\]' /etc/dconf/db/$l_gdmprofile.d/*)
      fi
   fi
   dconf update
}

Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.
OR
Run the following command to remove the GNOME package:

# apt purge gdm3

Default Value:

false"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/gdm3/greeter.dconf-defaults"
          regex       : "^[\\s]*disable-user-list[\\s]*="
          expect      : "^[\\s]*disable-user-list[\\s]*=[\\s]*true[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.8.4 Ensure GDM screen locks when the user is idle - idle-delay"
          info        : "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

idle-delay=uint32 {n} - Number of seconds of inactivity before the screen goes blank

lock-delay=uint32 {n} - Number of seconds after the screen is blank before locking the screen

Example key file:

# Specify the dconf path

[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank

# Set to 0 seconds if you want to deactivate the screensaver.

idle-delay=uint32 900

# Specify the dconf path

[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen

lock-delay=uint32 5

Rationale:

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended."
          solution    : "Create or edit a file in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.
Example:

# echo -e '\nuser-db:user\nsystem-db:local' >> /etc/dconf/profile/user

Create the directory /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/ if it doesn't already exist:
Example:

# mkdir /etc/dconf/db/local.d

Create the key file '/etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/{FILE_NAME} to provide information for the {NAME_OF_DCONF_DATABASE} database:
Example script:

#!/usr/bin/env bash

{
   l_key_file='/etc/dconf/db/local.d/00-screensaver'
   l_idmv='900' # Set max value for idle-delay in seconds (between 1 and 900)
   l_ldmv='5' # Set max value for lock-delay in seconds (between 0 and 5)
   {
      echo '# Specify the dconf path'
      echo '[org/gnome/desktop/session]'
      echo ''
      echo '# Number of seconds of inactivity before the screen goes blank'
      echo '# Set to 0 seconds if you want to deactivate the screensaver.'
      echo 'idle-delay=uint32 $l_idmv'
      echo ''
      echo '# Specify the dconf path'
      echo '[org/gnome/desktop/screensaver]'
      echo ''
      echo '# Number of seconds after the screen is blank before locking the screen'
      echo 'lock-delay=uint32 $l_ldmv'
   } > '$l_key_file'
}

Note: You must include the uint32 along with the integer key values as shown.
Run the following command to update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect."
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/grep -i idle-delay /etc/dconf/db/local.d/* | /usr/bin/awk '{print} END {if(NR==0) print \"Not found\" }'"
          expect      : ":?[\\s]*idle-delay[\\s]*=[\\s]*uint32[\\s]*([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.8.4 Ensure GDM screen locks when the user is idle - lock-delay"
          info        : "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

idle-delay=uint32 {n} - Number of seconds of inactivity before the screen goes blank

lock-delay=uint32 {n} - Number of seconds after the screen is blank before locking the screen

Example key file:

# Specify the dconf path

[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank

# Set to 0 seconds if you want to deactivate the screensaver.

idle-delay=uint32 900

# Specify the dconf path

[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen

lock-delay=uint32 5

Rationale:

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended."
          solution    : "Create or edit a file in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.
Example:

# echo -e '\nuser-db:user\nsystem-db:local' >> /etc/dconf/profile/user

Create the directory /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/ if it doesn't already exist:
Example:

# mkdir /etc/dconf/db/local.d

Create the key file '/etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/{FILE_NAME} to provide information for the {NAME_OF_DCONF_DATABASE} database:
Example script:

#!/usr/bin/env bash

{
   l_key_file='/etc/dconf/db/local.d/00-screensaver'
   l_idmv='900' # Set max value for idle-delay in seconds (between 1 and 900)
   l_ldmv='5' # Set max value for lock-delay in seconds (between 0 and 5)
   {
      echo '# Specify the dconf path'
      echo '[org/gnome/desktop/session]'
      echo ''
      echo '# Number of seconds of inactivity before the screen goes blank'
      echo '# Set to 0 seconds if you want to deactivate the screensaver.'
      echo 'idle-delay=uint32 $l_idmv'
      echo ''
      echo '# Specify the dconf path'
      echo '[org/gnome/desktop/screensaver]'
      echo ''
      echo '# Number of seconds after the screen is blank before locking the screen'
      echo 'lock-delay=uint32 $l_ldmv'
   } > '$l_key_file'
}

Note: You must include the uint32 along with the integer key values as shown.
Run the following command to update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect."
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/grep -i idle-delay /etc/dconf/db/local.d/* | /usr/bin/awk '{print} END {if(NR==0) print \"Not found\" }'"
          expect      : ":?[\\s]*idle-delay[\\s]*=[\\s]*uint32[\\s]*([1-5])[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.8.5 Ensure GDM screen locks cannot be overridden - idle-delay"
          info        : "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Example Lock File:

# Lock desktop screensaver settings

/org/gnome/desktop/session/idle-delay

/org/gnome/desktop/screensaver/lock-delay

Rationale:

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Without locking down the system settings, user settings take precedence over the system settings."
          solution    : "Run the following script to ensure screen locks can not be overridden:

#!/usr/bin/env bash

{
   # Check if GNMOE Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\n
   # determine system's package manager
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   # Check if GDM is installed
   l_pcl='gdm gdm3' # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='y' && echo -e '\n - Package: \'$l_pn\' exists on the system\n - remediating configuration if needed'
   done
   # Check configuration (If applicable)
   if [ -n '$l_pkgoutput' ]; then
      # Look for idle-delay to determine profile in use, needed for remaining tests
      l_kfd='/etc/dconf/db/$(grep -Psril '^\h*idle-delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      # Look for lock-delay to determine profile in use, needed for remaining tests
      l_kfd2='/etc/dconf/db/$(grep -Psril '^\h*lock-delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      if [ -d '$l_kfd' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Prilq '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' '$l_kfd'; then
            echo ' - \'idle-delay\' is locked in \'$(grep -Pril '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' '$l_kfd')\''
         else
            echo 'creating entry to lock \'idle-delay\''
            [ ! -d '$l_kfd'/locks ] && echo 'creating directory $l_kfd/locks' && mkdir '$l_kfd'/locks
            {
               echo -e '\n# Lock desktop screensaver idle-delay setting'
               echo '/org/gnome/desktop/session/idle-delay'
            } >> '$l_kfd'/locks/00-screensaver
         fi
      else
         echo -e ' - \'idle-delay\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM screen locks when the user is idle\' and follow this Recommendation again'
      fi
      if [ -d '$l_kfd2' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Prilq '^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' '$l_kfd2'; then
            echo ' - \'lock-delay\' is locked in \'$(grep -Pril '^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' '$l_kfd2')\''
         else
            echo 'creating entry to lock \'lock-delay\''
            [ ! -d '$l_kfd2'/locks ] && echo 'creating directory $l_kfd2/locks' && mkdir '$l_kfd2'/locks
            {
               echo -e '\n# Lock desktop screensaver lock-delay setting'
               echo '/org/gnome/desktop/screensaver/lock-delay'
            } >> '$l_kfd2'/locks/00-screensaver
         fi
      else
         echo -e ' - \'lock-delay\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM screen locks when the user is idle\' and follow this Recommendation again'
      fi
   else
      echo -e ' - GNOME Desktop Manager package is not installed on the system\n  - Recommendation is not applicable'
   fi
}

Run the following command to update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect."
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/grep -i /org/gnome/desktop/session/idle-delay /etc/dconf/db/local.d/locks/* | /usr/bin/awk '{print} END {if(NR==0) print \"Not found\" }'"
          expect      : ":?[\\s]*/org/gnome/desktop/session/idle-delay"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "1.8.5 Ensure GDM screen locks cannot be overridden - lock-delay"
          info        : "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Example Lock File:

# Lock desktop screensaver settings

/org/gnome/desktop/session/idle-delay

/org/gnome/desktop/screensaver/lock-delay

Rationale:

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Without locking down the system settings, user settings take precedence over the system settings."
          solution    : "Run the following script to ensure screen locks can not be overridden:

#!/usr/bin/env bash

{
   # Check if GNMOE Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\n
   # determine system's package manager
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   # Check if GDM is installed
   l_pcl='gdm gdm3' # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='y' && echo -e '\n - Package: \'$l_pn\' exists on the system\n - remediating configuration if needed'
   done
   # Check configuration (If applicable)
   if [ -n '$l_pkgoutput' ]; then
      # Look for idle-delay to determine profile in use, needed for remaining tests
      l_kfd='/etc/dconf/db/$(grep -Psril '^\h*idle-delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      # Look for lock-delay to determine profile in use, needed for remaining tests
      l_kfd2='/etc/dconf/db/$(grep -Psril '^\h*lock-delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      if [ -d '$l_kfd' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Prilq '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' '$l_kfd'; then
            echo ' - \'idle-delay\' is locked in \'$(grep -Pril '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' '$l_kfd')\''
         else
            echo 'creating entry to lock \'idle-delay\''
            [ ! -d '$l_kfd'/locks ] && echo 'creating directory $l_kfd/locks' && mkdir '$l_kfd'/locks
            {
               echo -e '\n# Lock desktop screensaver idle-delay setting'
               echo '/org/gnome/desktop/session/idle-delay'
            } >> '$l_kfd'/locks/00-screensaver
         fi
      else
         echo -e ' - \'idle-delay\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM screen locks when the user is idle\' and follow this Recommendation again'
      fi
      if [ -d '$l_kfd2' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Prilq '^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' '$l_kfd2'; then
            echo ' - \'lock-delay\' is locked in \'$(grep -Pril '^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' '$l_kfd2')\''
         else
            echo 'creating entry to lock \'lock-delay\''
            [ ! -d '$l_kfd2'/locks ] && echo 'creating directory $l_kfd2/locks' && mkdir '$l_kfd2'/locks
            {
               echo -e '\n# Lock desktop screensaver lock-delay setting'
               echo '/org/gnome/desktop/screensaver/lock-delay'
            } >> '$l_kfd2'/locks/00-screensaver
         fi
      else
         echo -e ' - \'lock-delay\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM screen locks when the user is idle\' and follow this Recommendation again'
      fi
   else
      echo -e ' - GNOME Desktop Manager package is not installed on the system\n  - Recommendation is not applicable'
   fi
}

Run the following command to update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect."
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/grep -i /org/gnome/desktop/screensaver/lock-delay /etc/dconf/db/local.d/locks/* | /usr/bin/awk '{print} END {if(NR==0) print \"Not found\" }'"
          expect      : ":?[\\s]*/org/gnome/desktop/screensaver/lock-delay"
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "1.8.8 Ensure GDM autorun-never is enabled"
          info            : "The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

Rationale:

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute."
          solution        : "Run the following script to set autorun-never to true for GDM users:

#!/usr/bin/env bash

{
   l_pkgoutput='' l_output='' l_output2=''
   l_gpname='local' # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\n
   # determine system's package manager
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   # Check if GDM is installed
   l_pcl='gdm gdm3' # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='$l_pkgoutput\n - Package: \'$l_pn\' exists on the system\n - checking configuration'
   done
   echo -e '$l_pkgoutput'
   # Check configuration (If applicable)
   if [ -n '$l_pkgoutput' ]; then
      echo -e '$l_pkgoutput'
      # Look for existing settings and set variables if they exist
      l_kfile='$(grep -Prils -- '^\h*autorun-never\b' /etc/dconf/db/*.d)'
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f '$l_kfile' ]; then
         l_gpname='$(awk -F\/ '{split($(NF-1),a,'.');print a[1]}' <<< '$l_kfile')'
         echo ' - updating dconf profile name to \'$l_gpname\''
      fi
      [ ! -f '$l_kfile' ] && l_kfile='/etc/dconf/db/$l_gpname.d/00-media-autorun'
      # Check if profile file exists
      if grep -Pq -- '^\h*system-db:$l_gpname\b' /etc/dconf/profile/*; then
         echo -e '\n - dconf database profile exists in: \'$(grep -Pl -- '^\h*system-db:$l_gpname\b' /etc/dconf/profile/*)\''
      else
         [ ! -f '/etc/dconf/profile/user' ] && l_gpfile='/etc/dconf/profile/user' || l_gpfile='/etc/dconf/profile/user2'
         echo -e ' - creating dconf database profile'
         {
            echo -e '\nuser-db:user'
            echo 'system-db:$l_gpname'
         } >> '$l_gpfile'
      fi
      # create dconf directory if it doesn't exists
      l_gpdir='/etc/dconf/db/$l_gpname.d'
      if [ -d '$l_gpdir' ]; then
         echo ' - The dconf database directory \'$l_gpdir\' exists'
      else
         echo ' - creating dconf database directory \'$l_gpdir\''
         mkdir '$l_gpdir'
      fi
      # check autorun-never setting
      if grep -Pqs -- '^\h*autorun-never\h*=\h*true\b' '$l_kfile'; then
         echo ' - \'autorun-never\' is set to true in: \'$l_kfile\''
      else
         echo ' - creating or updating \'autorun-never\' entry in \'$l_kfile\''
         if grep -Psq -- '^\h*autorun-never' '$l_kfile'; then
            sed -ri 's/(^\s*autorun-never\s*=\s*)(\S+)(\s*.*)$/\1true \3/' '$l_kfile'
         else
            ! grep -Psq -- '\^\h*\[org\/gnome\/desktop\/media-handling\]\b' '$l_kfile' && echo '[org/gnome/desktop/media-handling]' >> '$l_kfile'
            sed -ri '/^\s*\[org\/gnome\/desktop\/media-handling\]/a \\nautorun-never=true' '$l_kfile'
         fi
      fi
   else
      echo -e '\n - GNOME Desktop Manager package is not installed on the system\n  - Recommendation is not applicable'
   fi
   # update dconf database
   dconf update
}

Default Value:

false"
          reference       : "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/dconf/db/local.d/*"
          regex           : "autorun-never[\\s]*="
          expect          : "autorun-never[\\s]*=[\\s]*true"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "1.8.9 Ensure GDM autorun-never is not overridden"
          info            : "The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Example Lock File:

# Lock desktop media-handling settings

/org/gnome/desktop/media-handling/autorun-never

Rationale:

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute."
          solution        : "Run the following script to ensure that autorun-never=true cannot be overridden:

#!/usr/bin/env bash

{
   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\n
   # determine system's package manager
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   # Check if GDM is installed
   l_pcl='gdm gdm3' # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='y' && echo -e '\n - Package: \'$l_pn\' exists on the system\n - remediating configuration if needed'
   done
   # Check configuration (If applicable)
   if [ -n '$l_pkgoutput' ]; then
      # Look for autorun to determine profile in use, needed for remaining tests
      l_kfd='/etc/dconf/db/$(grep -Psril '^\h*autorun-never\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      if [ -d '$l_kfd' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Priq '^\h*\/org/gnome\/desktop\/media-handling\/autorun-never\b' '$l_kfd'; then
            echo ' - \'autorun-never\' is locked in \'$(grep -Pril '^\h*\/org/gnome\/desktop\/media-handling\/autorun-never\b' '$l_kfd')\''
         else
            echo ' - creating entry to lock \'autorun-never\''
            [ ! -d '$l_kfd'/locks ] && echo 'creating directory $l_kfd/locks' && mkdir '$l_kfd'/locks
            {
               echo -e '\n# Lock desktop media-handling autorun-never setting'
               echo '/org/gnome/desktop/media-handling/autorun-never'
            } >> '$l_kfd'/locks/00-media-autorun
         fi
      else
         echo -e ' - \'autorun-never\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM autorun-never is enabled\' and follow this Recommendation again'
      fi
      # update dconf database
      dconf update
   else
      echo -e ' - GNOME Desktop Manager package is not installed on the system\n  - Recommendation is not applicable'
   fi
}"
          reference       : "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/dconf/db/local.d/locks/*"
          regex           : "^[\\s]*/org/gnome/desktop/media-handling/autorun-never[\\s]*$"
          expect          : "^[\\s]*/org/gnome/desktop/media-handling/autorun-never[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK_NOT
          description : "1.8.10 Ensure XDCMP is not enabled"
          info        : "X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays

Rationale:

XDMCP is inherently insecure.

XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user

XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server."
          solution    : "Edit the file /etc/gdm3/custom.conf and remove the line:

Enable=true

Default Value:

false (This is denoted by no Enabled= entry in the file /etc/gdm3/custom.conf in the [xdmcp] section"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/gdm3/custom.conf"
          regex       : "^[\\s]*[Ee]nable[\\s]*="
          expect      : "^[\\s]*[Ee]nable[\\s]*=[\\s]*true[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "1.8.2 Ensure GDM login banner is configured - banner-message-enable"
          info        : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place."
          solution    : "Run the following script to verify that the banner message is enabled and set:

#!/usr/bin/env bash

{
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   l_pcl='gdm gdm3' # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='$l_pkgoutput\n - Package: \'$l_pn\' exists on the system\n - checking configuration'
   done
   if [ -n '$l_pkgoutput' ]; then

      l_gdmprofile='gdm' # Set this to desired profile name IaW Local site policy
      l_bmessage=''Authorized uses only. All activity may be monitored and reported'' # Set to desired banner message
      if [ ! -f '/etc/dconf/profile/$l_gdmprofile' ]; then
         echo 'Creating profile \'$l_gdmprofile\''
         echo -e 'user-db:user\nsystem-db:$l_gdmprofile\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults' > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d '/etc/dconf/db/$l_gdmprofile.d/' ]; then
         echo 'Creating dconf database directory \'/etc/dconf/db/$l_gdmprofile.d/\''
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^\h*banner-message-enable\h*=\h*true\b' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo 'creating gdm keyfile for machine-wide settings'
         if ! grep -Piq -- '^\h*banner-message-enable\h*=\h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile='/etc/dconf/db/$l_gdmprofile.d/01-banner-message'
            echo -e '\n[org/gnome/login-screen]\nbanner-message-enable=true' >> '$l_kfile'
         else
            l_kfile='$(grep -Pil -- '^\h*banner-message-enable\h*=\h*' /etc/dconf/db/$l_gdmprofile.d/*)'
            ! grep -Pq '^\h*\[org\/gnome\/login-screen\]' '$l_kfile' && sed -ri '/^\s*banner-message-enable/ i\[org/gnome/login-screen]' '$l_kfile'
            ! grep -Pq '^\h*banner-message-enable\h*=\h*true\b' '$l_kfile' && sed -ri 's/^\s*(banner-message-enable\s*=\s*)(\S+)(\s*.*$)/\1true \3//' '$l_kfile'
 #           sed -ri '/^\s*\[org\/gnome\/login-screen\]/ a\\nbanner-message-enable=true' '$l_kfile'
         fi
      fi
      if ! grep -Piq '^\h*banner-message-text=[\'\']+\S+' '$l_kfile'; then
         sed -ri '/^\s*banner-message-enable/ a\banner-message-text=$l_bmessage' '$l_kfile'
      fi
      dconf update
   else
      echo -e '\n\n - GNOME Desktop Manager isn't installed\n - Recommendation is Not Applicable\n - No remediation required\n'
   fi
}

Note:

There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.

The banner message cannot be read from an external file.
OR

Run the following command to remove the gdm3 package:

# apt purge gdm3

Default Value:

disabled"
          reference   : "800-171|3.1.9,800-53|AC-8a.,800-53r5|AC-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8a.,LEVEL|1A,NESA|M5.2.5,NESA|T5.5.1,NIAv2|AM10a,NIAv2|AM10b,NIAv2|AM10c,NIAv2|AM10d,NIAv2|AM10e,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.2 Ensure GDM login banner is configured - banner-message-text"
          info        : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

Rationale:

Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place."
          solution    : "Run the following script to verify that the banner message is enabled and set:

#!/usr/bin/env bash

{
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   l_pcl='gdm gdm3' # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='$l_pkgoutput\n - Package: \'$l_pn\' exists on the system\n - checking configuration'
   done
   if [ -n '$l_pkgoutput' ]; then

      l_gdmprofile='gdm' # Set this to desired profile name IaW Local site policy
      l_bmessage=''Authorized uses only. All activity may be monitored and reported'' # Set to desired banner message
      if [ ! -f '/etc/dconf/profile/$l_gdmprofile' ]; then
         echo 'Creating profile \'$l_gdmprofile\''
         echo -e 'user-db:user\nsystem-db:$l_gdmprofile\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults' > /etc/dconf/profile/$l_gdmprofile
      fi
      if [ ! -d '/etc/dconf/db/$l_gdmprofile.d/' ]; then
         echo 'Creating dconf database directory \'/etc/dconf/db/$l_gdmprofile.d/\''
         mkdir /etc/dconf/db/$l_gdmprofile.d/
      fi
      if ! grep -Piq '^\h*banner-message-enable\h*=\h*true\b' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo 'creating gdm keyfile for machine-wide settings'
         if ! grep -Piq -- '^\h*banner-message-enable\h*=\h*' /etc/dconf/db/$l_gdmprofile.d/*; then
            l_kfile='/etc/dconf/db/$l_gdmprofile.d/01-banner-message'
            echo -e '\n[org/gnome/login-screen]\nbanner-message-enable=true' >> '$l_kfile'
         else
            l_kfile='$(grep -Pil -- '^\h*banner-message-enable\h*=\h*' /etc/dconf/db/$l_gdmprofile.d/*)'
            ! grep -Pq '^\h*\[org\/gnome\/login-screen\]' '$l_kfile' && sed -ri '/^\s*banner-message-enable/ i\[org/gnome/login-screen]' '$l_kfile'
            ! grep -Pq '^\h*banner-message-enable\h*=\h*true\b' '$l_kfile' && sed -ri 's/^\s*(banner-message-enable\s*=\s*)(\S+)(\s*.*$)/\1true \3//' '$l_kfile'
 #           sed -ri '/^\s*\[org\/gnome\/login-screen\]/ a\\nbanner-message-enable=true' '$l_kfile'
         fi
      fi
      if ! grep -Piq '^\h*banner-message-text=[\'\']+\S+' '$l_kfile'; then
         sed -ri '/^\s*banner-message-enable/ a\banner-message-text=$l_bmessage' '$l_kfile'
      fi
      dconf update
   else
      echo -e '\n\n - GNOME Desktop Manager isn't installed\n - Recommendation is Not Applicable\n - No remediation required\n'
   fi
}

Note:

There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.

The banner message cannot be read from an external file.
OR

Run the following command to remove the gdm3 package:

# apt purge gdm3

Default Value:

disabled"
          reference   : "800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.3 Ensure GDM disable-user-list option is enabled"
          info        : "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.

The disable-user-list option controls if a list of users is displayed on the login screen

Rationale:

Displaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on."
          solution    : "Run the following script to enable the disable-user-list option:
Note: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.

#!/usr/bin/env bash

{
   l_gdmprofile='gdm'
   if [ ! -f '/etc/dconf/profile/$l_gdmprofile' ]; then
      echo 'Creating profile \'$l_gdmprofile\''
      echo -e 'user-db:user\nsystem-db:$l_gdmprofile\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults' > /etc/dconf/profile/$l_gdmprofile
   fi
   if [ ! -d '/etc/dconf/db/$l_gdmprofile.d/' ]; then
      echo 'Creating dconf database directory \'/etc/dconf/db/$l_gdmprofile.d/\''
      mkdir /etc/dconf/db/$l_gdmprofile.d/
   fi
   if ! grep -Piq '^\h*disable-user-list\h*=\h*true\b' /etc/dconf/db/$l_gdmprofile.d/*; then
      echo 'creating gdm keyfile for machine-wide settings'
      if ! grep -Piq -- '^\h*\[org\/gnome\/login-screen\]' /etc/dconf/db/$l_gdmprofile.d/*; then
         echo -e '\n[org/gnome/login-screen]\n# Do not show the user list\ndisable-user-list=true' >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen
      else
         sed -ri '/^\s*\[org\/gnome\/login-screen\]/ a\# Do not show the user list\ndisable-user-list=true' $(grep -Pil -- '^\h*\[org\/gnome\/login-screen\]' /etc/dconf/db/$l_gdmprofile.d/*)
      fi
   fi
   dconf update
}

Note: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.
OR
Run the following command to remove the GNOME package:

# apt purge gdm3

Default Value:

false"
          reference   : "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.4 Ensure GDM screen locks when the user is idle - idle-delay"
          info        : "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

idle-delay=uint32 {n} - Number of seconds of inactivity before the screen goes blank

lock-delay=uint32 {n} - Number of seconds after the screen is blank before locking the screen

Example key file:

# Specify the dconf path

[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank

# Set to 0 seconds if you want to deactivate the screensaver.

idle-delay=uint32 900

# Specify the dconf path

[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen

lock-delay=uint32 5

Rationale:

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended."
          solution    : "Create or edit a file in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.
Example:

# echo -e '\nuser-db:user\nsystem-db:local' >> /etc/dconf/profile/user

Create the directory /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/ if it doesn't already exist:
Example:

# mkdir /etc/dconf/db/local.d

Create the key file '/etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/{FILE_NAME} to provide information for the {NAME_OF_DCONF_DATABASE} database:
Example script:

#!/usr/bin/env bash

{
   l_key_file='/etc/dconf/db/local.d/00-screensaver'
   l_idmv='900' # Set max value for idle-delay in seconds (between 1 and 900)
   l_ldmv='5' # Set max value for lock-delay in seconds (between 0 and 5)
   {
      echo '# Specify the dconf path'
      echo '[org/gnome/desktop/session]'
      echo ''
      echo '# Number of seconds of inactivity before the screen goes blank'
      echo '# Set to 0 seconds if you want to deactivate the screensaver.'
      echo 'idle-delay=uint32 $l_idmv'
      echo ''
      echo '# Specify the dconf path'
      echo '[org/gnome/desktop/screensaver]'
      echo ''
      echo '# Number of seconds after the screen is blank before locking the screen'
      echo 'lock-delay=uint32 $l_ldmv'
   } > '$l_key_file'
}

Note: You must include the uint32 along with the integer key values as shown.
Run the following command to update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect."
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.4 Ensure GDM screen locks when the user is idle - lock-delay"
          info        : "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

idle-delay=uint32 {n} - Number of seconds of inactivity before the screen goes blank

lock-delay=uint32 {n} - Number of seconds after the screen is blank before locking the screen

Example key file:

# Specify the dconf path

[org/gnome/desktop/session]

# Number of seconds of inactivity before the screen goes blank

# Set to 0 seconds if you want to deactivate the screensaver.

idle-delay=uint32 900

# Specify the dconf path

[org/gnome/desktop/screensaver]

# Number of seconds after the screen is blank before locking the screen

lock-delay=uint32 5

Rationale:

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended."
          solution    : "Create or edit a file in the /etc/dconf/profile/ and verify it includes the following:

user-db:user
system-db:{NAME_OF_DCONF_DATABASE}

Note: local is the name of a dconf database used in the examples.
Example:

# echo -e '\nuser-db:user\nsystem-db:local' >> /etc/dconf/profile/user

Create the directory /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/ if it doesn't already exist:
Example:

# mkdir /etc/dconf/db/local.d

Create the key file '/etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/{FILE_NAME} to provide information for the {NAME_OF_DCONF_DATABASE} database:
Example script:

#!/usr/bin/env bash

{
   l_key_file='/etc/dconf/db/local.d/00-screensaver'
   l_idmv='900' # Set max value for idle-delay in seconds (between 1 and 900)
   l_ldmv='5' # Set max value for lock-delay in seconds (between 0 and 5)
   {
      echo '# Specify the dconf path'
      echo '[org/gnome/desktop/session]'
      echo ''
      echo '# Number of seconds of inactivity before the screen goes blank'
      echo '# Set to 0 seconds if you want to deactivate the screensaver.'
      echo 'idle-delay=uint32 $l_idmv'
      echo ''
      echo '# Specify the dconf path'
      echo '[org/gnome/desktop/screensaver]'
      echo ''
      echo '# Number of seconds after the screen is blank before locking the screen'
      echo 'lock-delay=uint32 $l_ldmv'
   } > '$l_key_file'
}

Note: You must include the uint32 along with the integer key values as shown.
Run the following command to update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect."
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.5 Ensure GDM screen locks cannot be overridden - idle-delay"
          info        : "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Example Lock File:

# Lock desktop screensaver settings

/org/gnome/desktop/session/idle-delay

/org/gnome/desktop/screensaver/lock-delay

Rationale:

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Without locking down the system settings, user settings take precedence over the system settings."
          solution    : "Run the following script to ensure screen locks can not be overridden:

#!/usr/bin/env bash

{
   # Check if GNMOE Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\n
   # determine system's package manager
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   # Check if GDM is installed
   l_pcl='gdm gdm3' # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='y' && echo -e '\n - Package: \'$l_pn\' exists on the system\n - remediating configuration if needed'
   done
   # Check configuration (If applicable)
   if [ -n '$l_pkgoutput' ]; then
      # Look for idle-delay to determine profile in use, needed for remaining tests
      l_kfd='/etc/dconf/db/$(grep -Psril '^\h*idle-delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      # Look for lock-delay to determine profile in use, needed for remaining tests
      l_kfd2='/etc/dconf/db/$(grep -Psril '^\h*lock-delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      if [ -d '$l_kfd' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Prilq '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' '$l_kfd'; then
            echo ' - \'idle-delay\' is locked in \'$(grep -Pril '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' '$l_kfd')\''
         else
            echo 'creating entry to lock \'idle-delay\''
            [ ! -d '$l_kfd'/locks ] && echo 'creating directory $l_kfd/locks' && mkdir '$l_kfd'/locks
            {
               echo -e '\n# Lock desktop screensaver idle-delay setting'
               echo '/org/gnome/desktop/session/idle-delay'
            } >> '$l_kfd'/locks/00-screensaver
         fi
      else
         echo -e ' - \'idle-delay\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM screen locks when the user is idle\' and follow this Recommendation again'
      fi
      if [ -d '$l_kfd2' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Prilq '^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' '$l_kfd2'; then
            echo ' - \'lock-delay\' is locked in \'$(grep -Pril '^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' '$l_kfd2')\''
         else
            echo 'creating entry to lock \'lock-delay\''
            [ ! -d '$l_kfd2'/locks ] && echo 'creating directory $l_kfd2/locks' && mkdir '$l_kfd2'/locks
            {
               echo -e '\n# Lock desktop screensaver lock-delay setting'
               echo '/org/gnome/desktop/screensaver/lock-delay'
            } >> '$l_kfd2'/locks/00-screensaver
         fi
      else
         echo -e ' - \'lock-delay\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM screen locks when the user is idle\' and follow this Recommendation again'
      fi
   else
      echo -e ' - GNOME Desktop Manager package is not installed on the system\n  - Recommendation is not applicable'
   fi
}

Run the following command to update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect."
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.5 Ensure GDM screen locks cannot be overridden - lock-delay"
          info        : "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Example Lock File:

# Lock desktop screensaver settings

/org/gnome/desktop/session/idle-delay

/org/gnome/desktop/screensaver/lock-delay

Rationale:

Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.

Without locking down the system settings, user settings take precedence over the system settings."
          solution    : "Run the following script to ensure screen locks can not be overridden:

#!/usr/bin/env bash

{
   # Check if GNMOE Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\n
   # determine system's package manager
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   # Check if GDM is installed
   l_pcl='gdm gdm3' # Space seporated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='y' && echo -e '\n - Package: \'$l_pn\' exists on the system\n - remediating configuration if needed'
   done
   # Check configuration (If applicable)
   if [ -n '$l_pkgoutput' ]; then
      # Look for idle-delay to determine profile in use, needed for remaining tests
      l_kfd='/etc/dconf/db/$(grep -Psril '^\h*idle-delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      # Look for lock-delay to determine profile in use, needed for remaining tests
      l_kfd2='/etc/dconf/db/$(grep -Psril '^\h*lock-delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      if [ -d '$l_kfd' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Prilq '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' '$l_kfd'; then
            echo ' - \'idle-delay\' is locked in \'$(grep -Pril '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' '$l_kfd')\''
         else
            echo 'creating entry to lock \'idle-delay\''
            [ ! -d '$l_kfd'/locks ] && echo 'creating directory $l_kfd/locks' && mkdir '$l_kfd'/locks
            {
               echo -e '\n# Lock desktop screensaver idle-delay setting'
               echo '/org/gnome/desktop/session/idle-delay'
            } >> '$l_kfd'/locks/00-screensaver
         fi
      else
         echo -e ' - \'idle-delay\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM screen locks when the user is idle\' and follow this Recommendation again'
      fi
      if [ -d '$l_kfd2' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Prilq '^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' '$l_kfd2'; then
            echo ' - \'lock-delay\' is locked in \'$(grep -Pril '^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' '$l_kfd2')\''
         else
            echo 'creating entry to lock \'lock-delay\''
            [ ! -d '$l_kfd2'/locks ] && echo 'creating directory $l_kfd2/locks' && mkdir '$l_kfd2'/locks
            {
               echo -e '\n# Lock desktop screensaver lock-delay setting'
               echo '/org/gnome/desktop/screensaver/lock-delay'
            } >> '$l_kfd2'/locks/00-screensaver
         fi
      else
         echo -e ' - \'lock-delay\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM screen locks when the user is idle\' and follow this Recommendation again'
      fi
   else
      echo -e ' - GNOME Desktop Manager package is not installed on the system\n  - Recommendation is not applicable'
   fi
}

Run the following command to update the system databases:

# dconf update

Note: Users must log out and back in again before the system-wide settings take effect."
          reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.8 Ensure GDM autorun-never is enabled"
          info        : "The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

Rationale:

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute."
          solution    : "Run the following script to set autorun-never to true for GDM users:

#!/usr/bin/env bash

{
   l_pkgoutput='' l_output='' l_output2=''
   l_gpname='local' # Set to desired dconf profile name (default is local)
   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\n
   # determine system's package manager
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   # Check if GDM is installed
   l_pcl='gdm gdm3' # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='$l_pkgoutput\n - Package: \'$l_pn\' exists on the system\n - checking configuration'
   done
   echo -e '$l_pkgoutput'
   # Check configuration (If applicable)
   if [ -n '$l_pkgoutput' ]; then
      echo -e '$l_pkgoutput'
      # Look for existing settings and set variables if they exist
      l_kfile='$(grep -Prils -- '^\h*autorun-never\b' /etc/dconf/db/*.d)'
      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
      if [ -f '$l_kfile' ]; then
         l_gpname='$(awk -F\/ '{split($(NF-1),a,'.');print a[1]}' <<< '$l_kfile')'
         echo ' - updating dconf profile name to \'$l_gpname\''
      fi
      [ ! -f '$l_kfile' ] && l_kfile='/etc/dconf/db/$l_gpname.d/00-media-autorun'
      # Check if profile file exists
      if grep -Pq -- '^\h*system-db:$l_gpname\b' /etc/dconf/profile/*; then
         echo -e '\n - dconf database profile exists in: \'$(grep -Pl -- '^\h*system-db:$l_gpname\b' /etc/dconf/profile/*)\''
      else
         [ ! -f '/etc/dconf/profile/user' ] && l_gpfile='/etc/dconf/profile/user' || l_gpfile='/etc/dconf/profile/user2'
         echo -e ' - creating dconf database profile'
         {
            echo -e '\nuser-db:user'
            echo 'system-db:$l_gpname'
         } >> '$l_gpfile'
      fi
      # create dconf directory if it doesn't exists
      l_gpdir='/etc/dconf/db/$l_gpname.d'
      if [ -d '$l_gpdir' ]; then
         echo ' - The dconf database directory \'$l_gpdir\' exists'
      else
         echo ' - creating dconf database directory \'$l_gpdir\''
         mkdir '$l_gpdir'
      fi
      # check autorun-never setting
      if grep -Pqs -- '^\h*autorun-never\h*=\h*true\b' '$l_kfile'; then
         echo ' - \'autorun-never\' is set to true in: \'$l_kfile\''
      else
         echo ' - creating or updating \'autorun-never\' entry in \'$l_kfile\''
         if grep -Psq -- '^\h*autorun-never' '$l_kfile'; then
            sed -ri 's/(^\s*autorun-never\s*=\s*)(\S+)(\s*.*)$/\1true \3/' '$l_kfile'
         else
            ! grep -Psq -- '\^\h*\[org\/gnome\/desktop\/media-handling\]\b' '$l_kfile' && echo '[org/gnome/desktop/media-handling]' >> '$l_kfile'
            sed -ri '/^\s*\[org\/gnome\/desktop\/media-handling\]/a \\nautorun-never=true' '$l_kfile'
         fi
      fi
   else
      echo -e '\n - GNOME Desktop Manager package is not installed on the system\n  - Recommendation is not applicable'
   fi
   # update dconf database
   dconf update
}

Default Value:

false"
          reference   : "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.9 Ensure GDM autorun-never is not overridden"
          info        : "The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

Example Lock File:

# Lock desktop media-handling settings

/org/gnome/desktop/media-handling/autorun-never

Rationale:

Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute."
          solution    : "Run the following script to ensure that autorun-never=true cannot be overridden:

#!/usr/bin/env bash

{
   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\n
   # determine system's package manager
   l_pkgoutput=''
   if command -v dpkg-query > /dev/null 2>&1; then
      l_pq='dpkg-query -W'
   elif command -v rpm > /dev/null 2>&1; then
      l_pq='rpm -q'
   fi
   # Check if GDM is installed
   l_pcl='gdm gdm3' # Space separated list of packages to check
   for l_pn in $l_pcl; do
      $l_pq '$l_pn' > /dev/null 2>&1 && l_pkgoutput='y' && echo -e '\n - Package: \'$l_pn\' exists on the system\n - remediating configuration if needed'
   done
   # Check configuration (If applicable)
   if [ -n '$l_pkgoutput' ]; then
      # Look for autorun to determine profile in use, needed for remaining tests
      l_kfd='/etc/dconf/db/$(grep -Psril '^\h*autorun-never\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,'.');print a[1]}').d' #set directory of key file to be locked
      if [ -d '$l_kfd' ]; then # If key file directory doesn't exist, options can't be locked
         if grep -Priq '^\h*\/org/gnome\/desktop\/media-handling\/autorun-never\b' '$l_kfd'; then
            echo ' - \'autorun-never\' is locked in \'$(grep -Pril '^\h*\/org/gnome\/desktop\/media-handling\/autorun-never\b' '$l_kfd')\''
         else
            echo ' - creating entry to lock \'autorun-never\''
            [ ! -d '$l_kfd'/locks ] && echo 'creating directory $l_kfd/locks' && mkdir '$l_kfd'/locks
            {
               echo -e '\n# Lock desktop media-handling autorun-never setting'
               echo '/org/gnome/desktop/media-handling/autorun-never'
            } >> '$l_kfd'/locks/00-media-autorun
         fi
      else
         echo -e ' - \'autorun-never\' is not set so it can not be locked\n - Please follow Recommendation \'Ensure GDM autorun-never is enabled\' and follow this Recommendation again'
      fi
      # update dconf database
      dconf update
   else
      echo -e ' - GNOME Desktop Manager package is not installed on the system\n  - Recommendation is not applicable'
   fi
}"
          reference   : "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "1.8.10 Ensure XDCMP is not enabled"
          info        : "X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays

Rationale:

XDMCP is inherently insecure.

XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user

XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server."
          solution    : "Edit the file /etc/gdm3/custom.conf and remove the line:

Enable=true

Default Value:

false (This is denoted by no Enabled= entry in the file /etc/gdm3/custom.conf in the [xdmcp] section"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "1.9 Ensure updates, patches, and additional security software are installed"
      info        : "Periodically patches are released for included software either due to security flaws or to include additional functionality.

Rationale:

Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected."
      solution    : "Run the following command to update all packages following local site policy guidance on applying updates and patches:

# apt upgrade

OR

# apt dist-upgrade

Additional Information:

Site policy may mandate a testing period before install onto production systems for available updates.

upgrade - is used to install the newest versions of all packages currently installed on the system from the sources enumerated in /etc/apt/sources.list. Packages currently installed with new versions available are retrieved and upgraded; under no circumstances are currently installed packages removed, or packages not already installed retrieved and installed. New versions of currently installed packages that cannot be upgraded without changing the install status of another package will be left at their current version. An update must be performed first so that apt knows that new versions of packages are available.

dist-upgrade - in addition to performing the function of upgrade, also intelligently handles changing dependencies with new versions of packages; apt has a 'smart' conflict resolution system, and it will attempt to upgrade the most important packages at the expense of less important ones if necessary. So, dist-upgrade command may remove some packages. The /etc/apt/sources.list file contains a list of locations from which to retrieve desired package files. See also apt_preferences(5) for a mechanism for overriding the general settings for individual packages."
      reference   : "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/apt-get -s upgrade | egrep -v '(Reading|Building|Calculating)'"
      expect      : "^[\\s]*0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded"
    </custom_item>

    <if>
      <condition type:"OR">
        <custom_item>
          type        : CMD_EXEC
          description : "systemd-timesyncd is installed"
          cmd         : "/bin/systemctl is-enabled systemd-timesyncd"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "NTP is installed"
          cmd         : "/bin/systemctl is-enabled ntp"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "Chrony is installed"
          cmd         : "/bin/systemctl is-enabled chrony"
          expect      : "enabled"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "2.1.1.1 Ensure a single time synchronization daemon is in use"
          info        : "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Note:

On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use and follows local site policy. In this scenario, this section should be skipped

Only one time synchronization method should be in use on the system. Configuring multiple time synchronization methods could lead to unexpected or unreliable results

Rationale:

Time synchronization is important to support time sensitive security mechanisms and ensures log files have consistent time records across the enterprise, which aids in forensic investigations."
          solution    : "On physical systems, and virtual systems where host based time synchronization is not available.
Select one of the three time synchronization daemons; chrony (1), systemd-timesyncd (2), or ntp (3), and following the remediation procedure for the selected daemon.
Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:

chrony

Run the following command to install chrony:

# apt install chrony

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl --now mask systemd-timesyncd.service

Run the following command to remove the ntp package:

# apt purge ntp

NOTE:

Subsection: Configure chrony should be followed

Subsections: Configure systemd-timesyncd and Configure ntp should be skipped

systemd-timesyncd

Run the following command to remove the chrony package:

# apt purge chrony

Run the following command to remove the ntp package:

# apt purge ntp

NOTE:

Subsection: Configure systemd-timesyncd should be followed

Subsections: Configure chrony and Configure ntp should be skipped

ntp

Run the following command to install ntp:

# apt install ntp

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl --now mask systemd-timesyncd.service

Run the following command to remove the chrony package:

# apt purge chrony

NOTE:

Subsection: Configure ntp should be followed

Subsections: Configure chrony and Configure systemd-timesyncd should be skipped"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </then>

      <else>
        <report type:"FAILED">
          description : "2.1.1.1 Ensure a single time synchronization daemon is in use"
          info        : "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.

Note:

On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use and follows local site policy. In this scenario, this section should be skipped

Only one time synchronization method should be in use on the system. Configuring multiple time synchronization methods could lead to unexpected or unreliable results

Rationale:

Time synchronization is important to support time sensitive security mechanisms and ensures log files have consistent time records across the enterprise, which aids in forensic investigations."
          solution    : "On physical systems, and virtual systems where host based time synchronization is not available.
Select one of the three time synchronization daemons; chrony (1), systemd-timesyncd (2), or ntp (3), and following the remediation procedure for the selected daemon.
Note: enabling more than one synchronization daemon could lead to unexpected or unreliable results:

chrony

Run the following command to install chrony:

# apt install chrony

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl --now mask systemd-timesyncd.service

Run the following command to remove the ntp package:

# apt purge ntp

NOTE:

Subsection: Configure chrony should be followed

Subsections: Configure systemd-timesyncd and Configure ntp should be skipped

systemd-timesyncd

Run the following command to remove the chrony package:

# apt purge chrony

Run the following command to remove the ntp package:

# apt purge ntp

NOTE:

Subsection: Configure systemd-timesyncd should be followed

Subsections: Configure chrony and Configure ntp should be skipped

ntp

Run the following command to install ntp:

# apt install ntp

Run the following commands to stop and mask the systemd-timesyncd daemon:

# systemctl stop systemd-timesyncd.service

# systemctl --now mask systemd-timesyncd.service

Run the following command to remove the chrony package:

# apt purge chrony

NOTE:

Subsection: Configure ntp should be followed

Subsections: Configure chrony and Configure systemd-timesyncd should be skipped"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "systemd-timesyncd is enabled"
          cmd         : "/bin/systemctl is-enabled systemd-timesyncd"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "systemd-timesyncd is running"
          cmd         : "/bin/systemctl is-active systemd-timesyncd"
          expect      : "active"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.1.3.1 Ensure systemd-timesyncd configured with authorized timeserver - NTP"
          info        : "NTP=

A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list.

FallbackNTP=

A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.

Rationale:

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "Edit or create a file in /etc/systemd/timesyncd.conf.d ending in .conf and add the NTP= and/or FallbackNTP= lines to the [Time] section:
Example:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
-AND/OR-
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Note: Servers added to these line(s) should follow local site policy. NIST servers are for example. The timesyncd.conf.d directory may need to be created
Example script: The following example script will create the systemd-timesyncd drop-in configuration snippet:

#!/usr/bin/env bash

ntp_ts='time.nist.gov'
ntp_fb='time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov'
disfile='/etc/systemd/timesyncd.conf.d/50-timesyncd.conf'
if ! find /etc/systemd -type f -name '*.conf' -exec grep -Ph '^\h*NTP=\H+' {} +; then
   [ ! -d /etc/systemd/timesyncd.conf.d ] && mkdir /etc/systemd/timesyncd.conf.d
   ! grep -Pqs '^\h*\[Time\]' '$disfile' && echo '[Time]' >> '$disfile'
   echo 'NTP=$ntp_ts' >> '$disfile'
fi
if ! find /etc/systemd -type f -name '*.conf' -exec grep -Ph '^\h*FallbackNTP=\H+' {} +; then
   [ ! -d /etc/systemd/timesyncd.conf.d ] && mkdir /etc/systemd/timesyncd.conf.d
   ! grep -Pqs '^\h*\[Time\]' '$disfile' && echo '[Time]' >> '$disfile'
   echo 'FallbackNTP=$ntp_fb' >> '$disfile'
fi

Run the following command to reload the systemd-timesyncd configuration:

# systemctl try-reload-or-restart systemd-timesyncd

OR
If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd:

# systemctl --now mask systemd-timesyncd

Default Value:

#NTP=

#FallbackNTP="
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/systemd/timesyncd.conf"
          regex       : "^NTP[\\s]*="
          expect      : "^NTP[\\s]*=@NTP_SERVER@"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.1.3.1 Ensure systemd-timesyncd configured with authorized timeserver - FallbackNTP"
          info        : "NTP=

A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list.

FallbackNTP=

A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.

Rationale:

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "Edit or create a file in /etc/systemd/timesyncd.conf.d ending in .conf and add the NTP= and/or FallbackNTP= lines to the [Time] section:
Example:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
-AND/OR-
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Note: Servers added to these line(s) should follow local site policy. NIST servers are for example. The timesyncd.conf.d directory may need to be created
Example script: The following example script will create the systemd-timesyncd drop-in configuration snippet:

#!/usr/bin/env bash

ntp_ts='time.nist.gov'
ntp_fb='time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov'
disfile='/etc/systemd/timesyncd.conf.d/50-timesyncd.conf'
if ! find /etc/systemd -type f -name '*.conf' -exec grep -Ph '^\h*NTP=\H+' {} +; then
   [ ! -d /etc/systemd/timesyncd.conf.d ] && mkdir /etc/systemd/timesyncd.conf.d
   ! grep -Pqs '^\h*\[Time\]' '$disfile' && echo '[Time]' >> '$disfile'
   echo 'NTP=$ntp_ts' >> '$disfile'
fi
if ! find /etc/systemd -type f -name '*.conf' -exec grep -Ph '^\h*FallbackNTP=\H+' {} +; then
   [ ! -d /etc/systemd/timesyncd.conf.d ] && mkdir /etc/systemd/timesyncd.conf.d
   ! grep -Pqs '^\h*\[Time\]' '$disfile' && echo '[Time]' >> '$disfile'
   echo 'FallbackNTP=$ntp_fb' >> '$disfile'
fi

Run the following command to reload the systemd-timesyncd configuration:

# systemctl try-reload-or-restart systemd-timesyncd

OR
If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd:

# systemctl --now mask systemd-timesyncd

Default Value:

#NTP=

#FallbackNTP="
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/systemd/timesyncd.conf"
          regex       : "^FallbackNTP[\\s]*="
          expect      : "^FallbackNTP[\\s]*=@FALLBACK_NTP_SERVER@"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.1.3.2 Ensure systemd-timesyncd is enabled and running - enabled"
          info        : "systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network

Rationale:

systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF systemd-timesyncd is in use on the system, run the following commands:
Run the following command to unmask systemd-timesyncd.service:

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service:

# systemctl --now enable systemd-timesyncd.service

OR
If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd:

# systemctl --now mask systemd-timesyncd.service"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-enabled systemd-timesyncd"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.1.3.2 Ensure systemd-timesyncd is enabled and running - running"
          info        : "systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network

Rationale:

systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF systemd-timesyncd is in use on the system, run the following commands:
Run the following command to unmask systemd-timesyncd.service:

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service:

# systemctl --now enable systemd-timesyncd.service

OR
If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd:

# systemctl --now mask systemd-timesyncd.service"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-active systemd-timesyncd"
          expect      : "active"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.1.3.1 Ensure systemd-timesyncd configured with authorized timeserver - NTP"
          info        : "NTP=

A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list.

FallbackNTP=

A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.

Rationale:

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "Edit or create a file in /etc/systemd/timesyncd.conf.d ending in .conf and add the NTP= and/or FallbackNTP= lines to the [Time] section:
Example:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
-AND/OR-
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Note: Servers added to these line(s) should follow local site policy. NIST servers are for example. The timesyncd.conf.d directory may need to be created
Example script: The following example script will create the systemd-timesyncd drop-in configuration snippet:

#!/usr/bin/env bash

ntp_ts='time.nist.gov'
ntp_fb='time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov'
disfile='/etc/systemd/timesyncd.conf.d/50-timesyncd.conf'
if ! find /etc/systemd -type f -name '*.conf' -exec grep -Ph '^\h*NTP=\H+' {} +; then
   [ ! -d /etc/systemd/timesyncd.conf.d ] && mkdir /etc/systemd/timesyncd.conf.d
   ! grep -Pqs '^\h*\[Time\]' '$disfile' && echo '[Time]' >> '$disfile'
   echo 'NTP=$ntp_ts' >> '$disfile'
fi
if ! find /etc/systemd -type f -name '*.conf' -exec grep -Ph '^\h*FallbackNTP=\H+' {} +; then
   [ ! -d /etc/systemd/timesyncd.conf.d ] && mkdir /etc/systemd/timesyncd.conf.d
   ! grep -Pqs '^\h*\[Time\]' '$disfile' && echo '[Time]' >> '$disfile'
   echo 'FallbackNTP=$ntp_fb' >> '$disfile'
fi

Run the following command to reload the systemd-timesyncd configuration:

# systemctl try-reload-or-restart systemd-timesyncd

OR
If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd:

# systemctl --now mask systemd-timesyncd

Default Value:

#NTP=

#FallbackNTP="
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.3.1 Ensure systemd-timesyncd configured with authorized timeserver - FallbackNTP"
          info        : "NTP=

A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list.

FallbackNTP=

A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.

Rationale:

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "Edit or create a file in /etc/systemd/timesyncd.conf.d ending in .conf and add the NTP= and/or FallbackNTP= lines to the [Time] section:
Example:

[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
-AND/OR-
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers

Note: Servers added to these line(s) should follow local site policy. NIST servers are for example. The timesyncd.conf.d directory may need to be created
Example script: The following example script will create the systemd-timesyncd drop-in configuration snippet:

#!/usr/bin/env bash

ntp_ts='time.nist.gov'
ntp_fb='time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov'
disfile='/etc/systemd/timesyncd.conf.d/50-timesyncd.conf'
if ! find /etc/systemd -type f -name '*.conf' -exec grep -Ph '^\h*NTP=\H+' {} +; then
   [ ! -d /etc/systemd/timesyncd.conf.d ] && mkdir /etc/systemd/timesyncd.conf.d
   ! grep -Pqs '^\h*\[Time\]' '$disfile' && echo '[Time]' >> '$disfile'
   echo 'NTP=$ntp_ts' >> '$disfile'
fi
if ! find /etc/systemd -type f -name '*.conf' -exec grep -Ph '^\h*FallbackNTP=\H+' {} +; then
   [ ! -d /etc/systemd/timesyncd.conf.d ] && mkdir /etc/systemd/timesyncd.conf.d
   ! grep -Pqs '^\h*\[Time\]' '$disfile' && echo '[Time]' >> '$disfile'
   echo 'FallbackNTP=$ntp_fb' >> '$disfile'
fi

Run the following command to reload the systemd-timesyncd configuration:

# systemctl try-reload-or-restart systemd-timesyncd

OR
If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd:

# systemctl --now mask systemd-timesyncd

Default Value:

#NTP=

#FallbackNTP="
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.3.2 Ensure systemd-timesyncd is enabled and running - enabled"
          info        : "systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network

Rationale:

systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF systemd-timesyncd is in use on the system, run the following commands:
Run the following command to unmask systemd-timesyncd.service:

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service:

# systemctl --now enable systemd-timesyncd.service

OR
If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd:

# systemctl --now mask systemd-timesyncd.service"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.3.2 Ensure systemd-timesyncd is enabled and running - running"
          info        : "systemd-timesyncd is a daemon that has been added for synchronizing the system clock across the network

Rationale:

systemd-timesyncd needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF systemd-timesyncd is in use on the system, run the following commands:
Run the following command to unmask systemd-timesyncd.service:

# systemctl unmask systemd-timesyncd.service

Run the following command to enable and start systemd-timesyncd.service:

# systemctl --now enable systemd-timesyncd.service

OR
If another time synchronization service is in use on the system, run the following command to stop and mask systemd-timesyncd:

# systemctl --now mask systemd-timesyncd.service"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "chrony is enabled"
          cmd         : "/bin/systemctl is-enabled chrony"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "chrony is running"
          cmd         : "/bin/systemctl is-active chrony"
          expect      : "active"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.1.2.1 Ensure chrony is configured with authorized timeserver - server"
          info        : "server

The server directive specifies an NTP server which can be used as a time source. The client-server relationship is strictly hierarchical: a client might synchronize its system time to that of the server, but the server's system time will never be influenced by that of a client.

This directive can be used multiple times to specify multiple servers.

The directive is immediately followed by either the name of the server, or its IP address.

pool

The syntax of this directive is similar to that for the server directive, except that it is used to specify a pool of NTP servers rather than a single NTP server. The pool name is expected to resolve to multiple addresses which might change over time.

This directive can be used multiple times to specify multiple pools.

All options valid in the server directive can be used in this directive too.

Rationale:

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "Edit /etc/chrony/chrony.conf or a file ending in .sources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:
pool directive:

pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive

server directive:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run one of the following commands to load the updated time sources into chronyd running config:

# systemctl restart chronyd

- OR if sources are in a .sources file -

# chronyc reload sources

OR
If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/chrony/chrony.conf"
          regex       : "^[\\s]*(server|pool)[\\s]+(?:@NTP_SERVER@|@FALLBACK_NTP_SERVER@)"
          expect      : "^[\\s]*(server|pool)[\\s]+(?:@NTP_SERVER@|@FALLBACK_NTP_SERVER@)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.1.2.2 Ensure chrony is running as user _chrony"
          info        : "The chrony package is installed with a dedicated user account _chrony. This account is granted the access required by the chronyd service

Rationale:

The chronyd service should run with only the required privlidges"
          solution    : "Add or edit the user line to /etc/chrony/chrony.conf or a file ending in .conf in /etc/chrony/conf.d/:

user _chrony

OR
If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony

Default Value:

user _chrony"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/ps -ef | /usr/bin/grep chronyd | /usr/bin/grep -v grep | /usr/bin/cut -d ' ' -f 1"
          expect      : "chrony"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.1.2.3 Ensure chrony is enabled and running - enabled"
          info        : "chrony is a daemon for synchronizing the system clock across the network

Rationale:

chrony needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF chrony is in use on the system, run the following commands:
Run the following command to unmask chrony.service:

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service:

# systemctl --now enable chrony.service

OR
If another time synchronization service is in use on the system, run the following command to remove chrony:

# apt purge chrony"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-enabled chrony"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.1.2.3 Ensure chrony is enabled and running - running"
          info        : "chrony is a daemon for synchronizing the system clock across the network

Rationale:

chrony needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF chrony is in use on the system, run the following commands:
Run the following command to unmask chrony.service:

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service:

# systemctl --now enable chrony.service

OR
If another time synchronization service is in use on the system, run the following command to remove chrony:

# apt purge chrony"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-active chrony"
          expect      : "active"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.1.2.1 Ensure chrony is configured with authorized timeserver - server"
          info        : "server

The server directive specifies an NTP server which can be used as a time source. The client-server relationship is strictly hierarchical: a client might synchronize its system time to that of the server, but the server's system time will never be influenced by that of a client.

This directive can be used multiple times to specify multiple servers.

The directive is immediately followed by either the name of the server, or its IP address.

pool

The syntax of this directive is similar to that for the server directive, except that it is used to specify a pool of NTP servers rather than a single NTP server. The pool name is expected to resolve to multiple addresses which might change over time.

This directive can be used multiple times to specify multiple pools.

All options valid in the server directive can be used in this directive too.

Rationale:

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "Edit /etc/chrony/chrony.conf or a file ending in .sources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:
pool directive:

pool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive

server directive:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run one of the following commands to load the updated time sources into chronyd running config:

# systemctl restart chronyd

- OR if sources are in a .sources file -

# chronyc reload sources

OR
If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.2.2 Ensure chrony is running as user _chrony"
          info        : "The chrony package is installed with a dedicated user account _chrony. This account is granted the access required by the chronyd service

Rationale:

The chronyd service should run with only the required privlidges"
          solution    : "Add or edit the user line to /etc/chrony/chrony.conf or a file ending in .conf in /etc/chrony/conf.d/:

user _chrony

OR
If another time synchronization service is in use on the system, run the following command to remove chrony from the system:

# apt purge chrony

Default Value:

user _chrony"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.2.3 Ensure chrony is enabled and running - enabled"
          info        : "chrony is a daemon for synchronizing the system clock across the network

Rationale:

chrony needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF chrony is in use on the system, run the following commands:
Run the following command to unmask chrony.service:

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service:

# systemctl --now enable chrony.service

OR
If another time synchronization service is in use on the system, run the following command to remove chrony:

# apt purge chrony"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.2.3 Ensure chrony is enabled and running - running"
          info        : "chrony is a daemon for synchronizing the system clock across the network

Rationale:

chrony needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF chrony is in use on the system, run the following commands:
Run the following command to unmask chrony.service:

# systemctl unmask chrony.service

Run the following command to enable and start chrony.service:

# systemctl --now enable chrony.service

OR
If another time synchronization service is in use on the system, run the following command to remove chrony:

# apt purge chrony"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "ntpd is enabled"
          cmd         : "/bin/systemctl is-enabled ntp.service"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          type        : CMD_EXEC
          description : "ntpd is running"
          cmd         : "/bin/systemctl is-active ntp.service"
          expect      : "active"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.1.4.1 Ensure ntp access control is configured - restrict -4"
          info        : "ntp Access Control Commands:

restrict address [mask mask] [ippeerlimit int] [flag ...]

The address argument expressed in dotted-quad form is the address of a host or network. Alternatively, the address argument can be a valid host DNS name.

The mask argument expressed in dotted-quad form defaults to 255.255.255.255, meaning that the address is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0) is always included and is always the first entry in the list. Note: the text string default, with no mask option, may be used to indicate the default entry.

The ippeerlimit directive limits the number of peer requests for each IP to int, where a value of -1 means 'unlimited', the current default. A value of 0 means 'none'. There would usually be at most 1 peering request per IP, but if the remote peering requests are behind a proxy there could well be more than 1 per IP. In the current implementation, flag always restricts access, i.e., an entry with no flags indicates that free access to the server is to be given.

The flags are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags can generally be classed into two categories, those which restrict time service and those which restrict informational queries and attempts to do run-time reconfiguration of the server.

One or more of the following flags may be specified:

kod - If this flag is set when an access violation occurs, a kiss-o'-death (KoD) packet is sent. KoD packets are rate limited to no more than one per second. If another KoD packet occurs within one second after the last one, the packet is dropped.

limited - Deny service if the packet spacing violates the lower limits specified in the discard command. A history of clients is kept using the monitoring capability of ntpd. Thus, monitoring is always active as long as there is a restriction entry with the limited flag.

lowpriotrap - Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited (the current limit is 3). Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment algorithm by allowing low priority traps to be overridden by later requests for normal priority traps.

noepeer - Deny ephemeral peer requests, even if they come from an authenticated source. Note that the ability to use a symmetric key for authentication may be restricted to one or more IPs or subnets via the third field of the ntp.keys file. This restriction is not enabled by default, to maintain backward compatibility. Expect noepeer to become the default in ntp-4.4.

nomodify - Deny ntpq and ntpdc queries which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted.

noquery - Deny ntpq and ntpdc queries. Time service is not affected.

nopeer - Deny unauthenticated packets which would result in mobilizing a new association. This includes broadcast and symmetric active packets when a configured association does not exist. It also includes pool associations, so if you want to use servers from a pool directive and also want to use nopeer by default, you'll want a restrict source ... line as well that does not include the nopeer directive.

noserve - Deny all packets except ntpq and ntpdc queries.

notrap - Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the ntpq control message protocol which is intended for use by remote event logging programs.

notrust - Deny service unless the packet is cryptographically authenticated.

ntpport - This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard NTP UDP port (123). Both ntpport and non-ntpport may be specified. The ntpport is considered more specific and is sorted later in the list.

Rationale:

If ntp is in use on the system, proper configuration is vital to ensuring time synchronization is accurate."
          solution    : "Add or edit restrict lines in /etc/ntp.conf to match the following:

restrict -4 default kod nomodify notrap nopeer noquery
restrict -6 default kod nomodify notrap nopeer noquery

OR
If another time synchronization service is in use on the system, run the following command to remove ntp from the system:

# apt purge ntp

Default Value:

restrict -4 default kod notrap nomodify nopeer noquery limited

restrict -6 default kod notrap nomodify nopeer noquery limited"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/ntp.conf"
          regex       : "^[\\s]*restrict[\\s]+(-4)?[\\s]*default"
          expect      : "^[\\s]*restrict[\\s]+(-4)?[\\s]*(,?default[\\s]*|,?kod[\\s]*|,?nomodify[\\s]*|,?notrap[\\s]*|,?nopeer[\\s]*|,?noquery[\\s]*){6}$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "2.1.4.1 Ensure ntp access control is configured - restrict -6"
          info        : "ntp Access Control Commands:

restrict address [mask mask] [ippeerlimit int] [flag ...]

The address argument expressed in dotted-quad form is the address of a host or network. Alternatively, the address argument can be a valid host DNS name.

The mask argument expressed in dotted-quad form defaults to 255.255.255.255, meaning that the address is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0) is always included and is always the first entry in the list. Note: the text string default, with no mask option, may be used to indicate the default entry.

The ippeerlimit directive limits the number of peer requests for each IP to int, where a value of -1 means 'unlimited', the current default. A value of 0 means 'none'. There would usually be at most 1 peering request per IP, but if the remote peering requests are behind a proxy there could well be more than 1 per IP. In the current implementation, flag always restricts access, i.e., an entry with no flags indicates that free access to the server is to be given.

The flags are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags can generally be classed into two categories, those which restrict time service and those which restrict informational queries and attempts to do run-time reconfiguration of the server.

One or more of the following flags may be specified:

kod - If this flag is set when an access violation occurs, a kiss-o'-death (KoD) packet is sent. KoD packets are rate limited to no more than one per second. If another KoD packet occurs within one second after the last one, the packet is dropped.

limited - Deny service if the packet spacing violates the lower limits specified in the discard command. A history of clients is kept using the monitoring capability of ntpd. Thus, monitoring is always active as long as there is a restriction entry with the limited flag.

lowpriotrap - Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited (the current limit is 3). Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment algorithm by allowing low priority traps to be overridden by later requests for normal priority traps.

noepeer - Deny ephemeral peer requests, even if they come from an authenticated source. Note that the ability to use a symmetric key for authentication may be restricted to one or more IPs or subnets via the third field of the ntp.keys file. This restriction is not enabled by default, to maintain backward compatibility. Expect noepeer to become the default in ntp-4.4.

nomodify - Deny ntpq and ntpdc queries which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted.

noquery - Deny ntpq and ntpdc queries. Time service is not affected.

nopeer - Deny unauthenticated packets which would result in mobilizing a new association. This includes broadcast and symmetric active packets when a configured association does not exist. It also includes pool associations, so if you want to use servers from a pool directive and also want to use nopeer by default, you'll want a restrict source ... line as well that does not include the nopeer directive.

noserve - Deny all packets except ntpq and ntpdc queries.

notrap - Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the ntpq control message protocol which is intended for use by remote event logging programs.

notrust - Deny service unless the packet is cryptographically authenticated.

ntpport - This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard NTP UDP port (123). Both ntpport and non-ntpport may be specified. The ntpport is considered more specific and is sorted later in the list.

Rationale:

If ntp is in use on the system, proper configuration is vital to ensuring time synchronization is accurate."
          solution    : "Add or edit restrict lines in /etc/ntp.conf to match the following:

restrict -4 default kod nomodify notrap nopeer noquery
restrict -6 default kod nomodify notrap nopeer noquery

OR
If another time synchronization service is in use on the system, run the following command to remove ntp from the system:

# apt purge ntp

Default Value:

restrict -4 default kod notrap nomodify nopeer noquery limited

restrict -6 default kod notrap nomodify nopeer noquery limited"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/ntp.conf"
          regex       : "^[\\s]*restrict[\\s]+-6[\\s][^:]"
          expect      : "^[\\s]*restrict[\\s]+-6[\\s]+(,?default[\\s]*|,?kod[\\s]*|,?nomodify[\\s]*|,?notrap[\\s]*|,?nopeer[\\s]*|,?noquery[\\s]*){6}$"
        </custom_item>

        <report type:"WARNING">
          description : "2.1.4.2 Ensure ntp is configured with authorized timeserver"
          info        : "The various modes are determined by the command keyword and the type of the required IP address. Addresses are classed by type as (s) a remote server or peer (IPv4 class A, B and C), (b) the broadcast address of a local interface, (m) a multicast address (IPv4 class D), or (r) a reference clock address (127.127.x.x).

Note: That only those options applicable to each command are listed below. Use of options not listed may not be caught as an error, but may result in some weird and even destructive behavior.

If the Basic Socket Interface Extensions for IPv6 (RFC-2553) is detected, support for the IPv6 address family is generated in addition to the default support of the IPv4 address family. In a few cases, including the reslist billboard generated by ntpq or ntpdc, IPv6 addresses are automatically generated. IPv6 addresses can be identified by the presence of colons ':' in the address field. IPv6 addresses can be used almost everywhere where IPv4 addresses can be used, with the exception of reference clock addresses, which are always IPv4.

Note: In contexts where a host name is expected, a -4 qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a -6 qualifier forces DNS resolution to the IPv6 namespace. See IPv6 references for the equivalent classes for that address family.

pool - For type s addresses, this command mobilizes a persistent client mode association with a number of remote servers. In this mode the local clock can synchronized to the remote server, but the remote server can never be synchronized to the local clock.

server - For type s and r addresses, this command mobilizes a persistent client mode association with the specified remote server or local radio clock. In this mode the local clock can synchronized to the remote server, but the remote server can never be synchronized to the local clock. This command should not be used for type b or m addresses.

Rationale:

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
          solution    : "Edit /etc/ntp.conf and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:
pool mode:

pool time.nist.gov iburst

server mode:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run the following command to load the updated time sources into ntp running config:

# systemctl restart ntp

OR
If another time synchronization service is in use on the system, run the following command to remove ntp from the system:

# apt purge ntp"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.1.4.3 Ensure ntp is running as user ntp"
          info        : "The ntp package is installed with a dedicated user account ntp. This account is granted the access required by the ntpd daemon

Note:

If chrony or systemd-timesyncd are used, ntp should be removed and this section skipped

This recommendation only applies if ntp is in use on the system

Only one time synchronization method should be in use on the system

Rationale:

The ntpd daemon should run with only the required privlidge"
          solution    : "Add or edit the following line in /etc/init.d/ntp:

RUNASUSER=ntp

Run the following command to restart ntp.servocee:

# systemctl restart ntp.service

OR
If another time synchronization service is in use on the system, run the following command to remove ntp from the system:

# apt purge ntp

Default Value:

user ntp"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/ps -ef | /usr/bin/grep ntpd | /usr/bin/grep -v grep | /usr/bin/cut -d ' ' -f 1"
          expect      : "ntpd"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.1.4.4 Ensure ntp is enabled and running - enabled"
          info        : "ntp is a daemon for synchronizing the system clock across the network

Rationale:

ntp needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF ntp is in use on the system, run the following commands:
Run the following command to unmask ntp.service:

# systemctl unmask ntp.service

Run the following command to enable and start ntp.service:

# systemctl --now enable ntp.service

OR
If another time synchronization service is in use on the system, run the following command to remove ntp:

# apt purge ntp"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-enabled ntp.service"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "2.1.4.4 Ensure ntp is enabled and running - active"
          info        : "ntp is a daemon for synchronizing the system clock across the network

Rationale:

ntp needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF ntp is in use on the system, run the following commands:
Run the following command to unmask ntp.service:

# systemctl unmask ntp.service

Run the following command to enable and start ntp.service:

# systemctl --now enable ntp.service

OR
If another time synchronization service is in use on the system, run the following command to remove ntp:

# apt purge ntp"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-active ntp.service"
          expect      : "active"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "2.1.4.1 Ensure ntp access control is configured - restrict -4"
          info        : "ntp Access Control Commands:

restrict address [mask mask] [ippeerlimit int] [flag ...]

The address argument expressed in dotted-quad form is the address of a host or network. Alternatively, the address argument can be a valid host DNS name.

The mask argument expressed in dotted-quad form defaults to 255.255.255.255, meaning that the address is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0) is always included and is always the first entry in the list. Note: the text string default, with no mask option, may be used to indicate the default entry.

The ippeerlimit directive limits the number of peer requests for each IP to int, where a value of -1 means 'unlimited', the current default. A value of 0 means 'none'. There would usually be at most 1 peering request per IP, but if the remote peering requests are behind a proxy there could well be more than 1 per IP. In the current implementation, flag always restricts access, i.e., an entry with no flags indicates that free access to the server is to be given.

The flags are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags can generally be classed into two categories, those which restrict time service and those which restrict informational queries and attempts to do run-time reconfiguration of the server.

One or more of the following flags may be specified:

kod - If this flag is set when an access violation occurs, a kiss-o'-death (KoD) packet is sent. KoD packets are rate limited to no more than one per second. If another KoD packet occurs within one second after the last one, the packet is dropped.

limited - Deny service if the packet spacing violates the lower limits specified in the discard command. A history of clients is kept using the monitoring capability of ntpd. Thus, monitoring is always active as long as there is a restriction entry with the limited flag.

lowpriotrap - Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited (the current limit is 3). Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment algorithm by allowing low priority traps to be overridden by later requests for normal priority traps.

noepeer - Deny ephemeral peer requests, even if they come from an authenticated source. Note that the ability to use a symmetric key for authentication may be restricted to one or more IPs or subnets via the third field of the ntp.keys file. This restriction is not enabled by default, to maintain backward compatibility. Expect noepeer to become the default in ntp-4.4.

nomodify - Deny ntpq and ntpdc queries which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted.

noquery - Deny ntpq and ntpdc queries. Time service is not affected.

nopeer - Deny unauthenticated packets which would result in mobilizing a new association. This includes broadcast and symmetric active packets when a configured association does not exist. It also includes pool associations, so if you want to use servers from a pool directive and also want to use nopeer by default, you'll want a restrict source ... line as well that does not include the nopeer directive.

noserve - Deny all packets except ntpq and ntpdc queries.

notrap - Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the ntpq control message protocol which is intended for use by remote event logging programs.

notrust - Deny service unless the packet is cryptographically authenticated.

ntpport - This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard NTP UDP port (123). Both ntpport and non-ntpport may be specified. The ntpport is considered more specific and is sorted later in the list.

Rationale:

If ntp is in use on the system, proper configuration is vital to ensuring time synchronization is accurate."
          solution    : "Add or edit restrict lines in /etc/ntp.conf to match the following:

restrict -4 default kod nomodify notrap nopeer noquery
restrict -6 default kod nomodify notrap nopeer noquery

OR
If another time synchronization service is in use on the system, run the following command to remove ntp from the system:

# apt purge ntp

Default Value:

restrict -4 default kod notrap nomodify nopeer noquery limited

restrict -6 default kod notrap nomodify nopeer noquery limited"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.4.1 Ensure ntp access control is configured - restrict -6"
          info        : "ntp Access Control Commands:

restrict address [mask mask] [ippeerlimit int] [flag ...]

The address argument expressed in dotted-quad form is the address of a host or network. Alternatively, the address argument can be a valid host DNS name.

The mask argument expressed in dotted-quad form defaults to 255.255.255.255, meaning that the address is treated as the address of an individual host. A default entry (address 0.0.0.0, mask 0.0.0.0) is always included and is always the first entry in the list. Note: the text string default, with no mask option, may be used to indicate the default entry.

The ippeerlimit directive limits the number of peer requests for each IP to int, where a value of -1 means 'unlimited', the current default. A value of 0 means 'none'. There would usually be at most 1 peering request per IP, but if the remote peering requests are behind a proxy there could well be more than 1 per IP. In the current implementation, flag always restricts access, i.e., an entry with no flags indicates that free access to the server is to be given.

The flags are not orthogonal, in that more restrictive flags will often make less restrictive ones redundant. The flags can generally be classed into two categories, those which restrict time service and those which restrict informational queries and attempts to do run-time reconfiguration of the server.

One or more of the following flags may be specified:

kod - If this flag is set when an access violation occurs, a kiss-o'-death (KoD) packet is sent. KoD packets are rate limited to no more than one per second. If another KoD packet occurs within one second after the last one, the packet is dropped.

limited - Deny service if the packet spacing violates the lower limits specified in the discard command. A history of clients is kept using the monitoring capability of ntpd. Thus, monitoring is always active as long as there is a restriction entry with the limited flag.

lowpriotrap - Declare traps set by matching hosts to be low priority. The number of traps a server can maintain is limited (the current limit is 3). Traps are usually assigned on a first come, first served basis, with later trap requestors being denied service. This flag modifies the assignment algorithm by allowing low priority traps to be overridden by later requests for normal priority traps.

noepeer - Deny ephemeral peer requests, even if they come from an authenticated source. Note that the ability to use a symmetric key for authentication may be restricted to one or more IPs or subnets via the third field of the ntp.keys file. This restriction is not enabled by default, to maintain backward compatibility. Expect noepeer to become the default in ntp-4.4.

nomodify - Deny ntpq and ntpdc queries which attempt to modify the state of the server (i.e., run time reconfiguration). Queries which return information are permitted.

noquery - Deny ntpq and ntpdc queries. Time service is not affected.

nopeer - Deny unauthenticated packets which would result in mobilizing a new association. This includes broadcast and symmetric active packets when a configured association does not exist. It also includes pool associations, so if you want to use servers from a pool directive and also want to use nopeer by default, you'll want a restrict source ... line as well that does not include the nopeer directive.

noserve - Deny all packets except ntpq and ntpdc queries.

notrap - Decline to provide mode 6 control message trap service to matching hosts. The trap service is a subsystem of the ntpq control message protocol which is intended for use by remote event logging programs.

notrust - Deny service unless the packet is cryptographically authenticated.

ntpport - This is actually a match algorithm modifier, rather than a restriction flag. Its presence causes the restriction entry to be matched only if the source port in the packet is the standard NTP UDP port (123). Both ntpport and non-ntpport may be specified. The ntpport is considered more specific and is sorted later in the list.

Rationale:

If ntp is in use on the system, proper configuration is vital to ensuring time synchronization is accurate."
          solution    : "Add or edit restrict lines in /etc/ntp.conf to match the following:

restrict -4 default kod nomodify notrap nopeer noquery
restrict -6 default kod nomodify notrap nopeer noquery

OR
If another time synchronization service is in use on the system, run the following command to remove ntp from the system:

# apt purge ntp

Default Value:

restrict -4 default kod notrap nomodify nopeer noquery limited

restrict -6 default kod notrap nomodify nopeer noquery limited"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.4.2 Ensure ntp is configured with authorized timeserver"
          info        : "The various modes are determined by the command keyword and the type of the required IP address. Addresses are classed by type as (s) a remote server or peer (IPv4 class A, B and C), (b) the broadcast address of a local interface, (m) a multicast address (IPv4 class D), or (r) a reference clock address (127.127.x.x).

Note: That only those options applicable to each command are listed below. Use of options not listed may not be caught as an error, but may result in some weird and even destructive behavior.

If the Basic Socket Interface Extensions for IPv6 (RFC-2553) is detected, support for the IPv6 address family is generated in addition to the default support of the IPv4 address family. In a few cases, including the reslist billboard generated by ntpq or ntpdc, IPv6 addresses are automatically generated. IPv6 addresses can be identified by the presence of colons ':' in the address field. IPv6 addresses can be used almost everywhere where IPv4 addresses can be used, with the exception of reference clock addresses, which are always IPv4.

Note: In contexts where a host name is expected, a -4 qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a -6 qualifier forces DNS resolution to the IPv6 namespace. See IPv6 references for the equivalent classes for that address family.

pool - For type s addresses, this command mobilizes a persistent client mode association with a number of remote servers. In this mode the local clock can synchronized to the remote server, but the remote server can never be synchronized to the local clock.

server - For type s and r addresses, this command mobilizes a persistent client mode association with the specified remote server or local radio clock. In this mode the local clock can synchronized to the remote server, but the remote server can never be synchronized to the local clock. This command should not be used for type b or m addresses.

Rationale:

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "Edit /etc/ntp.conf and add or edit server or pool lines as appropriate according to local site policy:

<[server|pool]> <[remote-server|remote-pool]>

Examples:
pool mode:

pool time.nist.gov iburst

server mode:

server time-a-g.nist.gov iburst
server 132.163.97.3 iburst
server time-d-b.nist.gov iburst

Run the following command to load the updated time sources into ntp running config:

# systemctl restart ntp

OR
If another time synchronization service is in use on the system, run the following command to remove ntp from the system:

# apt purge ntp"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.4.3 Ensure ntp is running as user ntp"
          info        : "The ntp package is installed with a dedicated user account ntp. This account is granted the access required by the ntpd daemon

Note:

If chrony or systemd-timesyncd are used, ntp should be removed and this section skipped

This recommendation only applies if ntp is in use on the system

Only one time synchronization method should be in use on the system

Rationale:

The ntpd daemon should run with only the required privlidge"
          solution    : "Add or edit the following line in /etc/init.d/ntp:

RUNASUSER=ntp

Run the following command to restart ntp.servocee:

# systemctl restart ntp.service

OR
If another time synchronization service is in use on the system, run the following command to remove ntp from the system:

# apt purge ntp

Default Value:

user ntp"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.4.4 Ensure ntp is enabled and running - enabled"
          info        : "ntp is a daemon for synchronizing the system clock across the network

Rationale:

ntp needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF ntp is in use on the system, run the following commands:
Run the following command to unmask ntp.service:

# systemctl unmask ntp.service

Run the following command to enable and start ntp.service:

# systemctl --now enable ntp.service

OR
If another time synchronization service is in use on the system, run the following command to remove ntp:

# apt purge ntp"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "2.1.4.4 Ensure ntp is enabled and running - active"
          info        : "ntp is a daemon for synchronizing the system clock across the network

Rationale:

ntp needs to be enabled and running in order to synchronize the system to a timeserver.

Time synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations"
          solution    : "IF ntp is in use on the system, run the following commands:
Run the following command to unmask ntp.service:

# systemctl unmask ntp.service

Run the following command to enable and start ntp.service:

# systemctl --now enable ntp.service

OR
If another time synchronization service is in use on the system, run the following command to remove ntp:

# apt purge ntp"
          reference   : "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.2 Ensure Avahi Server is not installed"
      info        : "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.

Rationale:

Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface."
      solution    : "Run the following commands to remove avahi-daemon:

# systemctl stop avahi-daaemon.service
# systemctl stop avahi-daemon.socket
# apt purge avahi-daemon"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s avahi-demon | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'avahi-demon' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.4 Ensure DHCP Server is not installed - isc-dhcp-server"
      info        : "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.

Rationale:

Unless a system is specifically set up to act as a DHCP server, it is recommended that this package be removed to reduce the potential attack surface."
      solution    : "Run the following command to remove isc-dhcp-server:

# apt purge isc-dhcp-server"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s isc-dhcp-server | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'isc-dhcp-server' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.5 Ensure LDAP server is not installed"
      info        : "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

Rationale:

If the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface."
      solution    : "Run one of the following commands to remove slapd:

# apt purge slapd"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s slapd | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'slapd' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.6 Ensure NFS is not installed"
      info        : "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.

Rationale:

If the system does not export NFS shares, it is recommended that the nfs-kernel-server package be removed to reduce the remote attack surface."
      solution    : "Run the following command to remove nfs:

# apt purge nfs-kernel-server"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s nfs-kernel-server | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'nfs-kernel-server' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.7 Ensure DNS Server is not installed"
      info        : "The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.

Rationale:

Unless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface."
      solution    : "Run the following commands to disable DNS server:

# apt purge bind9"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s bind9 | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'bind9' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.8 Ensure FTP Server is not installed"
      info        : "The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.

Rationale:

FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface."
      solution    : "Run the following command to remove vsftpd:

# apt purge vsftpd

Additional Information:

Additional FTP servers also exist and should be audited."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s vsftpd | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'vsftpd' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.9 Ensure HTTP server is not installed"
      info        : "HTTP or web servers provide the ability to host web site content.

Rationale:

Unless there is a need to run the system as a web server, it is recommended that the package be deleted to reduce the potential attack surface."
      solution    : "Run the following command to remove apache:

# apt purge apache2

Additional Information:

Several httpd servers exist and can use other service names. apache2 and nginx are example services that provide an HTTP server. These and other services should also be audited"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s apache2 | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'apache2' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.10 Ensure IMAP and POP3 server are not installed - dovecot-imapd"
      info        : "dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for Linux based systems.

Rationale:

Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface."
      solution    : "Run one of the following commands to remove dovecot-imapd and dovecot-pop3d:

# apt purge dovecot-imapd dovecot-pop3d

Additional Information:

Several IMAP/POP3 servers exist and can use other service names. courier-imap and cyrus-imap are example services that provide a mail server. These and other services should also be audited."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s dovecot-imapd | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'dovecot-imapd' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.10 Ensure IMAP and POP3 server are not installed - dovecot-pop3d"
      info        : "dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for Linux based systems.

Rationale:

Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface."
      solution    : "Run one of the following commands to remove dovecot-imapd and dovecot-pop3d:

# apt purge dovecot-imapd dovecot-pop3d

Additional Information:

Several IMAP/POP3 servers exist and can use other service names. courier-imap and cyrus-imap are example services that provide a mail server. These and other services should also be audited."
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s dovecot-pop3d | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'dovecot-pop3d' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.11 Ensure Samba is not installed"
      info        : "The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.

Rationale:

If there is no need to mount directories and file systems to Windows systems, then this service should be deleted to reduce the potential attack surface."
      solution    : "Run the following command to remove samba:

# apt purge samba"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s samba | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'samba' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.12 Ensure HTTP Proxy Server is not installed"
      info        : "Squid is a standard proxy server used in many distributions and environments.

Rationale:

If there is no need for a proxy server, it is recommended that the squid proxy be deleted to reduce the potential attack surface."
      solution    : "Run the following command to remove squid:

# apt purge squid

Additional Information:

Several HTTP proxy servers exist. These and other services should be checked"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s squid | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'squid' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.13 Ensure SNMP Server is not installed"
      info        : "Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs.

Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.

Support for SNMPv2 classic (a.k.a. 'SNMPv2 historic' - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.

The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.

Rationale:

The SNMP server can communicate using SNMPv1, which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the net-snmp package should be removed to reduce the attack surface of the system.

Note: If SNMP is required:

The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured.

If SNMP v2 is absolutely necessary, modify the community strings' values."
      solution    : "Run the following command to remove snmp:

# apt purge snmp"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s snmpd | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'snmpd' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.14 Ensure NIS Server is not installed"
      info        : "The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files.

Rationale:

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed and other, more secure services be used"
      solution    : "Run the following command to remove nis:

# apt purge nis"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s nis | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'nis' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.15 Ensure mail transfer agent is configured for local-only mode"
      info        : "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.

Rationale:

The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.

Note:

This recommendation is designed around the postfix mail server.

Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state."
      solution    : "Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:

inet_interfaces = loopback-only

Run the following command to restart postfix:

# systemctl restart postfix"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/ss -lntu | /bin/grep -E ':25\s' | /bin/grep -E -v '\s(127.0.0.1|::1):25\s' | /usr/bin/awk \'{print} END { if(NR==0) print \"pass\" ; else print \"fail\"}\'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.2.16 Ensure rsync service is either not installed or masked"
      info        : "The rsync service can be used to synchronize files between systems over network links.

Rationale:

The rsync service presents a security risk as it uses unencrypted protocols for communication. The rsync package should be removed to reduce the attack area of the system."
      solution    : "Run the following command to remove rsync:

# apt purge rsync

OR
Run the following commands to stop and mask rsync:

# systemctl stop rsync

# systemctl mask rsync"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s rsync | /bin/grep -E '(Status:|not installed)'"
      expect      : "dpkg-query: package 'rsync' is not installed and no information is available"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.3.1 Ensure NIS Client is not installed"
      info        : "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client was used to bind a machine to an NIS server and receive the distributed configuration files.

Rationale:

The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      solution    : "Uninstall nis:

# apt purge nis"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s nis 2>&1"
      expect      : "(?:(^[\\s]*dpkg-query: package \'nis\' is not installed.*$)|(^[\\s]*Status: deinstall ok config-files.*$))"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.3.2 Ensure rsh client is not installed"
      info        : "The rsh-client package contains the client commands for the rsh services.

Rationale:

These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh package removes the clients for rsh , rcp and rlogin .

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      solution    : "Uninstall rsh:

# apt purge rsh-client"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s rsh-client 2>&1"
      expect      : "(?:(^[\\s]*dpkg-query: package \'rsh-client\' is not installed.*$)|(^[\\s]*Status: deinstall ok config-files.*$))"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.3.3 Ensure talk client is not installed"
      info        : "The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.

Rationale:

The software presents a security risk as it uses unencrypted protocols for communication.

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      solution    : "Uninstall talk:

# apt purge talk"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s talk 2>&1"
      expect      : "(?:(^[\\s]*dpkg-query: package \'talk\' is not installed.*$)|(^[\\s]*Status: deinstall ok config-files.*$))"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.3.4 Ensure telnet client is not installed"
      info        : "The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.

Rationale:

The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.

Impact:

Many insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse."
      solution    : "Uninstall telnet:

# apt purge telnet"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s telnet 2>&1"
      expect      : "(?:(^[\\s]*dpkg-query: package \'telnet\' is not installed.*$)|(^[\\s]*Status: deinstall ok config-files.*$))"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.3.5 Ensure LDAP client is not installed"
      info        : "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.

Rationale:

If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.

Impact:

Removing the LDAP client will prevent or inhibit using LDAP for authentication in your environment."
      solution    : "Uninstall ldap-utils:

# apt purge ldap-utils"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s ldap-utils 2>&1"
      expect      : "(?:(^[\\s]*dpkg-query: package \'ldap-utils\' is not installed.*$)|(^[\\s]*Status: deinstall ok config-files.*$))"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.3.6 Ensure RPC is not installed"
      info        : "Remote Procedure Call (RPC) is a method for creating low level client server applications across different system architectures. It requires an RPC compliant client listening on a network port. The supporting package is rpcbind.'

Rationale:

If RPC is not required, it is recommended that this services be removed to reduce the remote attack surface."
      solution    : "Run the following command to remove rpcbind:

# apt purge rpcbind"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s rpcbind 2>&1"
      expect      : "(?:(^[\\s]*dpkg-query: package \'rpcbind\' is not installed.*$)|(^[\\s]*Status: deinstall ok config-files.*$))"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "2.4 Ensure nonessential services are removed or masked"
      info        : "A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.

A listening port is a network port on which an application or process listens on, acting as a communication endpoint.

Each listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.

Rationale:

Services listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Run the following command to remove the package containing the service:

# apt purge <package_name>

OR If required packages have a dependency:
Run the following commands to stop and mask the service:

# systemctl stop <service_name>.socket
# systemctl stop <service_name>.service
# systemctl mask <service_name>.socket
# systemctl mask <service_name>.service

Additional Information:

NIST SP 800-53 Rev. 5:

CM-7"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/ss -plntu"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "Check for ipv6 disabled in grub"
          file        : "/etc/default/grub"
          regex       : "^[\\s]*GRUB_CMDLINE_LINUX[\\s]*=[\\s]*"
          expect      : "ipv6\\.disable[\\s]*=[\\s]*1"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - grub.cfg"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/boot/grub/grub.cfg"
          regex       : "^[\\s]*GRUB_CMDLINE_LINUX[\\s]*=[\\s]*"
          expect      : "ipv6\\.disable[\\s]*=[\\s]*1"
        </custom_item>

        <report type:"PASSED">
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - sysctl net.ipv6.conf.all.disable_ipv6"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - sysctl net.ipv6.conf.default.disable_ipv6"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - sysctl.conf net.ipv6.conf.all.disable_ipv6"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - sysctl.conf net.ipv6.conf.default.disable_ipv6"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - grub.cfg"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - sysctl net.ipv6.conf.all.disable_ipv6"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.all.disable_ipv6"
          expect      : "^[\\s]*net\.ipv6\.conf\.all\.disable_ipv6[\\s]*=[\\s]*1"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - sysctl net.ipv6.conf.default.disable_ipv6"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/sysctl net.ipv6.conf.default.disable_ipv6"
          expect      : "^[\\s]*net\.ipv6\.conf\.default\.disable_ipv6[\\s]*=[\\s]*1"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - sysctl.conf net.ipv6.conf.all.disable_ipv6"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/grep -E '^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$' /etc/sysctl.conf /etc/sysctl.d/*.conf | /usr/bin/cut -d: -f2 | /usr/bin/awk '{print} END {if (NR == 0) print \"fail - setting not found\";}'"
          expect      : "^[\\s]*net\.ipv6\.conf\.all\.disable_ipv6[\\s]*=[\\s]*1"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.1.1 Ensure system is checked to determine if IPv6 is enabled - sysctl.conf net.ipv6.conf.default.disable_ipv6"
          info        : "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.

Features of IPv6

Hierarchical addressing and routing infrastructure

Stateful and Stateless configuration

Support for quality of service (QoS)

An ideal protocol for neighboring node interaction

Rationale:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.

If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.

Impact:

IETF RFC 4038 recommends that applications are built with an assumption of dual stack. Disabling IPv6 on the system may cause some applications to fail or have unexpected behavior."
          solution    : "It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations. If IPv6 is to be disabled, use one of the two following methods to disable IPv6 on the system:
To disable IPv6 through the GRUB2 config, run the following command to add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:
Example:

GRUB_CMDLINE_LINUX='ipv6.disable=1'

Run the following command to update the grub2 configuration:

# update-grub

OR To disable IPv6 through sysctl settings, set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
Example:

# printf '
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
' >> /etc/sysctl.d/60-disable_ipv6.conf

Run the following command to set the active kernel parameters:

# {
   sysctl -w net.ipv6.conf.all.disable_ipv6=1
   sysctl -w net.ipv6.conf.default.disable_ipv6=1
   sysctl -w net.ipv6.route.flush=1
}

Default Value:

IPv6 is enabled

Additional Information:

Having more addresses has grown in importance with the expansion of smart devices and connectivity. IPv6 provides more than enough globally unique IP addresses for every networked device currently on the planet, helping ensure providers can keep pace with the expected proliferation of IP-based devices.

NIST SP 800-53 Rev. 5:

CM-7"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/grep -E '^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b(\\s+#.*)?$' /etc/sysctl.conf /etc/sysctl.d/*.conf | /usr/bin/cut -d: -f2 | /usr/bin/awk '{print} END {if (NR == 0) print \"fail - setting not found\";}'"
          expect      : "^[\\s]*net\.ipv6\.conf\.default\.disable_ipv6[\\s]*=[\\s]*1"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "3.2.1 Ensure packet redirect sending is disabled - net.ipv4.conf.all.send_redirects (sysctl.conf/sysctl.d)"
      info            : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution        : "Run the following script to set:

net.ipv4.conf.all.send_redirects = 0

net.ipv4.conf.default.send_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.send_redirects=0 net.ipv4.conf.default.send_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.send_redirects = 1

net.ipv4.conf.default.send_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference       : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also        : "https://workbench.cisecurity.org/files/4115"
      file            : "/etc/sysctl.conf /etc/sysctl.d/*"
      regex           : "^[\\s]*net\\.ipv4\\.conf\\.all\\.send_redirects[\\s]*"
      expect          : "^[\\s]*net\\.ipv4\\.conf\\.all\\.send_redirects[\\s]*=[\\s]*0[\\s]*$"
      min_occurrences : "1"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.1 Ensure packet redirect sending is disabled - sysctl net.ipv4.conf.all.send_redirects"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Run the following script to set:

net.ipv4.conf.all.send_redirects = 0

net.ipv4.conf.default.send_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.send_redirects=0 net.ipv4.conf.default.send_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.send_redirects = 1

net.ipv4.conf.default.send_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.send_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.send_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "3.2.1 Ensure packet redirect sending is disabled - net.ipv4.conf.default.send_redirects (sysctl.conf/sysctl.d)"
      info            : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution        : "Run the following script to set:

net.ipv4.conf.all.send_redirects = 0

net.ipv4.conf.default.send_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.send_redirects=0 net.ipv4.conf.default.send_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.send_redirects = 1

net.ipv4.conf.default.send_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference       : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also        : "https://workbench.cisecurity.org/files/4115"
      file            : "/etc/sysctl.conf /etc/sysctl.d/*"
      regex           : "^[\\s]*net\\.ipv4\\.conf\\.default\\.send_redirects[\\s]*"
      expect          : "^[\\s]*net\\.ipv4\\.conf\\.default\\.send_redirects[\\s]*=[\\s]*0[\\s]*$"
      min_occurrences : "1"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.1 Ensure packet redirect sending is disabled - sysctl net.ipv4.conf.default.send_redirects"
      info        : "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.

Rationale:

An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system."
      solution    : "Run the following script to set:

net.ipv4.conf.all.send_redirects = 0

net.ipv4.conf.default.send_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.send_redirects=0 net.ipv4.conf.default.send_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.send_redirects = 1

net.ipv4.conf.default.send_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.send_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.send_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "3.2.2 Ensure IP forwarding is disabled - ipv4 (sysctl.conf/sysctl.d)"
      info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
      solution    : "Run the following script to set:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.ip_forward=0 net.ipv6.conf.all.forwarding=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/sysctl.conf /etc/sysctl.d/*"
      regex       : "^[\\s]*net\\.ipv4\\.ip_forward[\\s]*"
      expect      : "^[\\s]*net\\.ipv4\\.ip_forward[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.2.2 Ensure IP forwarding is disabled - sysctl ipv4"
      info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
      solution    : "Run the following script to set:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.ip_forward=0 net.ipv6.conf.all.forwarding=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.ip_forward"
      expect      : "^[\\s]*net\\.ipv4\\.ip_forward[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "output=\"\"; grubfile=\"$(find -L /boot -name 'grub.cfg' -type f)\"; [ -f \"$grubfile\" ] && ! grep \"^\\s*linux\" \"$grubfile\" | grep -vq ipv6.disable=1 && output=\"ipv6 disabled in grub config\"; grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" && output=\"ipv6 disabled in sysctl config\"; [ -n \"$output\" ] && echo \"$output\" || echo \"IPv6 is enabled on the system\""
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK_NOT
          description : "3.2.2 Ensure IP forwarding is disabled - ipv6 (sysctl.conf/sysctl.d)"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following script to set:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.ip_forward=0 net.ipv6.conf.all.forwarding=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/sysctl.conf /etc/sysctl.d/*"
          regex       : "^[\\s]*net\\.ipv6\\.conf\\.all\\.forwarding[\\s]*"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.forwarding[\\s]*=[\\s]*1[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.2.2 Ensure IP forwarding is disabled - sysctl ipv6"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following script to set:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.ip_forward=0 net.ipv6.conf.all.forwarding=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/sysctl net.ipv6.conf.all.forwarding"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.forwarding[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.2.2 Ensure IP forwarding is disabled - ipv6 (sysctl.conf/sysctl.d)"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following script to set:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.ip_forward=0 net.ipv6.conf.all.forwarding=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.2.2 Ensure IP forwarding is disabled - sysctl ipv6"
          info        : "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.

Rationale:

Setting:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router."
          solution    : "Run the following script to set:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.ip_forward=0 net.ipv6.conf.all.forwarding=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.ip_forward = 0

net.ipv6.conf.all.forwarding = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.1 Ensure source routed packets are not accepted - net.ipv4.conf.all.accept_source_route (sysctl.conf/sysctl.d)"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.1 Ensure source routed packets are not accepted - sysctl net.ipv4.conf.all.accept_source_route"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.accept_source_route"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.1 Ensure source routed packets are not accepted - net.ipv4.conf.default.accept_source_route (sysctl.conf/sysctl.d)"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.1 Ensure source routed packets are not accepted - sysctl net.ipv4.conf.default.accept_source_route"
      info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
      solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.accept_source_route"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "output=\"\"; grubfile=\"$(find -L /boot -name 'grub.cfg' -type f)\"; [ -f \"$grubfile\" ] && ! grep \"^\\s*linux\" \"$grubfile\" | grep -vq ipv6.disable=1 && output=\"ipv6 disabled in grub config\"; grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" && output=\"ipv6 disabled in sysctl config\"; [ -n \"$output\" ] && echo \"$output\" || echo \"IPv6 is enabled on the system\""
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.1 Ensure source routed packets are not accepted - net.ipv6.conf.all.accept_source_route (sysctl.conf/sysctl.d)"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl net.ipv6.conf.all.accept_source_route"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/sysctl net.ipv6.conf.all.accept_source_route"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.1 Ensure source routed packets are not accepted - net.ipv6.conf.default.accept_source_route (sysctl.conf/sysctl.d)"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl net.ipv6.conf.default.accept_source_route"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/sysctl net.ipv6.conf.default.accept_source_route"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_source_route[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.3.1 Ensure source routed packets are not accepted - net.ipv6.conf.all.accept_source_route (sysctl.conf/sysctl.d)"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl net.ipv6.conf.all.accept_source_route"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.1 Ensure source routed packets are not accepted - net.ipv6.conf.default.accept_source_route (sysctl.conf/sysctl.d)"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.1 Ensure source routed packets are not accepted - sysctl net.ipv6.conf.default.accept_source_route"
          info        : "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.

Rationale:

Setting:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_source_route=0 net.ipv4.conf.default.accept_source_route=0 net.ipv6.conf.all.accept_source_route=0 net.ipv6.conf.default.accept_source_route=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.accept_source_route = 0

net.ipv6.conf.all.accept_source_route = 0

net.ipv6.conf.default.accept_source_route = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.2 Ensure ICMP redirects are not accepted - net.ipv4.conf.all.accept_redirects (sysctl.conf/sysctl.d)"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
      solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl net.ipv4.conf.all.accept_redirects"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
      solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.accept_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.2 Ensure ICMP redirects are not accepted - net.ipv4.conf.default.accept_redirects (sysctl.conf/sysctl.d)"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
      solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl net.ipv4.conf.default.accept_redirects"
      info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
      solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.accept_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "output=\"\"; grubfile=\"$(find -L /boot -name 'grub.cfg' -type f)\"; [ -f \"$grubfile\" ] && ! grep \"^\\s*linux\" \"$grubfile\" | grep -vq ipv6.disable=1 && output=\"ipv6 disabled in grub config\"; grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" && output=\"ipv6 disabled in sysctl config\"; [ -n \"$output\" ] && echo \"$output\" || echo \"IPv6 is enabled on the system\""
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.2 Ensure ICMP redirects are not accepted - net.ipv6.conf.all.accept_redirects (sysctl.conf/sysctl.d)"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl net.ipv6.conf.all.accept_redirects"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/sysctl net.ipv6.conf.all.accept_redirects"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.2 Ensure ICMP redirects are not accepted - net.ipv6.conf.default.accept_redirects (sysctl.conf/sysctl.d)"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl net.ipv6.conf.default.accept_redirects"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/sysctl net.ipv6.conf.default.accept_redirects"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_redirects[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.3.2 Ensure ICMP redirects are not accepted - net.ipv6.conf.all.accept_redirects (sysctl.conf/sysctl.d)"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl net.ipv6.conf.all.accept_redirects"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.2 Ensure ICMP redirects are not accepted - net.ipv6.conf.default.accept_redirects (sysctl.conf/sysctl.d)"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.2 Ensure ICMP redirects are not accepted - sysctl net.ipv6.conf.default.accept_redirects"
          info        : "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.

Rationale:

Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.

By setting:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

The system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
          solution    : "Run the following script to set:

net.ipv4.conf.all.accept_redirects = 0

net.ipv4.conf.default.accept_redirects = 0

net.ipv6.conf.all.accept_redirects = 0

net.ipv6.conf.default.accept_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.accept_redirects=0 net.ipv4.conf.default.accept_redirects=0 net.ipv6.conf.all.accept_redirects=0 net.ipv6.conf.default.accept_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv4.conf.all.accept_redirects = 1

net.ipv4.conf.default.accept_redirects = 1

net.ipv6.conf.all.accept_redirects = 1

net.ipv6.conf.default.accept_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.3 Ensure secure ICMP redirects are not accepted - 'net.ipv4.conf.all.secure_redirects' (sysctl.conf/sysctl.d)"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised.

Setting:

net.ipv4.conf.default.secure_redirects = 0

net.ipv4.conf.all.secure_redirects = 0

protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Run the following script to set:

net.ipv4.conf.default.secure_redirects = 0

net.ipv4.conf.all.secure_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.default.secure_redirects=0 net.ipv4.conf.all.secure_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.secure_redirects = 1

net.ipv4.conf.default.secure_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.secure_redirects[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.3 Ensure secure ICMP redirects are not accepted - 'sysctl net.ipv4.conf.all.secure_redirects'"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised.

Setting:

net.ipv4.conf.default.secure_redirects = 0

net.ipv4.conf.all.secure_redirects = 0

protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Run the following script to set:

net.ipv4.conf.default.secure_redirects = 0

net.ipv4.conf.all.secure_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.default.secure_redirects=0 net.ipv4.conf.all.secure_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.secure_redirects = 1

net.ipv4.conf.default.secure_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.secure_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.secure_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.3 Ensure secure ICMP redirects are not accepted - 'net.ipv4.conf.default.secure_redirects' (sysctl.conf/sysctl.d)"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised.

Setting:

net.ipv4.conf.default.secure_redirects = 0

net.ipv4.conf.all.secure_redirects = 0

protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Run the following script to set:

net.ipv4.conf.default.secure_redirects = 0

net.ipv4.conf.all.secure_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.default.secure_redirects=0 net.ipv4.conf.all.secure_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.secure_redirects = 1

net.ipv4.conf.default.secure_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.secure_redirects[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.3 Ensure secure ICMP redirects are not accepted - 'sysctl net.ipv4.conf.default.secure_redirects'"
      info        : "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.

Rationale:

It is still possible for even known gateways to be compromised.

Setting:

net.ipv4.conf.default.secure_redirects = 0

net.ipv4.conf.all.secure_redirects = 0

protects the system from routing table updates by possibly compromised known gateways."
      solution    : "Run the following script to set:

net.ipv4.conf.default.secure_redirects = 0

net.ipv4.conf.all.secure_redirects = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.default.secure_redirects=0 net.ipv4.conf.all.secure_redirects=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.secure_redirects = 1

net.ipv4.conf.default.secure_redirects = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.secure_redirects"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.secure_redirects[\\s]*=[\\s]*0[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.4 Ensure suspicious packets are logged - 'net.ipv4.conf.all.log_martians' (sysctl.conf/sysctl.d)"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets by setting:

net.ipv4.conf.all.log_martians = 1

net.ipv4.conf.default.log_martians = 1

allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Run the following script to set:

net.ipv4.conf.all.log_martians = 1

net.ipv4.conf.default.log_martians = 1

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.log_martians=1 net.ipv4.conf.default.log_martians=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.log_martians = 0

net.ipv4.conf.default.log_martians = 0

Additional Information:

NIST SP 800-53 Rev. 5:

AU-3

AU-3(1)

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.log_martians[\\s]*=[\\s]*1[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.4 Ensure suspicious packets are logged - 'sysctl net.ipv4.conf.all.log_martians'"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets by setting:

net.ipv4.conf.all.log_martians = 1

net.ipv4.conf.default.log_martians = 1

allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Run the following script to set:

net.ipv4.conf.all.log_martians = 1

net.ipv4.conf.default.log_martians = 1

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.log_martians=1 net.ipv4.conf.default.log_martians=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.log_martians = 0

net.ipv4.conf.default.log_martians = 0

Additional Information:

NIST SP 800-53 Rev. 5:

AU-3

AU-3(1)

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.log_martians"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.log_martians[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.4 Ensure suspicious packets are logged - 'net.ipv4.conf.default.log_martians' (sysctl.conf/sysctl.d)"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets by setting:

net.ipv4.conf.all.log_martians = 1

net.ipv4.conf.default.log_martians = 1

allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Run the following script to set:

net.ipv4.conf.all.log_martians = 1

net.ipv4.conf.default.log_martians = 1

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.log_martians=1 net.ipv4.conf.default.log_martians=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.log_martians = 0

net.ipv4.conf.default.log_martians = 0

Additional Information:

NIST SP 800-53 Rev. 5:

AU-3

AU-3(1)

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.log_martians[\\s]*=[\\s]*1[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.4 Ensure suspicious packets are logged - 'sysctl net.ipv4.conf.default.log_martians'"
      info        : "When enabled, this feature logs packets with un-routable source addresses to the kernel log.

Rationale:

Enabling this feature and logging these packets by setting:

net.ipv4.conf.all.log_martians = 1

net.ipv4.conf.default.log_martians = 1

allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
      solution    : "Run the following script to set:

net.ipv4.conf.all.log_martians = 1

net.ipv4.conf.default.log_martians = 1

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.log_martians=1 net.ipv4.conf.default.log_martians=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.log_martians = 0

net.ipv4.conf.default.log_martians = 0

Additional Information:

NIST SP 800-53 Rev. 5:

AU-3

AU-3(1)

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.log_martians"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.log_martians[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.5 Ensure broadcast ICMP requests are ignored - sysctl.conf/sysctl.d"
      info        : "Setting net.ipv4.icmp_echo_ignore_broadcasts = 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Rationale:

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied."
      solution    : "Run the following script to set net.ipv4.icmp_echo_ignore_broadcasts = 1:

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.icmp_echo_ignore_broadcasts=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.default.log_martians = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.icmp_echo_ignore_broadcasts[\\s]*=[\\s]*1[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.5 Ensure broadcast ICMP requests are ignored - sysctl exec"
      info        : "Setting net.ipv4.icmp_echo_ignore_broadcasts = 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.

Rationale:

Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied."
      solution    : "Run the following script to set net.ipv4.icmp_echo_ignore_broadcasts = 1:

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.icmp_echo_ignore_broadcasts=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.default.log_martians = 0

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.icmp_echo_ignore_broadcasts"
      expect      : "^[\\s]*net\\.ipv4\\.icmp_echo_ignore_broadcasts[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.6 Ensure bogus ICMP responses are ignored - (sysctl.conf/sysctl.d)"
      info        : "Setting icmp_ignore_bogus_error_responses = 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Rationale:

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages."
      solution    : "Run the following script to set icmp_ignore_bogus_error_responses = 1:

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.icmp_ignore_bogus_error_responses=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.icmp_ignore_bogus_error_responses = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.icmp_ignore_bogus_error_responses[\\s]*=[\\s]*1[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.6 Ensure bogus ICMP responses are ignored - (sysctl exec)"
      info        : "Setting icmp_ignore_bogus_error_responses = 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.

Rationale:

Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages."
      solution    : "Run the following script to set icmp_ignore_bogus_error_responses = 1:

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.icmp_ignore_bogus_error_responses=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.icmp_ignore_bogus_error_responses = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.icmp_ignore_bogus_error_responses"
      expect      : "^[\\s]*net\\.ipv4\\.icmp_ignore_bogus_error_responses[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.7 Ensure Reverse Path Filtering is enabled - 'net.ipv4.conf.all.rp_filter' (sysctl.conf/sysctl.d)"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 1

is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system.

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Run the following script to set:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 1

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.rp_filter=1 net.ipv4.conf.default.rp_filter=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.rp_filter = 2

net.ipv4.conf.default.rp_filter = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.all\\.rp_filter[\\s]*=[\\s]*1[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.7 Ensure Reverse Path Filtering is enabled - 'sysctl net.ipv4.conf.all.rp_filter'"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 1

is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system.

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Run the following script to set:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 1

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.rp_filter=1 net.ipv4.conf.default.rp_filter=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.rp_filter = 2

net.ipv4.conf.default.rp_filter = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.all.rp_filter"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.all\\.rp_filter[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.7 Ensure Reverse Path Filtering is enabled - 'net.ipv4.conf.default.rp_filter' (sysctl.conf/sysctl.d)"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 1

is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system.

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Run the following script to set:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 1

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.rp_filter=1 net.ipv4.conf.default.rp_filter=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.rp_filter = 2

net.ipv4.conf.default.rp_filter = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.conf\\.default\\.rp_filter[\\s]*=[\\s]*1[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.7 Ensure Reverse Path Filtering is enabled - 'sysctl net.ipv4.conf.default.rp_filter'"
      info        : "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).

Rationale:

Setting:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 1

is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system.

Impact:

If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
      solution    : "Run the following script to set:

net.ipv4.conf.all.rp_filter = 1

net.ipv4.conf.default.rp_filter = 1

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.conf.all.rp_filter=1 net.ipv4.conf.default.rp_filter=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.conf.all.rp_filter = 2

net.ipv4.conf.default.rp_filter = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.conf.default.rp_filter"
      expect      : "^[\\s]*net\\.ipv4\\.conf\\.default\\.rp_filter[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.8 Ensure TCP SYN Cookies is enabled - sysctl.conf/sysctl.d"
      info        : "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Rationale:

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. Setting net.ipv4.tcp_syncookies = 1 enables SYN cookies, allowing the system to keep accepting valid connections, even if under a denial of service attack."
      solution    : "Run the following script to set net.ipv4.tcp_syncookies = 1:

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.tcp_syncookies=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.tcp_syncookies = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv4\\.tcp_syncookies[\\s]*=[\\s]*1[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "3.3.8 Ensure TCP SYN Cookies is enabled - sysctl exec"
      info        : "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.

Rationale:

Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. Setting net.ipv4.tcp_syncookies = 1 enables SYN cookies, allowing the system to keep accepting valid connections, even if under a denial of service attack."
      solution    : "Run the following script to set net.ipv4.tcp_syncookies = 1:

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv4.tcp_syncookies=1'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      KPF
   done
}

Default Value:

net.ipv4.tcp_syncookies = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/sbin/sysctl net.ipv4.tcp_syncookies"
      expect      : "^[\\s]*net\\.ipv4\\.tcp_syncookies[\\s]*=[\\s]*1[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for IPv6"
          cmd         : "output=\"\"; grubfile=\"$(find -L /boot -name 'grub.cfg' -type f)\"; [ -f \"$grubfile\" ] && ! grep \"^\\s*linux\" \"$grubfile\" | grep -vq ipv6.disable=1 && output=\"ipv6 disabled in grub config\"; grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" && output=\"ipv6 disabled in sysctl config\"; [ -n \"$output\" ] && echo \"$output\" || echo \"IPv6 is enabled on the system\""
          expect      : "IPv6 is enabled on the system"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - 'net.ipv6.conf.all.accept_ra' (sysctl.conf/sysctl.d)"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.

Setting:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

disables the system's ability to accept IPv6 router advertisements."
          solution    : "Run the following script to set:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv6.conf.all.accept_ra = 1

net.ipv6.conf.default.accept_ra = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_ra[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - 'sysctl net.ipv6.conf.all.accept_ra'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.

Setting:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

disables the system's ability to accept IPv6 router advertisements."
          solution    : "Run the following script to set:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv6.conf.all.accept_ra = 1

net.ipv6.conf.default.accept_ra = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/sysctl net.ipv6.conf.all.accept_ra"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.all\\.accept_ra[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - 'net.ipv6.conf.default.accept_ra' (sysctl.conf/sysctl.d)"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.

Setting:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

disables the system's ability to accept IPv6 router advertisements."
          solution    : "Run the following script to set:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv6.conf.all.accept_ra = 1

net.ipv6.conf.default.accept_ra = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/grep -s -P '^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_ra[\\s]*=[\\s]*0[\\s]*$' /etc/sysctl.conf /etc/sysctl.d/* |/usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "^pass$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - 'sysctl net.ipv6.conf.default.accept_ra'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.

Setting:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

disables the system's ability to accept IPv6 router advertisements."
          solution    : "Run the following script to set:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv6.conf.all.accept_ra = 1

net.ipv6.conf.default.accept_ra = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/sysctl net.ipv6.conf.default.accept_ra"
          expect      : "^[\\s]*net\\.ipv6\\.conf\\.default\\.accept_ra[\\s]*=[\\s]*0[\\s]*$"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - 'net.ipv6.conf.all.accept_ra' (sysctl.conf/sysctl.d)"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.

Setting:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

disables the system's ability to accept IPv6 router advertisements."
          solution    : "Run the following script to set:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv6.conf.all.accept_ra = 1

net.ipv6.conf.default.accept_ra = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - 'sysctl net.ipv6.conf.all.accept_ra'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.

Setting:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

disables the system's ability to accept IPv6 router advertisements."
          solution    : "Run the following script to set:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv6.conf.all.accept_ra = 1

net.ipv6.conf.default.accept_ra = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - 'net.ipv6.conf.default.accept_ra' (sysctl.conf/sysctl.d)"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.

Setting:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

disables the system's ability to accept IPv6 router advertisements."
          solution    : "Run the following script to set:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv6.conf.all.accept_ra = 1

net.ipv6.conf.default.accept_ra = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.3.9 Ensure IPv6 router advertisements are not accepted - 'sysctl net.ipv6.conf.default.accept_ra'"
          info        : "This setting disables the system's ability to accept IPv6 router advertisements.

Rationale:

It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.

Setting:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

disables the system's ability to accept IPv6 router advertisements."
          solution    : "Run the following script to set:

net.ipv6.conf.all.accept_ra = 0

net.ipv6.conf.default.accept_ra = 0

#!/usr/bin/env bash

{
   l_output='' l_output2=''
   l_parlist='net.ipv6.conf.all.accept_ra=0 net.ipv6.conf.default.accept_ra=0'
   l_searchloc='/run/sysctl.d/*.conf /etc/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf $([ -f /etc/default/ufw ] && awk -F= '/^\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)'
   KPF()
   {
      # comment out incorrect parameter(s) in kernel parameter file(s)
      l_fafile='$(grep -s -- '^\s*$l_kpname' $l_searchloc | grep -Pv -- '\h*=\h*$l_kpvalue\b\h*' | awk -F: '{print $1}')'
      for l_bkpf in $l_fafile; do
         echo -e '\n - Commenting out \'$l_kpname\' in \'$l_bkpf\''
         sed -ri '/$l_kpname/s/^/# /' '$l_bkpf'
      done
      # Set correct parameter in a kernel parameter file
      if ! grep -Pslq -- '^\h*$l_kpname\h*=\h*$l_kpvalue\b\h*(#.*)?$' $l_searchloc; then
         echo -e '\n - Setting \'$l_kpname\' to \'$l_kpvalue\' in \'$l_kpfile\''
         echo '$l_kpname = $l_kpvalue' >> '$l_kpfile'
      fi
      # Set correct parameter in active kernel parameters
      l_krp='$(sysctl '$l_kpname' | awk -F= '{print $2}' | xargs)'
      if [ '$l_krp' != '$l_kpvalue' ]; then
         echo -e '\n - Updating \'$l_kpname\' to \'$l_kpvalue\' in the active kernel parameters'
         sysctl -w '$l_kpname=$l_kpvalue'
         sysctl -w '$(awk -F'.' '{print $1'.'$2'.route.flush=1'}' <<< '$l_kpname')'
      fi
   }
   IPV6F_CHK()
   {
      l_ipv6s=''
      grubfile=$(find /boot -type f \( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \) -exec grep -Pl -- '^\h*(kernelopts=|linux|kernel)' {} \;)
      if [ -s '$grubfile' ]; then
         ! grep -P -- '^\h*(kernelopts=|linux|kernel)' '$grubfile' | grep -vq -- ipv6.disable=1 && l_ipv6s='disabled'
      fi
      if grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$' $l_searchloc && \
         sysctl net.ipv6.conf.all.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.all\.disable_ipv6\h*=\h*1\h*(#.*)?$' && \
         sysctl net.ipv6.conf.default.disable_ipv6 | grep -Pqs -- '^\h*net\.ipv6\.conf\.default\.disable_ipv6\h*=\h*1\h*(#.*)?$'; then
         l_ipv6s='disabled'
      fi
      if [ -n '$l_ipv6s' ]; then
         echo -e '\n - IPv6 is disabled on the system, \'$l_kpname\' is not applicable'
      else
         KPF
      fi
   }
   for l_kpe in $l_parlist; do
      l_kpname='$(awk -F= '{print $1}' <<< '$l_kpe')'
      l_kpvalue='$(awk -F= '{print $2}' <<< '$l_kpe')'
      if grep -q '^net.ipv6.' <<< '$l_kpe'; then
         l_kpfile='/etc/sysctl.d/60-netipv6_sysctl.conf'
         IPV6F_CHK
      else
         l_kpfile='/etc/sysctl.d/60-netipv4_sysctl.conf'
         KPF
      fi
   done
}

Default Value:

net.ipv6.conf.all.accept_ra = 1

net.ipv6.conf.default.accept_ra = 1

Additional Information:

NIST SP 800-53 Rev. 5:

CM-1

CM-2

CM-6

CM-7

IA-5

On systems with Uncomplicated Firewall, additional settings may be configured in /etc/ufw/sysctl.conf

The settings in /etc/ufw/sysctl.conf will override settings in /etc/sysctl.conf

This behavior can be changed by updating the IPT_SYSCTL parameter in /etc/default/ufw"
          reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <if>
      <condition type:"OR">
        <custom_item>
          type        : CMD_EXEC
          description : "ufw is installed"
          cmd         : "/usr/bin/dpkg -s ufw 2>&1"
          expect      : "install[\\s]+ok[\\s]+installed"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.1 Ensure ufw is installed"
          info        : "The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall

Rationale:

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package"
          solution    : "Run the following command to install Uncomplicated Firewall (UFW):

apt install ufw"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/dpkg -s ufw | /bin/grep 'Status: install'"
          expect      : "Status: install ok installed"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.2 Ensure iptables-persistent is not installed with ufw"
          info        : "The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin

Rationale:

Running both ufw and the services included in the iptables-persistent package may lead to conflict"
          solution    : "Run the following command to remove the iptables-persistent package:

# apt purge iptables-persistent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/dpkg-query -s iptables-persistent"
          expect      : "package 'iptables-persistent' is not installed and no information is available"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.3 Ensure ufw service is enabled - systemctl"
          info        : "UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall.

Notes:

When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall.

Run the following command before running ufw enable.

# ufw allow proto tcp from any to any port 22

The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy)

By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable

Rationale:

The ufw service must be enabled and running in order for ufw to protect the system

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-enabled ufw"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.3 Ensure ufw service is enabled - ufw"
          info        : "UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall.

Notes:

When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall.

Run the following command before running ufw enable.

# ufw allow proto tcp from any to any port 22

The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy)

By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable

Rationale:

The ufw service must be enabled and running in order for ufw to protect the system

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/ufw status"
          expect      : "Status:[\\s]+active"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.4 Ensure ufw loopback traffic is configured - v4"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/ufw status verbose"
          expect      : "Anywhere[\\s]+DENY[\\s]+IN[\\s]+127.0.0.0/8"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.4 Ensure ufw loopback traffic is configured - v6"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/ufw status verbose"
          expect      : "Anywhere[\\s]+\\(v6\\)[\\s]+DENY[\\s]+IN[\\s]+::1"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.5 Ensure ufw outbound connections are configured"
          info        : "Configure the firewall rules for new outbound connections.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system.

Unlike iptables, when a new outbound rule is added, ufw automatically takes care of associated established connections, so no rules for the latter kind are required.

Rationale:

If rules are not in place for new outbound connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:

# ufw allow out on all"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/ufw status numbered"
          expect      : ""
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.6 Ensure ufw firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

The remediation command opens up the port to traffic from all sources. Consult ufw documentation and set any restrictions in compliance with site policy

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "For each port identified in the audit which does not have a firewall rule, add rule for accepting or denying inbound connections:
Example:

# ufw allow in <port>/<tcp or udp protocol>"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/ss -4tuln; /usr/sbin/ufw status verbose"
          expect      : ""
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.1.7 Ensure ufw default deny firewall policy"
          info        : "A default deny policy on connections ensures that any unconfigured network usage will be rejected.

Note: Any port or protocol without a explicit allow before the default deny will be blocked

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Impact:

Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.

ufw allow git

ufw allow in http

ufw allow out http <- required for apt to connect to repository

ufw allow in https

ufw allow out https

ufw allow out 53

ufw logging on"
          solution    : "Run the following commands to implement a default deny policy:

# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/ufw status verbose"
          expect      : "Default:[\\s]+(deny|reject)[\\s]+\\(incoming\\),[\\s]+(deny|reject)[\\s]+\\(outgoing\\),[\\s]+(deny|reject|disabled)[\\s]+\\(routed\\)"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.1.1 Ensure ufw is installed"
          info        : "The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall

Rationale:

A firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.

The Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.

Note: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package"
          solution    : "Run the following command to install Uncomplicated Firewall (UFW):

apt install ufw"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.1.2 Ensure iptables-persistent is not installed with ufw"
          info        : "The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin

Rationale:

Running both ufw and the services included in the iptables-persistent package may lead to conflict"
          solution    : "Run the following command to remove the iptables-persistent package:

# apt purge iptables-persistent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.1.3 Ensure ufw service is enabled - systemctl"
          info        : "UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall.

Notes:

When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall.

Run the following command before running ufw enable.

# ufw allow proto tcp from any to any port 22

The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy)

By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable

Rationale:

The ufw service must be enabled and running in order for ufw to protect the system

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.1.3 Ensure ufw service is enabled - ufw"
          info        : "UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for managing netfilter, as well as a command-line and available graphical user interface for manipulating the firewall.

Notes:

When running ufw enable or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may drop existing connections (eg ssh). ufw does support adding rules before enabling the firewall.

Run the following command before running ufw enable.

# ufw allow proto tcp from any to any port 22

The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when adding or removing rules (but will when modifying a rule or changing the default policy)

By default, ufw will prompt when enabling the firewall while running under ssh. This can be disabled by using ufw --force enable

Rationale:

The ufw service must be enabled and running in order for ufw to protect the system

Impact:

Changing firewall settings while connected over network can result in being locked out of the system."
          solution    : "Run the following command to unmask the ufw daemon:

# systemctl unmask ufw.service

Run the following command to enable and start the ufw daemon:

# systemctl --now enable ufw.service

active

Run the following command to enable ufw:

# ufw enable"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.1.4 Ensure ufw loopback traffic is configured - v4"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.1.4 Ensure ufw loopback traffic is configured - v6"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# ufw allow in on lo
# ufw allow out on lo
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.1.5 Ensure ufw outbound connections are configured"
          info        : "Configure the firewall rules for new outbound connections.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system.

Unlike iptables, when a new outbound rule is added, ufw automatically takes care of associated established connections, so no rules for the latter kind are required.

Rationale:

If rules are not in place for new outbound connections all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:

# ufw allow out on all"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.1.6 Ensure ufw firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

The remediation command opens up the port to traffic from all sources. Consult ufw documentation and set any restrictions in compliance with site policy

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
          solution    : "For each port identified in the audit which does not have a firewall rule, add rule for accepting or denying inbound connections:
Example:

# ufw allow in <port>/<tcp or udp protocol>"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.1.7 Ensure ufw default deny firewall policy"
          info        : "A default deny policy on connections ensures that any unconfigured network usage will be rejected.

Note: Any port or protocol without a explicit allow before the default deny will be blocked

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.

Impact:

Any port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.

ufw allow git

ufw allow in http

ufw allow out http <- required for apt to connect to repository

ufw allow in https

ufw allow out https

ufw allow out 53

ufw logging on"
          solution    : "Run the following commands to implement a default deny policy:

# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "nftables is installed"
          cmd         : "/usr/bin/dpkg -s nftables 2>&1"
          expect      : "install[\\s]+ok[\\s]+installed"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.1 Ensure nftables is installed"
          info        : "nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.

Notes:

nftables is available in Linux kernel 3.13 and newer

Only one firewall utility should be installed and configured

Changing firewall settings while connected over the network can result in being locked out of the system

Rationale:

nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host."
          solution    : "Run the following command to install nftables:

# apt install nftables"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/dpkg -s nftables | /bin/grep 'Status: install'"
          expect      : "Status: install ok installed"
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Check for ufw"
              cmd         : "/usr/bin/dpkg-query -s ufw"
              expect      : "package 'ufw' is not installed and no information is available"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.2.2 Ensure ufw is uninstalled or disabled with nftables"
              info        : "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Rationale:

Running both the nftables service and ufw may lead to conflict and unexpected results."
              solution    : "Run one of the following commands to either remove ufw or disable ufw
Run the following command to remove ufw:

# apt purge ufw

Run the following command to disable ufw:

# ufw disable"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/usr/bin/dpkg-query -s ufw"
              expect      : "package 'ufw' is not installed and no information is available"
            </custom_item>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.2.2 Ensure ufw is uninstalled or disabled with nftables"
              info        : "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Rationale:

Running both the nftables service and ufw may lead to conflict and unexpected results."
              solution    : "Run one of the following commands to either remove ufw or disable ufw
Run the following command to remove ufw:

# apt purge ufw

Run the following command to disable ufw:

# ufw disable"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/usr/sbin/ufw status"
              expect      : "Status: inactive"
            </custom_item>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.3 Ensure iptables are flushed with nftables"
          info        : "nftables is a replacement for iptables, ip6tables, ebtables and arptables

Rationale:

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following commands to flush iptables:
For iptables:

# iptables -F

For ip6tables:

# ip6tables -F"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/iptables -L;/usr/sbin/ip6tables -L"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.4 Ensure a nftables table exists"
          info        : "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

Rationale:

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system"
          solution    : "Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list tables"
          expect      : "^table[\\s]+inet[\\s]+"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.5 Ensure nftables base chains exist - input"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook input'"
          expect      : "^type[\\s]+filter[\\s]+hook[\\s]+input[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.5 Ensure nftables base chains exist - forward"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook forward'"
          expect      : "^type[\\s]+filter[\\s]+hook[\\s]+forward[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.5 Ensure nftables base chains exist - output"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook output'"
          expect      : "^type[\\s]+filter[\\s]+hook[\\s]+output[\\s]+priority[\\s]+0;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.6 Ensure nftables loopback traffic is configured - lo"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled on the system:
Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /usr/bin/awk '/hook input/,/}/' | /bin/grep 'iif \"lo\" accept'"
          expect      : "iif \"lo\" accept"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.6 Ensure nftables loopback traffic is configured - v4"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled on the system:
Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /usr/bin/awk '/hook input/,/}/' | /bin/grep 'ip saddr'"
          expect      : "ip saddr 127.0.0.0/8 counter"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.6 Ensure nftables loopback traffic is configured - v6"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled on the system:
Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /usr/bin/awk '/hook input/,/}/' | /bin/grep 'ip6 saddr'"
          expect      : "ip6 saddr ::1 counter"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.7 Ensure nftables outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established connections

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.8 Ensure nftables default deny firewall policy - input"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook input'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+input[\\s]+priority[\\s]+0;[\\s]+policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.8 Ensure nftables default deny firewall policy - forward"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook forward'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+forward[\\s]+priority[\\s]+0;[\\s]+policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.8 Ensure nftables default deny firewall policy - output"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/sbin/nft list ruleset | /bin/grep 'hook output'"
          expect      : "type[\\s]+filter[\\s]+hook[\\s]+output[\\s]+priority[\\s]+0;[\\s]+policy[\\s]+drop;"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.9 Ensure nftables service is enabled"
          info        : "The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service

Rationale:

The nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service"
          solution    : "Run the following command to enable the nftables service:

# systemctl enable nftables"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-enabled nftables"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.10 Ensure nftables rules are permanent - hook input"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/nftables.conf

Add the line:

include '/etc/nftables.rules'"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "[ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] && awk '/hook input/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/nftables.conf)"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.10 Ensure nftables rules are permanent - hook forward"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/nftables.conf

Add the line:

include '/etc/nftables.rules'"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "[ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] && awk '/hook forward/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/nftables.conf)"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.2.10 Ensure nftables rules are permanent - hook output"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/nftables.conf

Add the line:

include '/etc/nftables.rules'"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "[ -n \"$(grep -E '^\\s*include' /etc/nftables.conf)\" ] && awk '/hook output/,/}/' $(awk '$1 ~ /^\\s*include/ { gsub(\"\\\"\",\"\",$2);print $2 }' /etc/nftables.conf)"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.2.1 Ensure nftables is installed"
          info        : "nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.

Notes:

nftables is available in Linux kernel 3.13 and newer

Only one firewall utility should be installed and configured

Changing firewall settings while connected over the network can result in being locked out of the system

Rationale:

nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host."
          solution    : "Run the following command to install nftables:

# apt install nftables"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.2 Ensure ufw is uninstalled or disabled with nftables"
          info        : "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Rationale:

Running both the nftables service and ufw may lead to conflict and unexpected results."
          solution    : "Run one of the following commands to either remove ufw or disable ufw
Run the following command to remove ufw:

# apt purge ufw

Run the following command to disable ufw:

# ufw disable"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.3 Ensure iptables are flushed with nftables"
          info        : "nftables is a replacement for iptables, ip6tables, ebtables and arptables

Rationale:

It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded"
          solution    : "Run the following commands to flush iptables:
For iptables:

# iptables -F

For ip6tables:

# ip6tables -F"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.4 Ensure a nftables table exists"
          info        : "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.

Rationale:

nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.

Impact:

Adding rules to a running nftables can cause loss of connectivity to the system"
          solution    : "Run the following command to create a table in nftables

# nft create table inet <table name>

Example:

# nft create table inet filter"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.5 Ensure nftables base chains exist - input"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.5 Ensure nftables base chains exist - forward"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.5 Ensure nftables base chains exist - output"
          info        : "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.

Rationale:

If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command to create the base chains:

# nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \; }

Example:

# nft create chain inet filter input { type filter hook input priority 0 \; }

# nft create chain inet filter forward { type filter hook forward priority 0 \; }

# nft create chain inet filter output { type filter hook output priority 0 \; }"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.6 Ensure nftables loopback traffic is configured - lo"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled on the system:
Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.6 Ensure nftables loopback traffic is configured - v4"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled on the system:
Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.6 Ensure nftables loopback traffic is configured - v6"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# nft add rule inet filter input iif lo accept

# nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop

IF IPv6 is enabled on the system:
Run the following command to implement the IPv6 loopback rule:

# nft add rule inet filter input ip6 saddr ::1 counter drop"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.7 Ensure nftables outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established connections

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure nftables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# nft add rule inet filter input ip protocol tcp ct state established accept

# nft add rule inet filter input ip protocol udp ct state established accept

# nft add rule inet filter input ip protocol icmp ct state established accept

# nft add rule inet filter output ip protocol tcp ct state new,related,established accept

# nft add rule inet filter output ip protocol udp ct state new,related,established accept

# nft add rule inet filter output ip protocol icmp ct state new,related,established accept"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.8 Ensure nftables default deny firewall policy - input"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.8 Ensure nftables default deny firewall policy - forward"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.8 Ensure nftables default deny firewall policy - output"
          info        : "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.

Rationale:

There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack.

It is easier to white list acceptable usage than to black list unacceptable usage.

Note: Changing firewall settings while connected over network can result in being locked out of the system.

Impact:

If configuring nftables over ssh, creating a base chain with a policy of drop will cause loss of connectivity.

Ensure that a rule allowing ssh has been added to the base chain prior to setting the base chain's policy to drop"
          solution    : "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy:

# nft chain <table family> <table name> <chain name> { policy drop \; }

Example:

# nft chain inet filter input { policy drop \; }

# nft chain inet filter forward { policy drop \; }

# nft chain inet filter output { policy drop \; }

Default Value:

accept"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.9 Ensure nftables service is enabled"
          info        : "The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service

Rationale:

The nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service"
          solution    : "Run the following command to enable the nftables service:

# systemctl enable nftables"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.2.10 Ensure nftables rules are permanent"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.

The nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset.

A nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.

Rationale:

Changes made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot"
          solution    : "Edit the /etc/nftables.conf file and un-comment or add a line with include <Absolute path to nftables rules file> for each nftables file you want included in the nftables ruleset on boot
Example:

# vi /etc/nftables.conf

Add the line:

include '/etc/nftables.rules'"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "iptables is installed"
          cmd         : "/usr/bin/dpkg -s iptables 2>&1"
          expect      : "install[\\s]+ok[\\s]+installed"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.1.1 Ensure iptables packages are installed - iptables"
          info        : "iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

Rationale:

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall."
          solution    : "Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/dpkg -s iptables 2>&1"
          expect      : "install[\\s]+ok[\\s]+installed"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.1.1 Ensure iptables packages are installed - iptables-persistent"
          info        : "iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

Rationale:

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall."
          solution    : "Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/dpkg -s iptables-persistent 2>&1"
          expect      : "install[\\s]+ok[\\s]+installed"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.1.2 Ensure nftables is not installed with iptables"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Rationale:

Running both iptables and nftables may lead to conflict."
          solution    : "Run the following command to remove nftables:

# apt purge nftables"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/dpkg -s nftables 2>&1"
          expect      : "package 'nftables' is not installed"
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Check for ufw"
              cmd         : "/usr/bin/dpkg-query -s ufw"
              expect      : "package 'ufw' is not installed and no information is available"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.1.3 Ensure ufw is uninstalled or disabled with iptables"
              info        : "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Uses a command-line interface consisting of a small number of simple commands

Uses iptables for configuration

Rationale:

Running iptables.persistent with ufw enabled may lead to conflict and unexpected results."
              solution    : "Run one of the following commands to either remove ufw or stop and mask ufw
Run the following command to remove ufw:

# apt purge ufw

OR
Run the following commands to disable ufw:

# ufw disable
# systemctl stop ufw
# systemctl mask ufw"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/usr/bin/dpkg-query -s ufw"
              expect      : "package 'ufw' is not installed and no information is available"
            </custom_item>
          </then>

          <else>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.1.3 Ensure ufw is uninstalled or disabled with iptables"
              info        : "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Uses a command-line interface consisting of a small number of simple commands

Uses iptables for configuration

Rationale:

Running iptables.persistent with ufw enabled may lead to conflict and unexpected results."
              solution    : "Run one of the following commands to either remove ufw or stop and mask ufw
Run the following command to remove ufw:

# apt purge ufw

OR
Run the following commands to disable ufw:

# ufw disable
# systemctl stop ufw
# systemctl mask ufw"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/usr/sbin/ufw status"
              expect      : "Status: inactive"
            </custom_item>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.1 Ensure iptables default deny firewall policy - 'Chain INPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/iptables -L -n | /bin/grep 'Chain INPUT'"
          expect      : "^Chain INPUT \\(policy DROP\\)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.1 Ensure iptables default deny firewall policy - 'Chain FORWARD'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/iptables -L -n | /bin/grep 'Chain FORWARD'"
          expect      : "^Chain FORWARD \\(policy DROP\\)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.1 Ensure iptables default deny firewall policy - 'Chain OUTPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/iptables -L -n | /bin/grep 'Chain OUTPUT'"
          expect      : "^Chain OUTPUT \\(policy DROP\\)"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.2 Ensure iptables loopback traffic is configured"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/iptables -L INPUT -v -n; /sbin/iptables -L OUTPUT -v -n"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.3 Ensure iptables outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established connections.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/sbin/iptables -L -v -n"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "3.5.3.2.4 Ensure iptables firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/ss -4tuln; /sbin/iptables -L INPUT -v -n"
          expect      : "Manual Review Required"
          severity    : MEDIUM
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Check for IPv6"
              cmd         : "output=\"\"; grubfile=\"$(find -L /boot -name 'grub.cfg' -type f)\"; [ -f \"$grubfile\" ] && ! grep \"^\\s*linux\" \"$grubfile\" | grep -vq ipv6.disable=1 && output=\"ipv6 disabled in grub config\"; grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && grep -Eqs \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.all\\.disable_ipv6\\s*=\\s*1\\b\" && sysctl net.ipv6.conf.default.disable_ipv6 | grep -Eq \"^\\s*net\\.ipv6\\.conf\\.default\\.disable_ipv6\\s*=\\s*1\\b\" && output=\"ipv6 disabled in sysctl config\"; [ -n \"$output\" ] && echo \"$output\" || echo \"IPv6 is enabled on the system\""
              expect      : "IPv6 is enabled on the system"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain INPUT'"
              info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
              solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/sbin/ip6tables -L -n | /bin/grep 'Chain INPUT'"
              expect      : "^Chain INPUT \\(policy DROP\\)"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain FORWARD'"
              info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
              solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/sbin/ip6tables -L -n | /bin/grep 'Chain FORWARD'"
              expect      : "^Chain FORWARD \\(policy DROP\\)"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain OUTPUT'"
              info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
              solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/sbin/ip6tables -L -n | /bin/grep 'Chain OUTPUT'"
              expect      : "^Chain OUTPUT \\(policy DROP\\)"
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.3.2 Ensure ip6tables loopback traffic is configured"
              info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
              solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/sbin/ip6tables -L INPUT -v -n; /sbin/ip6tables -L OUTPUT -v -n"
              expect      : "Manual Review Required"
              severity    : MEDIUM
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.3.3 Ensure ip6tables outbound and established connections are configured"
              info        : "Configure the firewall rules for new outbound, and established IPv6 connections.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
              solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/sbin/iptables -L -v -n"
              expect      : "Manual Review Required"
              severity    : MEDIUM
            </custom_item>

            <custom_item>
              system      : "Linux"
              type        : CMD_EXEC
              description : "3.5.3.3.4 Ensure ip6tables firewall rules exist for all open ports"
              info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
              solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
              cmd         : "/bin/ss -4tuln; /sbin/iptables -L INPUT -v -n"
              expect      : "Manual Review Required"
              severity    : MEDIUM
            </custom_item>
          </then>

          <else>
            <report type:"PASSED">
              description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain INPUT'"
              info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
              solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
            </report>

            <report type:"PASSED">
              description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain FORWARD'"
              info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
              solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
            </report>

            <report type:"PASSED">
              description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain OUTPUT'"
              info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
              solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
            </report>

            <report type:"PASSED">
              description : "3.5.3.3.2 Ensure ip6tables loopback traffic is configured"
              info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
              solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
            </report>

            <report type:"PASSED">
              description : "3.5.3.3.3 Ensure ip6tables outbound and established connections are configured"
              info        : "Configure the firewall rules for new outbound, and established IPv6 connections.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
              solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
            </report>

            <report type:"PASSED">
              description : "3.5.3.3.4 Ensure ip6tables firewall rules exist for all open ports"
              info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
              solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
              reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
              see_also    : "https://workbench.cisecurity.org/files/4115"
            </report>
          </else>
        </if>
      </then>

      <else>
        <report type:"PASSED">
          description : "3.5.3.1.1 Ensure iptables packages are installed - iptables"
          info        : "iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

Rationale:

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall."
          solution    : "Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.1.1 Ensure iptables packages are installed - iptables-persistent"
          info        : "iptables is a utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall, implemented as different Netfilter modules, and the chains and rules it stores. Different kernel modules and programs are used for different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and ebtables to Ethernet frames.

Rationale:

A method of configuring and maintaining firewall rules is necessary to configure a Host Based Firewall."
          solution    : "Run the following command to install iptables and iptables-persistent

# apt install iptables iptables-persistent"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.1.2 Ensure nftables is not installed with iptables"
          info        : "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

Rationale:

Running both iptables and nftables may lead to conflict."
          solution    : "Run the following command to remove nftables:

# apt purge nftables"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.1.3 Ensure ufw is uninstalled or disabled with iptables"
          info        : "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.

Uses a command-line interface consisting of a small number of simple commands

Uses iptables for configuration

Rationale:

Running iptables.persistent with ufw enabled may lead to conflict and unexpected results."
          solution    : "Run one of the following commands to either remove ufw or stop and mask ufw
Run the following command to remove ufw:

# apt purge ufw

OR
Run the following commands to disable ufw:

# ufw disable
# systemctl stop ufw
# systemctl mask ufw"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.1 Ensure iptables default deny firewall policy - 'Chain INPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.1 Ensure iptables default deny firewall policy - 'Chain FORWARD'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.1 Ensure iptables default deny firewall policy - 'Chain OUTPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.2 Ensure iptables loopback traffic is configured"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8).

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.3 Ensure iptables outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established connections.

Notes:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.2.4 Ensure iptables firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain INPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain FORWARD'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.1 Ensure ip6tables default deny firewall policy - 'Chain OUTPUT'"
          info        : "A default deny all policy on connections ensures that any unconfigured network usage will be rejected.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
          solution    : "Run the following commands to implement a default DROP policy:

# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.2 Ensure ip6tables loopback traffic is configured"
          info        : "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1).

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
          solution    : "Run the following commands to implement the loopback rules:

# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.3 Ensure ip6tables outbound and established connections are configured"
          info        : "Configure the firewall rules for new outbound, and established IPv6 connections.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

Rationale:

If rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage."
          solution    : "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:

# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "3.5.3.3.4 Ensure ip6tables firewall rules exist for all open ports"
          info        : "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.

Note:

Changing firewall settings while connected over network can result in being locked out of the system

Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well

The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy

Rationale:

Without a firewall rule configured for open ports default firewall policy will drop all packets to these ports."
          solution    : "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:

# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j ACCEPT"
          reference   : "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "4.1.4.11 Ensure cryptographic mechanisms are used to protect the integrity of audit tools - auditctl"
      info            : "Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Rationale:

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files."
      solution        : "Add or update the following selection lines for to a file ending in .conf in the /etc/aide/aide.conf.d/ or to /etc/aide/aide.conf to protect the integrity of the audit tools:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512"
      reference       : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also        : "https://workbench.cisecurity.org/files/4115"
      file            : "/etc/aide/aide.conf.d/*.conf /etc/aide/aide.conf"
      regex           : "^[\\s]*(/usr)?/sbin/auditctl[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattr\\+sha512"
      expect          : "^[\\s]*(/usr)?/sbin/auditctl[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattr\\+sha512"
      min_occurrences : "1"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.4.11 Ensure cryptographic mechanisms are used to protect the integrity of audit tools - auditd"
      info        : "Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Rationale:

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files."
      solution    : "Add or update the following selection lines for to a file ending in .conf in the /etc/aide/aide.conf.d/ or to /etc/aide/aide.conf to protect the integrity of the audit tools:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/aide/aide.conf"
      regex       : "^[\\s]*(/usr)?/sbin/auditd[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
      expect      : "^[\\s]*(/usr)?/sbin/auditd[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.4.11 Ensure cryptographic mechanisms are used to protect the integrity of audit tools - ausearch"
      info        : "Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Rationale:

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files."
      solution    : "Add or update the following selection lines for to a file ending in .conf in the /etc/aide/aide.conf.d/ or to /etc/aide/aide.conf to protect the integrity of the audit tools:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/aide/aide.conf"
      regex       : "^[\\s]*(/usr)?/sbin/ausearch[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
      expect      : "^[\\s]*(/usr)?/sbin/ausearch[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.4.11 Ensure cryptographic mechanisms are used to protect the integrity of audit tools - aureport"
      info        : "Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Rationale:

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files."
      solution    : "Add or update the following selection lines for to a file ending in .conf in the /etc/aide/aide.conf.d/ or to /etc/aide/aide.conf to protect the integrity of the audit tools:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/aide/aide.conf"
      regex       : "^[\\s]*(/usr)?/sbin/aureport[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
      expect      : "^[\\s]*(/usr)?/sbin/aureport[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.4.11 Ensure cryptographic mechanisms are used to protect the integrity of audit tools - autrace"
      info        : "Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Rationale:

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files."
      solution    : "Add or update the following selection lines for to a file ending in .conf in the /etc/aide/aide.conf.d/ or to /etc/aide/aide.conf to protect the integrity of the audit tools:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/aide/aide.conf"
      regex       : "^[\\s]*(/usr)?/sbin/autrace[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
      expect      : "^[\\s]*(/usr)?/sbin/autrace[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.1.4.11 Ensure cryptographic mechanisms are used to protect the integrity of audit tools - augenrules"
      info        : "Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.

Rationale:

Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs.

Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files."
      solution    : "Add or update the following selection lines for to a file ending in .conf in the /etc/aide/aide.conf.d/ or to /etc/aide/aide.conf to protect the integrity of the audit tools:

# Audit Tools
/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/aide/aide.conf"
      regex       : "^[\\s]*(/usr)?/sbin/augenrules[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
      expect      : "^[\\s]*(/usr)?/sbin/augenrules[\\s]+p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.1.1.1 Ensure systemd-journal-remote is installed"
      info        : "Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system."
      solution    : "Run the following command to install systemd-journal-remote:

# apt install systemd-journal-remote"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s systemd-journal-remote 2>&1"
      expect      : "^[\\s]*Status: install ok installed[\\s]*"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.1.1.2 Ensure systemd-journal-remote is configured"
      info        : "Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Edit the /etc/systemd/journal-upload.conf file and ensure the following lines are set per your environment:

URL=192.168.50.42
ServerKeyFile=/etc/ssl/private/journal-upload.pem
ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
TrustedCertificateFile=/etc/ssl/ca/trusted.pem

Restart the service:

# systemctl restart systemd-journal-upload"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/grep -P '^ *URL=|^ *ServerKeyFile=|^ *ServerCertificateFile=|^ *TrustedCertificateFile=' /etc/systemd/journal-upload.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.1.1.3 Ensure systemd-journal-remote is enabled"
      info        : "Journald (via systemd-journal-remote) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system."
      solution    : "Run the following command to enable systemd-journal-remote:

# systemctl --now enable systemd-journal-upload.service"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/systemctl is-enabled systemd-journal-upload.service"
      expect      : "enabled"
    </custom_item>

    <custom_item>
      system        : "Linux"
      type          : CMD_EXEC
      description   : "4.2.1.1.4 Ensure journald is not configured to recieve logs from a remote client"
      info          : "Journald supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.

NOTE:

The same package, systemd-journal-remote, is used for both sending logs to remote hosts and receiving incoming logs.

With regards to receiving logs, there are two services; systemd-journal-remote.socket and systemd-journal-remote.service.

Rationale:

If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary."
      solution      : "Run the following command to disable systemd-journal-remote.socket:

# systemctl --now disable systemd-journal-remote.socket"
      reference     : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|CM-6,800-53|CM-7,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|CM-6,800-53r5|CM-7,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|9.2,CSCv8|4.8,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.PT-1,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS15a,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|6.4"
      see_also      : "https://workbench.cisecurity.org/files/4115"
      cmd           : "/usr/bin/systemctl is-enabled systemd-journal-upload.service | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'"
      expect        : "(disabled|masked|static)"
      dont_echo_cmd : YES
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.1.2 Ensure journald service is enabled"
      info        : "Ensure that the systemd-journald service is enabled to allow capturing of logging events.

Rationale:

If the systemd-journald service is not enabled to start on boot, the system will not capture logging events."
      solution    : "By default the systemd-journald service does not have an [Install] section and thus cannot be enabled / disabled. It is meant to be referenced as Requires or Wants by other unit files. As such, if the status of systemd-journald is not static, investigate why."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/systemctl is-enabled systemd-journald.service"
      expect      : "static"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.2.1.3 Ensure journald is configured to compress large log files"
      info        : "The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.

Rationale:

Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts."
      solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

Compress=yes

Restart the service:

# systemctl restart systemd-journald

Additional Information:

The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters.

It is possible to change the default threshold of 512 bytes per object before compression is used."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.4,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/systemd/journald.conf"
      regex       : "^[\\s]*Compress[\\s]*="
      expect      : "^[\\s]*Compress[\\s]*=[\\s]*yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "4.2.1.4 Ensure journald is configured to write logfiles to persistent disk"
      info        : "Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.

Rationale:

Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot."
      solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

Storage=persistent

Restart the service:

# systemctl restart systemd-journald

Additional Information:

The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configs present, they override the main configuration parameters."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/systemd/journald.conf"
      regex       : "^[\\s]*Storage[\\s]*="
      expect      : "^[\\s]*Storage[\\s]*=[\\s]*persistent[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "4.2.1.5 Ensure journald is not configured to send logs to rsyslog"
      info        : "Data from journald should be kept in the confines of the service and not forwarded on to other services.

Rationale:

IF journald is the method for capturing logs, all logs of the system should be handled by journald and not forwarded to other logging mechanisms."
      solution    : "Edit the /etc/systemd/journald.conf file and ensure that ForwardToSyslog=yes is removed.
Restart the service:

# systemctl restart systemd-journald"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.5,800-171|3.3.6,800-53|AU-2,800-53|AU-6(3),800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-6(3),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(d),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.5,CSCv8|8.2,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.AN-3,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-6(3),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.2.5,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/systemd/journald.conf"
      regex       : "^[\\s]*ForwardToSyslog[\\s]*="
      expect      : "^[\\s]*ForwardToSyslog[\\s]*=[\\s]*yes[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.1.6 Ensure journald log rotation is configured per site policy"
      info        : "Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/systemd/journald.conf is the configuration file used to specify how logs generated by Journald should be rotated.

Rationale:

By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Review /etc/systemd/journald.conf and verify logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritisation of parameters.
The specific parameters for log rotation are:

SystemMaxUse=
SystemKeepFree=
RuntimeMaxUse=
RuntimeKeepFree=
MaxFileSec=

Additional Information:

See man 5 journald.conf for detailed information regarding the parameters in use."
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/grep -P '^\\s*(SystemMaxUse|SystemKeepFree|RuntimeMaxUse|RuntimeKeepFree|MaxFileSec)\\s*=' /etc/systemd/journald.conf"
      expect      : "Manual Review Required"
      severity    : MEDIUM
    </custom_item>

    <report type:"WARNING">
      description : "4.2.1.7 Ensure journald default file permissions configured"
      info        : "Journald will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

Rationale:

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "If the default configuration is not appropriate for the site specific requirements, copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and modify as required. Requirements is either 0640 or site policy if that is less restrictive.

Additional Information:

See man 5 tmpfiles.d for detailed information on the permission sets for the relevant log files. Further information with examples can be found at https://www.freedesktop.org/software/systemd/man/tmpfiles.d.html"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|MP-2,CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(a),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSCv7|6.2,CSCv7|6.3,CSCv8|3.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-2,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
    </report>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : CMD_EXEC
          description : "Check for rsyslog"
          cmd         : "/usr/bin/dpkg -s rsyslog 2>&1"
          expect      : "^[\\s]*Status: install ok installed[\\s]*"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.2.1 Ensure rsyslog is installed"
          info        : "The rsyslog software is recommended in environments where journald does not meet operation requirements.

Rationale:

The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package."
          solution    : "Run the following command to install rsyslog:

# apt install rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/dpkg -s rsyslog 2>&1"
          expect      : "^[\\s]*Status: install ok installed[\\s]*"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.2.2 Ensure rsyslog service is enabled"
          info        : "Once the rsyslog package is installed, ensure that the service is enabled.

Rationale:

If the rsyslog service is not enabled to start on boot, the system will not capture logging events."
          solution    : "Run the following command to enable rsyslog:

# systemctl --now enable rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/bin/systemctl is-enabled rsyslog"
          expect      : "enabled"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "4.2.2.3 Ensure journald is configured to send logs to rsyslog"
          info        : "Data from journald may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of journald logs, however, use of the RSyslog service provides a consistent means of log collection and export.

Rationale:

IF RSyslog is the preferred method for capturing logs, all logs of the system should be sent to it for further processing."
          solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

ForwardToSyslog=yes

Restart the service:

# systemctl restart rsyslog

Additional Information:

As noted in the journald man pages, journald logs may be exported to rsyslog either through the process mentioned here, or through a facility like systemd-journald.service. There are trade-offs involved in each implementation, where ForwardToSyslog will immediately capture all events (and forward to an external log server, if properly configured), but may not capture all boot-up activities. Mechanisms such as systemd-journald.service, on the other hand, will record bootup events, but may delay sending the information to rsyslog, leading to the potential for log manipulation prior to export. Be aware of the limitations of all tools employed to secure a system.

The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configurations present, they override the main configuration parameters"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.5,800-171|3.3.6,800-53|AU-2,800-53|AU-6(3),800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-6(3),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(d),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.5,CSCv8|8.2,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.AN-3,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-6(3),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.2.5,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/systemd/journald.conf"
          regex       : "^[\\s]*ForwardToSyslog[\\s]*="
          expect      : "^[\\s]*ForwardToSyslog[\\s]*=[\\s]*['\"]?yes[\"']?[\\s]*$"
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.4 Ensure rsyslog default file permissions are configured"
          info            : "RSyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

Rationale:

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.

Impact:

The systems global umask could override, but only making the file permissions stricter, what is configured in RSyslog with the FileCreateMode directive. RSyslog also has it's own $umask directive that can alter the intended file creation mode. In addition, consideration should be given to how FileCreateMode is used.

Thus it is critical to ensure that the intended file creation mode is not overridden with less restrictive settings in /etc/rsyslog.conf, /etc/rsyslog.d/*conf files and that FileCreateMode is set before any file is created."
          solution        : "Edit either /etc/rsyslog.conf or a dedicated .conf file in /etc/rsyslog.d/ and set $FileCreateMode to 0640 or more restrictive:

$FileCreateMode 0640

Restart the service:

# systemctl restart rsyslog"
          reference       : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|MP-2,CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(a),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSCv7|6.2,CSCv7|6.3,CSCv8|3.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-2,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*\\$FileCreateMode"
          expect          : "\\$FileCreateMode 0[246][04]0[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - '*.emerg :omusrmsg:*'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*\\*\\.emerg"
          expect          : "\\*\\.emerg[\\s]+\\:omusrmsg\\:\\*[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'auth,authpriv.* /var/log/auth.log'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*auth,authpriv\\.\\*"
          expect          : "auth,authpriv\\.\\*[\\s]+/var/log/auth\\.log[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'mail.* -/var/log/mail'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*mail\\.\\*"
          expect          : "mail\\.\\*[\\s]+-/var/log/mail(\\.log)?[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'mail.info -/var/log/mail.info'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*mail\\.info"
          expect          : "mail\\.info[\\s]+-/var/log/mail\\.info[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'mail.warning -/var/log/mail.warn'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*mail\\.warning"
          expect          : "mail\\.warning[\\s]+-/var/log/mail\\.warn[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'mail.err /var/log/mail.err'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*mail\\.err"
          expect          : "mail\\.err[\\s]+/var/log/mail\\.err[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'news.crit -/var/log/news/news.crit'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*news\\.crit"
          expect          : "news\\.crit[\\s]+-/var/log/news/news\\.crit[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'news.err -/var/log/news/news.err'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*news\\.err"
          expect          : "news\\.err[\\s]+-/var/log/news/news\\.err[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'news.notice -/var/log/news/news.notice'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*news\\.notice"
          expect          : "news\\.notice[\\s]+-/var/log/news/news\\.notice[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - '*.=warning;*.=err -/var/log/warn'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*\\*\\.=warning;\\*\\.=err"
          expect          : "\\*\\.=warning;\\*\\.=err[\\s]+-/var/log/warn[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - '*.crit /var/log/warn'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*\\*\\.crit"
          expect          : "\\*\\.crit[\\s]+/var/log/warn[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - '*.*;mail.none;news.none -/var/log/messages'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*\\*\\.\\*;mail\.none;news\\.none"
          expect          : "\\*\\.\\*;mail\\.none;news\\.none[\\s]+-/var/log/messages[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'local0,local1.* -/var/log/localmessages'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*local0,local1"
          expect          : "local0,local1\\.\\*[\\s]+-/var/log/localmessages[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'local2,local3.* -/var/log/localmessages'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*local2,local3"
          expect          : "local2,local3\\.\\*[\\s]+-/var/log/localmessages[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'local4,local5.* -/var/log/localmessages'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*local4,local5"
          expect          : "local4,local5\\.\\*[\\s]+-/var/log/localmessages[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <custom_item>
          system          : "Linux"
          type            : FILE_CONTENT_CHECK
          description     : "4.2.2.5 Ensure logging is configured - 'local6,local7.* -/var/log/localmessages'"
          info            : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution        : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also        : "https://workbench.cisecurity.org/files/4115"
          file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
          regex           : "^[\\s]*local6,local7"
          expect          : "local6,local7\\.\\*[\\s]+-/var/log/localmessages[\\s]*$"
          min_occurrences : "1"
          string_required : NO
        </custom_item>

        <if>
          <condition type:"AND">
            <custom_item>
              type        : CMD_EXEC
              description : "Check to see if target is rsyslog client or server"
              cmd         : "/usr/bin/lsof -i -P -n | /usr/bin/grep rsyslogd | /usr/bin/awk \'{print} END {if (NR==0) print \"client\"; else print \"server\"}\'"
              expect      : "client"
            </custom_item>
          </condition>

          <then>
            <custom_item>
              system          : "Linux"
              type            : FILE_CONTENT_CHECK
              description     : "4.2.2.6 Ensure rsyslog is configured to send logs to a remote log host"
              info            : "RSyslog supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system."
              solution        : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host). The target directive may either be a fully qualified domain name or an IP address.

*.* action(type='omfwd' target='192.168.2.100' port='514' protocol='tcp'
           action.resumeRetryCount='100'
           queue.type='LinkedList' queue.size='1000')

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
              reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
              see_also        : "https://workbench.cisecurity.org/files/4115"
              file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
              regex           : "(^[\\s]*([^#]+[\\s]+)?action\\(([^#]+[\\s]+)?\\btarget=\\\"?[^#\"]+\\\"?\\b|^[^#]*[\\s]*[\\s]+[\\s]+@)"
              expect          : "(target=\")?(\@)?@SYSLOG_SERVER@"
              min_occurrences : "1"
              string_required : NO
            </custom_item>
          </then>

          <else>
            <custom_item>
              system          : "Linux"
              type            : FILE_CONTENT_CHECK
              description     : "4.2.2.6 Ensure rsyslog is configured to send logs to a remote log host"
              info            : "RSyslog supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system."
              solution        : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host). The target directive may either be a fully qualified domain name or an IP address.

*.* action(type='omfwd' target='192.168.2.100' port='514' protocol='tcp'
           action.resumeRetryCount='100'
           queue.type='LinkedList' queue.size='1000')

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
              reference       : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
              see_also        : "https://workbench.cisecurity.org/files/4115"
              file            : "/etc/rsyslog.conf /etc/rsyslog.d/*.conf"
              regex           : "(^[\\s]*([^#]+[\\s]+)?action\\(([^#]+[\\s]+)?\\btarget=\\\"?[^#\"]+\\\"?\\b|^[^#]*[\\s]*[\\s]+[\\s]+@)"
              expect          : "(target=\")?(\@)?@SYSLOG_SERVER@"
              string_required : NO
            </custom_item>
          </else>
        </if>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.2.7 Ensure rsyslog is not configured to receive logs from a remote client - ModLoad imtcp"
          info        : "RSyslog supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.

Rationale:

If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary."
          solution    : "Should there be any active log server configuration found in the auditing section, modify those file and remove the specific lines highlighted by the audit. Ensure none of the following entries are present in any of /etc/rsyslog.conf or /etc/rsyslog.d/*.conf.

Old format

$ModLoad imtcp
$InputTCPServerRun

New format

module(load='imtcp')
input(type='imtcp' port='514')

Restart the service:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|CM-6,800-53|CM-7,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|CM-6,800-53r5|CM-7,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|9.2,CSCv8|4.8,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.PT-1,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS15a,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/grep -Ps -- '^\\h*(\\$ModLoad imtcp|module\\(load=\"imtcp\"\\))' /etc/rsyslog.conf /etc/rsyslog.d/* | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "4.2.2.7 Ensure rsyslog is not configured to receive logs from a remote client - InputTCPServerRun 514"
          info        : "RSyslog supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.

Rationale:

If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary."
          solution    : "Should there be any active log server configuration found in the auditing section, modify those file and remove the specific lines highlighted by the audit. Ensure none of the following entries are present in any of /etc/rsyslog.conf or /etc/rsyslog.d/*.conf.

Old format

$ModLoad imtcp
$InputTCPServerRun

New format

module(load='imtcp')
input(type='imtcp' port='514')

Restart the service:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|CM-6,800-53|CM-7,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|CM-6,800-53r5|CM-7,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|9.2,CSCv8|4.8,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.PT-1,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS15a,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          cmd         : "/usr/bin/grep -Ps -- '^\\h*(\\$InputTCPServerRun|input\\(type=\"imtcp\"\\h*port=\"514\"\\))' '^\s*$InputTCPServerRun 514' /etc/rsyslog.conf /etc/rsyslog.d/* | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
          expect      : "pass"
        </custom_item>
      </then>

      <else>
        <report type:"PASSED">
          description : "4.2.2.1 Ensure rsyslog is installed"
          info        : "The rsyslog software is recommended in environments where journald does not meet operation requirements.

Rationale:

The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package."
          solution    : "Run the following command to install rsyslog:

# apt install rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.2 Ensure rsyslog service is enabled"
          info        : "Once the rsyslog package is installed, ensure that the service is enabled.

Rationale:

If the rsyslog service is not enabled to start on boot, the system will not capture logging events."
          solution    : "Run the following command to enable rsyslog:

# systemctl --now enable rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.3 Ensure journald is configured to send logs to rsyslog"
          info        : "Data from journald may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of journald logs, however, use of the RSyslog service provides a consistent means of log collection and export.

Rationale:

IF RSyslog is the preferred method for capturing logs, all logs of the system should be sent to it for further processing."
          solution    : "Edit the /etc/systemd/journald.conf file and add the following line:

ForwardToSyslog=yes

Restart the service:

# systemctl restart rsyslog

Additional Information:

As noted in the journald man pages, journald logs may be exported to rsyslog either through the process mentioned here, or through a facility like systemd-journald.service. There are trade-offs involved in each implementation, where ForwardToSyslog will immediately capture all events (and forward to an external log server, if properly configured), but may not capture all boot-up activities. Mechanisms such as systemd-journald.service, on the other hand, will record bootup events, but may delay sending the information to rsyslog, leading to the potential for log manipulation prior to export. Be aware of the limitations of all tools employed to secure a system.

The main configuration file /etc/systemd/journald.conf is read before any of the custom *.conf files. If there are custom configurations present, they override the main configuration parameters"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.5,800-171|3.3.6,800-53|AU-2,800-53|AU-6(3),800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-6(3),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(d),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.5,CSCv8|8.2,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.AN-3,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-6(3),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.2.5,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.4 Ensure rsyslog default file permissions are configured"
          info        : "RSyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.

Rationale:

It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.

Impact:

The systems global umask could override, but only making the file permissions stricter, what is configured in RSyslog with the FileCreateMode directive. RSyslog also has it's own $umask directive that can alter the intended file creation mode. In addition, consideration should be given to how FileCreateMode is used.

Thus it is critical to ensure that the intended file creation mode is not overridden with less restrictive settings in /etc/rsyslog.conf, /etc/rsyslog.d/*conf files and that FileCreateMode is set before any file is created."
          solution    : "Edit either /etc/rsyslog.conf or a dedicated .conf file in /etc/rsyslog.d/ and set $FileCreateMode to 0640 or more restrictive:

$FileCreateMode 0640

Restart the service:

# systemctl restart rsyslog"
          reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|MP-2,CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(a),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSCv7|6.2,CSCv7|6.3,CSCv8|3.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-2,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - '*.emerg :omusrmsg:*'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'mail.* -/var/log/mail'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'mail.info -/var/log/mail.info'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'mail.warning -/var/log/mail.warn'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'mail.err /var/log/mail.err'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'news.crit -/var/log/news/news.crit'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'news.err -/var/log/news/news.err'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'news.notice -/var/log/news/news.notice'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - '*.=warning;*.=err -/var/log/warn'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - '*.crit /var/log/warn'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - '*.*;mail.none;news.none -/var/log/messages'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'local0,local1.* -/var/log/localmessages'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'local2,local3.* -/var/log/localmessages'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'local4,local5.* -/var/log/localmessages'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.5 Ensure logging is configured - 'local6,local7.* -/var/log/localmessages'"
          info        : "The /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files specifies rules for logging and which files are to be used to log certain classes of messages.

Rationale:

A great deal of important security-related information is sent via rsyslog (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.)."
          solution    : "Edit the following lines in the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files as appropriate for your environment.
NOTE: The below configuration is shown for example purposes only. Due care should be given to how the organization wish to store log data.

*.emerg                                  :omusrmsg:*
auth,authpriv.*                          /var/log/secure
mail.*                                  -/var/log/mail
mail.info                               -/var/log/mail.info
mail.warning                            -/var/log/mail.warn
mail.err                                 /var/log/mail.err
cron.*                                   /var/log/cron
*.=warning;*.=err                       -/var/log/warn
*.crit                                   /var/log/warn
*.*;mail.none;news.none                 -/var/log/messages
local0,local1.*                         -/var/log/localmessages
local2,local3.*                         -/var/log/localmessages
local4,local5.*                         -/var/log/localmessages
local6,local7.*                         -/var/log/localmessages

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.6 Ensure rsyslog is configured to send logs to a remote log host"
          info        : "RSyslog supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralised log management.

Rationale:

Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system."
          solution    : "Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and add the following line (where loghost.example.com is the name of your central log host). The target directive may either be a fully qualified domain name or an IP address.

*.* action(type='omfwd' target='192.168.2.100' port='514' protocol='tcp'
           action.resumeRetryCount='100'
           queue.type='LinkedList' queue.size='1000')

Run the following command to reload the rsyslogd configuration:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.7 Ensure rsyslog is not configured to receive logs from a remote client - ModLoad imtcp"
          info        : "RSyslog supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.

Rationale:

If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary."
          solution    : "Should there be any active log server configuration found in the auditing section, modify those file and remove the specific lines highlighted by the audit. Ensure none of the following entries are present in any of /etc/rsyslog.conf or /etc/rsyslog.d/*.conf.

Old format

$ModLoad imtcp
$InputTCPServerRun

New format

module(load='imtcp')
input(type='imtcp' port='514')

Restart the service:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|CM-6,800-53|CM-7,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|CM-6,800-53r5|CM-7,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|9.2,CSCv8|4.8,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.PT-1,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS15a,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>

        <report type:"PASSED">
          description : "4.2.2.7 Ensure rsyslog is not configured to receive logs from a remote client - InputTCPServerRun 514"
          info        : "RSyslog supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.

Rationale:

If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary."
          solution    : "Should there be any active log server configuration found in the auditing section, modify those file and remove the specific lines highlighted by the audit. Ensure none of the following entries are present in any of /etc/rsyslog.conf or /etc/rsyslog.d/*.conf.

Old format

$ModLoad imtcp
$InputTCPServerRun

New format

module(load='imtcp')
input(type='imtcp' port='514')

Restart the service:

# systemctl restart rsyslog"
          reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|CM-6,800-53|CM-7,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|CM-6,800-53r5|CM-7,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|9.2,CSCv8|4.8,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.PT-1,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS15a,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|6.4"
          see_also    : "https://workbench.cisecurity.org/files/4115"
        </report>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "4.2.3 Ensure all logfiles have appropriate permissions and ownership"
      info        : "Log files contain information from many services on the the local system, or in the event of a centralized log server, others systems logs as well. In general log files are found in /var/log/, although application can be configured to store logs elsewhere. Should your application store logs in another, ensure to run the same test on that location.

Rationale:

It is important that log files have the correct permissions to ensure that sensitive data is protected and that only the appropriate users / groups have access to them."
      solution    : "Run the following script to update permissions and ownership on files in /var/log.
Although the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.

#!/usr/bin/env bash

{
   echo -e '\n- Start remediation - logfiles have appropriate permissions and ownership'
   find /var/log -type f | while read -r fname; do
      bname='$(basename '$fname')'
      case '$bname' in
         lastlog | lastlog.* | wtmp | wtmp.* | btmp | btmp.*)
            ! stat -Lc '%a' '$fname' | grep -Pq -- '^\h*[0,2,4,6][0,2,4,6][0,4]\h*$' && echo -e '- changing mode on \'$fname\'' && chmod ug-x,o-wx '$fname'
            ! stat -Lc '%U' '$fname' | grep -Pq -- '^\h*root\h*$' && echo -e '- changing owner on \'$fname\'' && chown root '$fname'
            ! stat -Lc '%G' '$fname' | grep -Pq -- '^\h*(utmp|root)\h*$' && echo -e '- changing group on \'$fname\'' && chgrp root '$fname'
            ;;
         secure | auth.log)
            ! stat -Lc '%a' '$fname' | grep -Pq -- '^\h*[0,2,4,6][0,4]0\h*$' && echo -e '- changing mode on \'$fname\'' && chmod u-x,g-wx,o-rwx '$fname'
            ! stat -Lc '%U' '$fname' | grep -Pq -- '^\h*(syslog|root)\h*$' && echo -e '- changing owner on \'$fname\'' && chown root '$fname'
            ! stat -Lc '%G' '$fname' | grep -Pq -- '^\h*(adm|root)\h*$' && echo -e '- changing group on \'$fname\'' && chgrp root '$fname'
            ;;
         SSSD | sssd)
            ! stat -Lc '%a' '$fname' | grep -Pq -- '^\h*[0,2,4,6][0,2,4,6]0\h*$' && echo -e '- changing mode on \'$fname\'' && chmod ug-x,o-rwx '$fname'
            ! stat -Lc '%U' '$fname' | grep -Piq -- '^\h*(SSSD|root)\h*$' && echo -e '- changing owner on \'$fname\'' && chown root '$fname'
            ! stat -Lc '%G' '$fname' | grep -Piq -- '^\h*(SSSD|root)\h*$' && echo -e '- changing group on \'$fname\'' && chgrp root '$fname'
            ;;
         gdm | gdm3)
            ! stat -Lc '%a' '$fname' | grep -Pq -- '^\h*[0,2,4,6][0,2,4,6]0\h*$' && echo -e '- changing mode on \'$fname\'' && chmod ug-x,o-rwx
            ! stat -Lc '%U' '$fname' | grep -Pq -- '^\h*root\h*$' && echo -e '- changing owner on \'$fname\'' && chown root '$fname'
            ! stat -Lc '%G' '$fname' | grep -Pq -- '^\h*(gdm3?|root)\h*$' && echo -e '- changing group on \'$fname\'' && chgrp root '$fname'
            ;;
         *.journal)
            ! stat -Lc '%a' '$fname' | grep -Pq -- '^\h*[0,2,4,6][0,4]0\h*$' && echo -e '- changing mode on \'$fname\'' && chmod u-x,g-wx,o-rwx '$fname'
            ! stat -Lc '%U' '$fname' | grep -Pq -- '^\h*root\h*$' && echo -e '- changing owner on \'$fname\'' && chown root '$fname'
            ! stat -Lc '%G' '$fname' | grep -Pq -- '^\h*(systemd-journal|root)\h*$' && echo -e '- changing group on \'$fname\'' && chgrp root '$fname'
            ;;
         *)
            ! stat -Lc '%a' '$fname' | grep -Pq -- '^\h*[0,2,4,6][0,4]0\h*$' && echo -e '- changing mode on \'$fname\'' && chmod u-x,g-wx,o-rwx '$fname'
            ! stat -Lc '%U' '$fname' | grep -Pq -- '^\h*(syslog|root)\h*$' && echo -e '- changing owner on \'$fname\'' && chown root '$fname'
            ! stat -Lc '%G' '$fname' | grep -Pq -- '^\h*(adm|root)\h*$' && echo -e '- changing group on \'$fname\'' && chgrp root '$fname'
            ;;
      esac
   done
   echo -e '- End remediation - logfiles have appropriate permissions and ownership\n'
}

Note: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.
If there are services that log to other locations, ensure that those log files have the appropriate permissions.

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "OUTPUT=$(ls -l /var/log); /usr/bin/find /var/log -type f -perm /g+wx,o+rwx -ls | /usr/bin/awk -v awkvar=\"${OUTPUT}\" '{print} END {if (NR == 0) print awkvar \"\\npass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.1.1 Ensure cron daemon is enabled and running - enabled"
      info        : "The cron daemon is used to execute batch jobs on the system.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them."
      solution    : "Run the following command to enable and start cron:

# systemctl --now enable cron

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1562, T1562.001

TA0005

M1018"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/systemctl is-enabled cron"
      expect      : "enabled"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.1.1 Ensure cron daemon is enabled and running - running"
      info        : "The cron daemon is used to execute batch jobs on the system.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them."
      solution    : "Run the following command to enable and start cron:

# systemctl --now enable cron

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1562, T1562.001

TA0005

M1018"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/systemctl status cron"
      expect      : "^[\\s]*Active[\\s]*:[\\s]*active[\\s]*\\(running\\)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.2 Ensure permissions on /etc/crontab are configured"
      info        : "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access."
      solution    : "Run the following commands to set ownership and permissions on /etc/crontab :

# chown root:root /etc/crontab

# chmod og-rwx /etc/crontab"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/crontab"
      owner       : "root"
      mask        : "177"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.3 Ensure permissions on /etc/cron.hourly are configured"
      info        : "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on the /etc/cron.hourly directory:

# chown root:root /etc/cron.hourly/

# chmod og-rwx /etc/cron.hourly/"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/cron.hourly"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.4 Ensure permissions on /etc/cron.daily are configured"
      info        : "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on the /etc/cron.daily directory:

# chown root:root /etc/cron.daily/

# chmod og-rwx /etc/cron.daily/"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/cron.daily"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.5 Ensure permissions on /etc/cron.weekly are configured"
      info        : "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on the /etc/cron.weekly directory:

# chown root:root /etc/cron.weekly/

# chmod og-rwx /etc/cron.weekly/"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/cron.weekly"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.6 Ensure permissions on /etc/cron.monthly are configured"
      info        : "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on the /etc/cron.monthly directory:

# chown root:root /etc/cron.monthly/

# chmod og-rwx /etc/cron.monthly/"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/cron.monthly"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.7 Ensure permissions on /etc/cron.d are configured"
      info        : "The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab, but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
      solution    : "Run the following commands to set ownership and permissions on the /etc/cron.d directory:

# chown root:root /etc/cron.d/

# chmod og-rwx /etc/cron.d/"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/cron.d"
      owner       : "root"
      mask        : "077"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "5.1.8 Ensure cron is restricted to authorized users - '/etc/cron.deny'"
      info        : "Configure /etc/cron.allow to allow specific users to use this service. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in this file is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron.

Notes:

Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Even though a given user is not listed in cron.allow, cron jobs can still be run as that user

The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
      solution    : "Run the following commands to remove /etc/cron.deny:

# rm /etc/cron.deny

Run the following command to create /etc/cron.allow

# touch /etc/cron.allow

Run the following commands to set permissions and ownership for /etc/cron.allow:

# chmod g-wx,o-rwx /etc/cron.allow

# chown root:root /etc/cron.allow"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/cron.deny"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.8 Ensure cron is restricted to authorized users - '/etc/cron.allow'"
      info        : "Configure /etc/cron.allow to allow specific users to use this service. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any user not specifically defined in this file is allowed to use cron. By removing the file, only users in /etc/cron.allow are allowed to use cron.

Notes:

Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, cron should be removed, and the alternate method should be secured in accordance with local site policy

Even though a given user is not listed in cron.allow, cron jobs can still be run as that user

The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs

Rationale:

On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
      solution    : "Run the following commands to remove /etc/cron.deny:

# rm /etc/cron.deny

Run the following command to create /etc/cron.allow

# touch /etc/cron.allow

Run the following commands to set permissions and ownership for /etc/cron.allow:

# chmod g-wx,o-rwx /etc/cron.allow

# chown root:root /etc/cron.allow"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/cron.allow"
      owner       : "root"
      mask        : "137"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "5.1.9 Ensure at is restricted to authorized users - '/etc/at.deny'"
      info        : "Configure /etc/at.allow to allow specific users to use this service. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in this file is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, at should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
      solution    : "Run the following commands to remove /etc/at.deny:

# rm /etc/at.deny

Run the following command to create /etc/at.allow

# touch /etc/at.allow

Run the following commands to set permissions and ownership for /etc/at.allow:

# chmod g-wx,o-rwx /etc/at.allow

# chown root:root /etc/at.allow"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/at.deny"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.1.9 Ensure at is restricted to authorized users - '/etc/at.allow'"
      info        : "Configure /etc/at.allow to allow specific users to use this service. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not specifically defined in this file is allowed to use at. By removing the file, only users in /etc/at.allow are allowed to use at.

Note: Other methods, such as systemd timers, exist for scheduling jobs. If another method is used, at should be removed, and the alternate method should be secured in accordance with local site policy

Rationale:

On many systems, only the system administrator is authorized to schedule at jobs. Using the at.allow file to control who can run at jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
      solution    : "Run the following commands to remove /etc/at.deny:

# rm /etc/at.deny

Run the following command to create /etc/at.allow

# touch /etc/at.allow

Run the following commands to set permissions and ownership for /etc/at.allow:

# chmod g-wx,o-rwx /etc/at.allow

# chown root:root /etc/at.allow"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/at.allow"
      owner       : "root"
      mask        : "137"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.2.1 Ensure permissions on /etc/ssh/sshd_config are configured"
      info        : "The /etc/ssh/sshd_config file contains configuration specifications for sshd. The command below sets the owner and group of the file to root.

Rationale:

The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by non-privileged users."
      solution    : "Run the following commands to set ownership and permissions on /etc/ssh/sshd_config:

# chown root:root /etc/ssh/sshd_config
# chmod og-rwx /etc/ssh/sshd_config"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      owner       : "root"
      mask        : "177"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.2.2 Ensure permissions on SSH private host key files are configured"
      info        : "An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.

Rationale:

If an unauthorized user obtains the private SSH host key file, the host could be impersonated"
      solution    : "Run the following script to set mode, ownership, and group on the private SSH host key files:

#!/usr/bin/env bash

{
   l_skgn='ssh_keys' # Group designated to own openSSH keys
   l_skgid='$(awk -F: '($1 == '''$l_skgn'''){print $3}' /etc/group)'
   awk '{print}' <<< '$(find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec stat -L -c '%n %#a %U %G %g' {} +)' | (while read -r  l_file l_mode l_owner l_group l_gid; do
      [ -n '$l_skgid' ] && l_cga='$l_skgn' || l_cga='root'
      [ '$l_gid' = '$l_skgid' ] && l_pmask='0137' || l_pmask='0177'
      l_maxperm='$( printf '%o' $(( 0777 & ~$l_pmask )) )'
      if [ $(( $l_mode & $l_pmask )) -gt 0 ]; then
         echo -e ' - File: \'$l_file\' is mode \'$l_mode\' changing to mode: \'$l_maxperm\''
         if [ -n '$l_skgid' ]; then
            chmod u-x,g-wx,o-rwx '$l_file'
         else
            chmod u-x,go-rwx '$l_file'
         fi
      fi
      if [ '$l_owner' != 'root' ]; then
         echo -e ' - File: \'$l_file\' is owned by: \'$l_owner\' changing owner to \'root\''
         chown root '$l_file'
      fi
      if [ '$l_group' != 'root' ] && [ '$l_gid' != '$l_skgid' ]; then
         echo -e ' - File: \'$l_file\' is owned by group \'$l_group\' should belong to group \'$l_cga\''
         chgrp '$l_cga' '$l_file'
      fi
   done
   )
}"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/ssh_host_*_key"
      owner       : "root"
      mask        : "177"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "5.2.3 Ensure permissions on SSH public host key files are configured"
      info        : "An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.

Rationale:

If a public host key file is modified by an unauthorized user, the SSH service may be compromised."
      solution    : "Run the following commands to set permissions and ownership on the SSH host public key files

# find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod u-x,go-wx {} \;
# find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \;

Default Value:

Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/ssh_host_*_key.pub"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.4 Ensure SSH access is limited"
      info        : "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:

AllowUsers:

The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.

AllowGroups:

The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

DenyUsers:

The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.

DenyGroups:

The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.

Rationale:

Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system."
      solution    : "Edit the /etc/ssh/sshd_config file to set one or more of the parameter as follows:

AllowUsers <userlist>

OR

AllowGroups <grouplist>

OR

DenyUsers <userlist>

OR

DenyGroups <grouplist>

Default Value:

None"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*([Aa]llow|[Dd]eny)([Uu]sers|[Gg]roups)[\\s]"
      expect      : "^[\\s]*([Aa]llow|[Dd]eny)([Uu]sers|[Gg]roups)[\\s]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.5 Ensure SSH LogLevel is appropriate"
      info        : "INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.

VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.

Rationale:

SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

LogLevel VERBOSE

OR

LogLevel INFO

Default Value:

LogLevel INFO"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Ll]og[Ll]evel[\\s]"
      expect      : "^[\\s]*[Ll]og[Ll]evel[\\s]+(VERBOSE|INFO)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.6 Ensure SSH PAM is enabled"
      info        : "The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If set to yes this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication directives in addition to PAM account and session module processing for all authentication types.

Rationale:

When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

UsePAM yes"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Uu]se[Pp][Aa][Mm][\\s]"
      expect      : "^[\\s]*[Uu]se[Pp][Aa][Mm][\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.7 Ensure SSH root login is disabled"
      info        : "The PermitRootLogin parameter specifies if the root user can log in using SSH. The default is prohibit-password.

Rationale:

Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root. This limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitRootLogin no

Default Value:

PermitRootLogin without-password"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Pp]ermit[Rr]oot[Ll]ogin[\\s]"
      expect      : "^[\\s]*[Pp]ermit[Rr]oot[Ll]ogin[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.8 Ensure SSH HostbasedAuthentication is disabled"
      info        : "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public key client host authentication.

Rationale:

Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

HostbasedAuthentication no

Default Value:

HostbasedAuthentication no"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.3,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^(?i)[\\s]*hostbasedauthentication[\\s](?-i)"
      expect      : "^(?i)[\\s]*hostbasedauthentication[\\s]+yes[\\s]*$(?-i)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.9 Ensure SSH PermitEmptyPasswords is disabled"
      info        : "The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings.

Rationale:

Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitEmptyPasswords no

Default Value:

PermitEmptyPasswords no"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.3,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "(?i)^[\\s]*permitemptypasswords[\\s](?-i)"
      expect      : "(?i)^[\\s]*permitemptypasswords[\\s]yes[\\s]*$(?-i)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.10 Ensure SSH PermitUserEnvironment is disabled"
      info        : "The PermitUserEnvironment option allows users to present environment options to the SSH daemon.

Rationale:

Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has SSH executing trojan'd programs)"
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

PermitUserEnvironment no

Default Value:

PermitUserEnvironment no"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "(?i)^[\\s]*permituserenvironment[\\s](?-i)"
      expect      : "(?i)^[\\s]*permituserenvironment[\\s]yes[\\s]*$(?-i)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.11 Ensure SSH IgnoreRhosts is enabled"
      info        : "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.

Rationale:

Setting this parameter forces users to enter a password when authenticating with SSH."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

IgnoreRhosts yes

Default Value:

IgnoreRhosts yes"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|9.2,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^(?i)[\\s]*ignorerhosts[\\s](?-i)"
      expect      : "^(?i)[\\s]*ignorerhosts[\\s]+no[\\s]*$(?-i)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.12 Ensure SSH X11 forwarding is disabled"
      info        : "The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.

Rationale:

Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

X11Forwarding no"
      reference   : "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)X11Forwarding(?-i)[\\s]"
      expect      : "^[\\s]*(?i)X11Forwarding(?-i)[\\s]+no[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.13 Ensure only strong Ciphers are used - weak ciphers"
      info        : "This variable limits the ciphers that SSH can use during communication.

Note:

Some organizations may have stricter requirements for approved ciphers.

Ensure that ciphers used are in compliance with site policy.

The only 'strong' ciphers currently FIPS 140-2 compliant are:

aes256-ctr

aes192-ctr

aes128-ctr

Supported ciphers in openSSH 8.2:

3des-cbc

aes128-cbc

aes192-cbc

aes256-cbc

aes128-ctr

aes192-ctr

aes256-ctr

aes128-gcm@openssh.com

aes256-gcm@openssh.com

chacha20-poly1305@openssh.com

Rationale:

Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised.

The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a 'Sweet32' attack.

Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors."
      solution    : "Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a comma separated list of the site approved ciphers.
Example:

Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

Default Value:

Ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8(1),ITSG-33|SC-8a.,LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Cc]iphers[\\s]+"
      expect      : "^[\\s]*[Cc]iphers[\\s]+(?:.*-cbc.*,?|.*arcfour.*,?).+$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.13 Ensure only strong Ciphers are used - approved ciphers"
      info        : "This variable limits the ciphers that SSH can use during communication.

Note:

Some organizations may have stricter requirements for approved ciphers.

Ensure that ciphers used are in compliance with site policy.

The only 'strong' ciphers currently FIPS 140-2 compliant are:

aes256-ctr

aes192-ctr

aes128-ctr

Supported ciphers in openSSH 8.2:

3des-cbc

aes128-cbc

aes192-cbc

aes256-cbc

aes128-ctr

aes192-ctr

aes256-ctr

aes128-gcm@openssh.com

aes256-gcm@openssh.com

chacha20-poly1305@openssh.com

Rationale:

Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised.

The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a 'Sweet32' attack.

Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors."
      solution    : "Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a comma separated list of the site approved ciphers.
Example:

Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

Default Value:

Ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8(1),ITSG-33|SC-8a.,LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Cc]iphers[\\s]+"
      expect      : "^[\\s]*[Cc]iphers[\\s]+(?:chacha20-poly1305@openssh\\.com|aes(?:128|192|256)-ctr|aes(?:128|256)-gcm@openssh\\.com).*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.14 Ensure only strong MAC algorithms are used - weak MACs"
      info        : "This variable limits the types of MAC algorithms that SSH can use during communication.

Notes:

Some organizations may have stricter requirements for approved MACs.

Ensure that MACs used are in compliance with site policy.

The only 'strong' MACs currently FIPS 140-2 approved are:

hmac-sha2-256

hmac-sha2-512

The Supported MACs are:

hmac-md5

hmac-md5-96

hmac-sha1

hmac-sha1-96

hmac-sha2-256

hmac-sha2-512

umac-64@openssh.com

umac-128@openssh.com

hmac-md5-etm@openssh.com

hmac-md5-96-etm@openssh.com

hmac-sha1-etm@openssh.com

hmac-sha1-96-etm@openssh.com

hmac-sha2-256-etm@openssh.com

hmac-sha2-512-etm@openssh.com

umac-64-etm@openssh.com

umac-128-etm@openssh.com

Rationale:

MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information."
      solution    : "Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site approved MACs.
Example:

MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256

Default Value:

MACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8(1),ITSG-33|SC-8a.,LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Mm][Aa][Cc][Ss][\\s]+"
      expect      : "^[\\s]*[Mm][Aa][Cc][Ss][\\s]+(?:.*-md5|.*-sha1|.*-ripemd160|umac-(?:64|128)).*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.14 Ensure only strong MAC algorithms are used - approved MACs"
      info        : "This variable limits the types of MAC algorithms that SSH can use during communication.

Notes:

Some organizations may have stricter requirements for approved MACs.

Ensure that MACs used are in compliance with site policy.

The only 'strong' MACs currently FIPS 140-2 approved are:

hmac-sha2-256

hmac-sha2-512

The Supported MACs are:

hmac-md5

hmac-md5-96

hmac-sha1

hmac-sha1-96

hmac-sha2-256

hmac-sha2-512

umac-64@openssh.com

umac-128@openssh.com

hmac-md5-etm@openssh.com

hmac-md5-96-etm@openssh.com

hmac-sha1-etm@openssh.com

hmac-sha1-96-etm@openssh.com

hmac-sha2-256-etm@openssh.com

hmac-sha2-512-etm@openssh.com

umac-64-etm@openssh.com

umac-128-etm@openssh.com

Rationale:

MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information."
      solution    : "Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site approved MACs.
Example:

MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256

Default Value:

MACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8(1),ITSG-33|SC-8a.,LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Mm][Aa][Cc][Ss][\\s]+"
      expect      : "^[\\s]*[Mm][Aa][Cc][Ss][\\s]+(?:hmac-sha2-(256|512)).*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.15 Ensure only strong Key Exchange algorithms are used - weak algorithms"
      info        : "Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received

Notes:

Kex algorithms have a higher preference the earlier they appear in the list

Some organizations may have stricter requirements for approved Key exchange algorithms

Ensure that Key exchange algorithms used are in compliance with site policy

The only Key Exchange Algorithms currently FIPS 140-2 approved are:

ecdh-sha2-nistp256

ecdh-sha2-nistp384

ecdh-sha2-nistp521

diffie-hellman-group-exchange-sha256

diffie-hellman-group16-sha512

diffie-hellman-group18-sha512

diffie-hellman-group14-sha256

The Key Exchange algorithms supported by OpenSSH 8.2 are:

curve25519-sha256

curve25519-sha256@libssh.org

diffie-hellman-group1-sha1

diffie-hellman-group14-sha1

diffie-hellman-group14-sha256

diffie-hellman-group16-sha512

diffie-hellman-group18-sha512

diffie-hellman-group-exchange-sha1

diffie-hellman-group-exchange-sha256

ecdh-sha2-nistp256

ecdh-sha2-nistp384

ecdh-sha2-nistp521

sntrup4591761x25519-sha512@tinyssh.org

Rationale:

Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks"
      solution    : "Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma separated list of the site approved key exchange algorithms
Example:

KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256

Default Value:

KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8(1),ITSG-33|SC-8a.,LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Kk]ex[Aa]lgorithms[\\s]+"
      expect      : "^[\\s]*[Kk]ex[Aa]lgorithms[\\s]+(?:.*-sha1).*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.15 Ensure only strong Key Exchange algorithms are used - approved algorithms"
      info        : "Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received

Notes:

Kex algorithms have a higher preference the earlier they appear in the list

Some organizations may have stricter requirements for approved Key exchange algorithms

Ensure that Key exchange algorithms used are in compliance with site policy

The only Key Exchange Algorithms currently FIPS 140-2 approved are:

ecdh-sha2-nistp256

ecdh-sha2-nistp384

ecdh-sha2-nistp521

diffie-hellman-group-exchange-sha256

diffie-hellman-group16-sha512

diffie-hellman-group18-sha512

diffie-hellman-group14-sha256

The Key Exchange algorithms supported by OpenSSH 8.2 are:

curve25519-sha256

curve25519-sha256@libssh.org

diffie-hellman-group1-sha1

diffie-hellman-group14-sha1

diffie-hellman-group14-sha256

diffie-hellman-group16-sha512

diffie-hellman-group18-sha512

diffie-hellman-group-exchange-sha1

diffie-hellman-group-exchange-sha256

ecdh-sha2-nistp256

ecdh-sha2-nistp384

ecdh-sha2-nistp521

sntrup4591761x25519-sha512@tinyssh.org

Rationale:

Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks"
      solution    : "Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma separated list of the site approved key exchange algorithms
Example:

KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256

Default Value:

KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256"
      reference   : "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8(1),ITSG-33|SC-8a.,LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Kk]ex[Aa]lgorithms[\\s]+"
      expect      : "^[\\s]*[Kk]ex[Aa]lgorithms[\\s]+(?:curve25519-sha256|diffie-hellman-group(?:14|16|18)-sha(?:256|512)|diffie-hellman-group-exchange-sha256|ecdh-sha2-nistp(?:256|384|521)).*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.17 Ensure SSH warning banner is configured"
      info        : "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.

Rationale:

Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

Banner /etc/issue.net"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Bb]anner[\\s]"
      expect      : "^[\\s]*[Bb]anner[\\s]+/etc/issue\\.net[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.18 Ensure SSH MaxAuthTries is set to 4 or less"
      info        : "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure.

Rationale:

Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxAuthTries 4

Default Value:

MaxAuthTries 6"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|16.13,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Mm]ax[Aa]uth[Tt]ries[\\s]"
      expect      : "^[\\s]*[Mm]ax[Aa]uth[Tt]ries[\\s]+[1-4][\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.19 Ensure SSH MaxStartups is configured"
      info        : "The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.

Rationale:

To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxStartups 10:30:60

Default Value:

MaxStartups 10:30:100"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Mm]ax[Ss]tartups[\\s]"
      expect      : "^[\\s]*[Mm]ax[Ss]tartups[\\s]+10:30:60[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK_NOT
      description : "5.2.20 Ensure SSH MaxSessions is set to 10 or less"
      info        : "The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection.

Rationale:

To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

MaxSessions 10

Default Value:

MaxSessions 10"
      reference   : "800-53|AC-10,800-53r5|AC-10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,LEVEL|1A,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)MaxSessions(?-i)[\\s]"
      expect      : "^[\\s]*(?i)MaxSessions(?-i)[\\s]+(1[1-9]|[2-9][0-9]|[1-9][0-9][0-9]+)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.21 Ensure SSH LoginGraceTime is set to one minute or less"
      info        : "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.

Rationale:

Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections. While the recommended setting is 60 seconds (1 Minute), set the number based on site policy."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameter as follows:

LoginGraceTime 60

Default Value:

LoginGraceTime 120"
      reference   : "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Ll]ogin[Gg]race[Tt]ime[\\s]"
      expect      : "^[\\s]*[Ll]ogin[Gg]race[Tt]ime[\\s]+([1-9]|[1-5][0-9]|60)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.22 Ensure SSH Idle Timeout Interval is configured - 'ClientAliveInterval'"
      info        : "NOTE: To clarify, the two settings described below is only meant for idle connections from a protocol perspective and not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not and never had, intentionally, the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that caused these values to behave in such a manner that they where abused to disconnect idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused disconnect idle users.

The two options ClientAliveInterval and ClientAliveCountMax control the timeout of SSH sessions. Taken directly from man 5 sshd_config:

ClientAliveInterval Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

ClientAliveCountMax Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option en-abled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive. The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.

Rationale:

In order to prevent resource exhaustion, appropriate values should be set for both ClientAliveInterval and ClientAliveCountMax. Specifically, looking at the source code, ClientAliveCountMax must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinately, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks.

The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy.
Example:

ClientAliveInterval 15
ClientAliveCountMax 3

Default Value:

ClientAliveInterval 0

ClientAliveCountMax 3"
      reference   : "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*(?i)ClientAliveInterval(?-i)[\\s]"
      expect      : "^[\\s]*(?i)ClientAliveInterval(?-i)[\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.2.22 Ensure SSH Idle Timeout Interval is configured - 'ClientAliveCountMax'"
      info        : "NOTE: To clarify, the two settings described below is only meant for idle connections from a protocol perspective and not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not and never had, intentionally, the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that caused these values to behave in such a manner that they where abused to disconnect idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused disconnect idle users.

The two options ClientAliveInterval and ClientAliveCountMax control the timeout of SSH sessions. Taken directly from man 5 sshd_config:

ClientAliveInterval Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.

ClientAliveCountMax Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option en-abled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive. The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.

Rationale:

In order to prevent resource exhaustion, appropriate values should be set for both ClientAliveInterval and ClientAliveCountMax. Specifically, looking at the source code, ClientAliveCountMax must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinately, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks.

The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate."
      solution    : "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy.
Example:

ClientAliveInterval 15
ClientAliveCountMax 3

Default Value:

ClientAliveInterval 0

ClientAliveCountMax 3"
      reference   : "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1A,NIAv2|NS49"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/ssh/sshd_config"
      regex       : "^[\\s]*[Cc]lient[Aa]live[Cc]ount[Mm]ax[\\s]"
      expect      : "^[\\s]*[Cc]lient[Aa]live[Cc]ount[Mm]ax[\\s]+[0-3][\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.3.1 Ensure sudo is installed"
      info        : "sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.

Rationale:

sudo supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the sudo front end. The default security policy is sudoers, which is configured via the file /etc/sudoers and any entries in /etc/sudoers.d.

The security policy determines what privileges, if any, a user has to run sudo. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific."
      solution    : "First determine is LDAP functionality is required. If so, then install sudo-ldap, else install sudo.
Example:

# apt install sudo"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/dpkg -s sudo sudo-ldap 2>&1"
      expect      : "install[\\s]+ok[\\s]+installed"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.3.2 Ensure sudo commands use pty"
      info        : "sudo can be configured to run only from a pseudo terminal (pseudo-pty).

Rationale:

Attackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files."
      solution    : "Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <PATH TO FILE> and add the following line:

Defaults use_pty"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -E '^[[:space:]]*Defaults[[:space:]]+(\[^#]+,[[:space:]]*)?use_pty' /etc/sudoers /etc/sudoers.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.3.3 Ensure sudo log file exists"
      info        : "sudo can use a custom log file

Rationale:

A sudo log file simplifies auditing of sudo commands

Impact:

WARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files."
      solution    : "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH TO FILE> and add the following line:
Example:

Defaults logfile='/var/log/sudo.log'"
      reference   : "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -s -E '^[[:space:]]*Defaults[[:space:]]+(\[^#]+,[[:space:]]*)?logfile=' /etc/sudoers /etc/sudoers.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.3.5 Ensure re-authentication for privilege escalation is not disabled globally"
      info        : "The operating system must be configured so that users must re-authenticate for privilege escalation.

Rationale:

Without re-authentication, users may access resources or perform tasks for which they do not have authorization.

When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate."
      solution    : "Configure the operating system to require users to reauthenticate for privilege escalation.
Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit the relevant sudoers file.
Remove any occurrences of !authenticate tags in the file(s)."
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/grep -r \"^[^#].*\!authenticate\" /etc/sudoers* | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'"
      expect      : "^pass$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.3.6 Ensure sudo authentication timeout is configured correctly"
      info        : "sudo caches used credentials for a default of 15 minutes. This is for ease of use when there are multiple administrative tasks to perform. The timeout can be modified to suit local security policies.

This default is distribution specific. See audit section for further information.

Rationale:

Setting a timeout value reduces the window of opportunity for unauthorized privileged access to another user."
      solution    : "If the currently configured timeout is larger than 15 minutes, edit the file listed in the audit section with visudo -f <PATH TO FILE> and modify the entry timestamp_timeout= to 15 minutes or less as per your site policy. The value is in minutes. This particular entry may appear on it's own, or on the same line as env_reset. See the following two examples:

Defaults    env_reset, timestamp_timeout=15

Defaults    timestamp_timeout=15
Defaults    env_reset"
      reference   : "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "sudo -V | /usr/bin/grep \"Authentication timestamp timeout:\" | awk '{print $4}'"
      expect      : "(([1-9]|1[0-4])\.[0-9]+|15\.0)$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.3.7 Ensure access to the su command is restricted"
      info        : "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo, which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will only allow users in a specific groups to execute su. This group should be empty to reinforce the use of sudo for privileged access.

Rationale:

Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program."
      solution    : "Create an empty group that will be specified for use of the su command. The group should be named according to site policy.
Example:

# groupadd sugroup

Add the following line to the /etc/pam.d/su file, specifying the empty group:

auth required pam_wheel.so use_uid group=sugroup"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "sugroup=$(/usr/bin/grep -Pi '^\\h*auth\\h+(?:required|requisite)\\h+pam_wheel\\.so\\h+(?:[^#\\n\\r]+\\h+)?((?!\\2)(use_uid\\b|group=\\H+\\b))\\h+(?:[^#\\n\\r]+\\h+)?((?!\\1)(use_uid\\b|group=\\H+\\b))(\\h+.*)?$' /etc/pam.d/su | /usr/bin/awk 'BEGIN { FS = \"=\"} ; { print $2 }'); if [ ! -z $sugroup ]; then /usr/bin/grep $sugroup /etc/group | /usr/bin/awk 'BEGIN { FS = \":\" }; { if ($4) print $4 }' | /usr/bin/awk '{print} END {if (NR == 0) print \"pass\"'}; else echo \"sugroup has members\"; fi"
      expect      : "pass"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1 Ensure password creation requirements are configured - 'minlen'"
      info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
      solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/security/pwquality.conf"
      regex       : "^[\\s]*minlen[\\s]*="
      expect      : "^[\\s]*minlen[\\s]*=[\\s]*@PASSWORD_MINIMUM_LENGTH@[\\s]*$"
    </custom_item>

    <if>
      <condition type:"AND">
        <custom_item>
          type        : FILE_CONTENT_CHECK
          description : "check if minclass is set"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*minclass[\\s]*="
          expect      : "^[\\s]*minclass[\\s]*=[\\s]*@PASSWORD_MINCLASS@[\\s]*$"
        </custom_item>
      </condition>

      <then>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "5.4.1 Ensure password creation requirements are configured - 'dcredit'"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
          solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*minclass[\\s]*="
          expect      : "^[\\s]*minclass[\\s]*=[\\s]*@PASSWORD_MINCLASS@[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "5.4.1 Ensure password creation requirements are configured - 'ucredit'"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
          solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*minclass[\\s]*="
          expect      : "^[\\s]*minclass[\\s]*=[\\s]*@PASSWORD_MINCLASS@[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "5.4.1 Ensure password creation requirements are configured - 'ocredit'"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
          solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*minclass[\\s]*="
          expect      : "^[\\s]*minclass[\\s]*=[\\s]*@PASSWORD_MINCLASS@[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "5.4.1 Ensure password creation requirements are configured - 'lcredit'"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
          solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*minclass[\\s]*="
          expect      : "^[\\s]*minclass[\\s]*=[\\s]*@PASSWORD_MINCLASS@[\\s]*$"
        </custom_item>
      </then>

      <else>
        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "5.4.1 Ensure password creation requirements are configured - 'dcredit'"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
          solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*dcredit[\\s]*="
          expect      : "^[\\s]*dcredit[\\s]*=[\\s]*@PASSWORD_DCREDIT@[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "5.4.1 Ensure password creation requirements are configured - 'ucredit'"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
          solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*ucredit[\\s]*="
          expect      : "^[\\s]*ucredit[\\s]*=[\\s]*@PASSWORD_UCREDIT@[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "5.4.1 Ensure password creation requirements are configured - 'ocredit'"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
          solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*ocredit[\\s]*="
          expect      : "^[\\s]*ocredit[\\s]*=[\\s]*@PASSWORD_OCREDIT@[\\s]*$"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "5.4.1 Ensure password creation requirements are configured - 'lcredit'"
          info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
          solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
          reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          file        : "/etc/security/pwquality.conf"
          regex       : "^[\\s]*lcredit[\\s]*="
          expect      : "^[\\s]*lcredit[\\s]*=[\\s]*@PASSWORD_LCREDIT@[\\s]*$"
        </custom_item>
      </else>
    </if>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.1 Ensure password creation requirements are configured - retry"
      info        : "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.

The following options are set in the /etc/security/pwquality.conf file:

Password Length:

minlen = 14 - password must be 14 characters or more

Password complexity:

minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)

OR

dcredit = -1 - provide at least one digit

ucredit = -1 - provide at least one uppercase character

ocredit = -1 - provide at least one special character

lcredit = -1 - provide at least one lowercase character

Rationale:

Strong passwords protect systems from being hacked through brute force methods."
      solution    : "The following setting is a recommend example policy. Alter these values to conform to your own organization's password policies.
Run the following command to install the pam_pwquality module:

# apt install libpam-pwquality

Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy:

minlen = 14

Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy:
Option 1

minclass = 4

Option 2

dcredit = -1
ucredit = -1
ocredit = -1
lcredit = -1

Additional Information:

Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.

NOTE: As of this writing it is not possible to customize the maximum number of retries for the creation of a password within recommended methods. The command pam-auth-update is used to manage certain PAM configurations via profiles, such as /etc/pam.d/common-password. Making a manual change to this file will cause pam-auth-update to overwrite it on the next run and is thus against recommendations. Alternatively, pam_pwquality (via /etc/security/pwquality.conf) fully supports the configuration of the maximum number of retries for a password change with the configuration entry retry = XXX. The issue is that the template /usr/share/pam-configs/pwquality contains retry=3 which will override any retry setting in /etc/security/pwquality.conf as PAM entries takes precedence. This template file should not be modified as any package update will overwrite the change. Thus it is not possible, in any recommended way, to modify password retries."
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/pam.d/common-password"
      regex       : "password[\\s]*(requisite|required)[\\s]*pam_pwquality\\.so"
      expect      : "retry[\\s]*=[\\s]*[1-3]"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.2 Ensure lockout for failed password attempts is configured - auth pam_tally2.so"
      info        : "Lock out users after n unsuccessful consecutive login attempts. The first sets of changes are made to the common PAM configuration files. The second set of changes are applied to the program specific PAM configuration file. The second set of changes must be applied to each program that will lock out users. Check the documentation for each secondary program for instructions on how to configure them to work with PAM.

All configuration of faillock is located in /etc/security/faillock.conf and well commented.

deny - Deny access if the number of consecutive authentication failures for this user during the recent interval exceeds n tries.

fail_interval - The length of the interval, in seconds, during which the consecutive authentication failures must happen for the user account to be locked out

unlock_time - The access will be re-enabled after n seconds after the lock out. The value 0 has the same meaning as value never - the access will not be re-enabled without resetting the faillock entries by the faillock command.

Set the lockout number and unlock time in accordance with local site policy.

Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Impact:

It is critical to test and validate any PAM changes before deploying. Any misconfiguration could cause the system to be inaccessible."
      solution    : "NOTE: Pay special attention to the configuration. Incorrect configuration can cause system lock outs. This is example configuration. You configuration may differ based on previous changes to the files.
Common auth
Edit /etc/pam.d/common-auth and ensure that faillock is configured.
Note: It is critical to understand each line and the relevant arguments for successful implementation. The order of these entries is very specific. The pam_faillock.so lines surround the pam_unix.so line. The comment 'Added to enable faillock' is shown to highlight the additional lines and their order in the file.

# here are the per-package modules (the 'Primary' block)
auth    required                        pam_faillock.so preauth # Added to enable faillock
auth    [success=1 default=ignore]      pam_unix.so nullok
auth    [default=die]                   pam_faillock.so authfail # Added to enable faillock
auth    sufficient                      pam_faillock.so authsucc # Added to enable faillock
# here's the fallback if no module succeeds
auth    requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth    required                        pam_permit.so
# and here are more per-package modules (the 'Additional' block)
auth    optional                        pam_cap.so
# end of pam-auth-update config

Common account
Edit /etc/pam.d/common-account and ensure that the following stanza is at the end of the file.

account     required      pam_faillock.so

Fail lock configuration
Edit /etc/security/faillock.conf and configure it per your site policy.
Example:

deny = 4
fail_interval = 900
unlock time = 600

Additional Information:

If a user has been locked out because they have reached the maximum consecutive failure count defined by deny= in the pam_faillock.so module, the user can be unlocked by issuing the command /usr/sbin/faillock --user username --reset. This command sets the failed count to 0, effectively unlocking the user."
      reference   : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/pam.d/common-auth"
      regex       : "^[\\s]*auth[\\s]+required[\\s]+pam_tally2\\.so[\\s]*"
      expect      : "^[\\s]*auth[\\s]+required[\\s]+pam_tally2\\.so[\\s]+onerr=fail[\\s]+audit[\\s]+silent[\\s]+deny=@PAM_DENY_VALUE@[\\s]+unlock_time=@PAM_LOCKOUT_VALUE@[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.2 Ensure lockout for failed password attempts is configured - account pam_deny.so"
      info        : "Lock out users after n unsuccessful consecutive login attempts. The first sets of changes are made to the common PAM configuration files. The second set of changes are applied to the program specific PAM configuration file. The second set of changes must be applied to each program that will lock out users. Check the documentation for each secondary program for instructions on how to configure them to work with PAM.

All configuration of faillock is located in /etc/security/faillock.conf and well commented.

deny - Deny access if the number of consecutive authentication failures for this user during the recent interval exceeds n tries.

fail_interval - The length of the interval, in seconds, during which the consecutive authentication failures must happen for the user account to be locked out

unlock_time - The access will be re-enabled after n seconds after the lock out. The value 0 has the same meaning as value never - the access will not be re-enabled without resetting the faillock entries by the faillock command.

Set the lockout number and unlock time in accordance with local site policy.

Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Impact:

It is critical to test and validate any PAM changes before deploying. Any misconfiguration could cause the system to be inaccessible."
      solution    : "NOTE: Pay special attention to the configuration. Incorrect configuration can cause system lock outs. This is example configuration. You configuration may differ based on previous changes to the files.
Common auth
Edit /etc/pam.d/common-auth and ensure that faillock is configured.
Note: It is critical to understand each line and the relevant arguments for successful implementation. The order of these entries is very specific. The pam_faillock.so lines surround the pam_unix.so line. The comment 'Added to enable faillock' is shown to highlight the additional lines and their order in the file.

# here are the per-package modules (the 'Primary' block)
auth    required                        pam_faillock.so preauth # Added to enable faillock
auth    [success=1 default=ignore]      pam_unix.so nullok
auth    [default=die]                   pam_faillock.so authfail # Added to enable faillock
auth    sufficient                      pam_faillock.so authsucc # Added to enable faillock
# here's the fallback if no module succeeds
auth    requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth    required                        pam_permit.so
# and here are more per-package modules (the 'Additional' block)
auth    optional                        pam_cap.so
# end of pam-auth-update config

Common account
Edit /etc/pam.d/common-account and ensure that the following stanza is at the end of the file.

account     required      pam_faillock.so

Fail lock configuration
Edit /etc/security/faillock.conf and configure it per your site policy.
Example:

deny = 4
fail_interval = 900
unlock time = 600

Additional Information:

If a user has been locked out because they have reached the maximum consecutive failure count defined by deny= in the pam_faillock.so module, the user can be unlocked by issuing the command /usr/sbin/faillock --user username --reset. This command sets the failed count to 0, effectively unlocking the user."
      reference   : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/pam.d/common-account"
      regex       : "^[\\s]*account[\\s]+requisite[\\s]+pam_deny\\.so[\\s]*"
      expect      : "^[\\s]*account[\\s]+requisite[\\s]+pam_deny\\.so[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.2 Ensure lockout for failed password attempts is configured - account pam_tally2.so"
      info        : "Lock out users after n unsuccessful consecutive login attempts. The first sets of changes are made to the common PAM configuration files. The second set of changes are applied to the program specific PAM configuration file. The second set of changes must be applied to each program that will lock out users. Check the documentation for each secondary program for instructions on how to configure them to work with PAM.

All configuration of faillock is located in /etc/security/faillock.conf and well commented.

deny - Deny access if the number of consecutive authentication failures for this user during the recent interval exceeds n tries.

fail_interval - The length of the interval, in seconds, during which the consecutive authentication failures must happen for the user account to be locked out

unlock_time - The access will be re-enabled after n seconds after the lock out. The value 0 has the same meaning as value never - the access will not be re-enabled without resetting the faillock entries by the faillock command.

Set the lockout number and unlock time in accordance with local site policy.

Rationale:

Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.

Impact:

It is critical to test and validate any PAM changes before deploying. Any misconfiguration could cause the system to be inaccessible."
      solution    : "NOTE: Pay special attention to the configuration. Incorrect configuration can cause system lock outs. This is example configuration. You configuration may differ based on previous changes to the files.
Common auth
Edit /etc/pam.d/common-auth and ensure that faillock is configured.
Note: It is critical to understand each line and the relevant arguments for successful implementation. The order of these entries is very specific. The pam_faillock.so lines surround the pam_unix.so line. The comment 'Added to enable faillock' is shown to highlight the additional lines and their order in the file.

# here are the per-package modules (the 'Primary' block)
auth    required                        pam_faillock.so preauth # Added to enable faillock
auth    [success=1 default=ignore]      pam_unix.so nullok
auth    [default=die]                   pam_faillock.so authfail # Added to enable faillock
auth    sufficient                      pam_faillock.so authsucc # Added to enable faillock
# here's the fallback if no module succeeds
auth    requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth    required                        pam_permit.so
# and here are more per-package modules (the 'Additional' block)
auth    optional                        pam_cap.so
# end of pam-auth-update config

Common account
Edit /etc/pam.d/common-account and ensure that the following stanza is at the end of the file.

account     required      pam_faillock.so

Fail lock configuration
Edit /etc/security/faillock.conf and configure it per your site policy.
Example:

deny = 4
fail_interval = 900
unlock time = 600

Additional Information:

If a user has been locked out because they have reached the maximum consecutive failure count defined by deny= in the pam_faillock.so module, the user can be unlocked by issuing the command /usr/sbin/faillock --user username --reset. This command sets the failed count to 0, effectively unlocking the user."
      reference   : "800-171|3.1.1,800-53|AC-1,800-53|AC-2,800-53|AC-2(1),800-53r5|AC-1,800-53r5|AC-2,800-53r5|AC-2(1),CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(e),CN-L3|8.1.10.6(c),CSCv7|16.7,CSCv8|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.1.1,ISO/IEC-27001|A.9.2.1,ITSG-33|AC-1,ITSG-33|AC-2,ITSG-33|AC-2(1),LEVEL|1A,NESA|M1.2.2,NIAv2|AM28,NIAv2|AM29,NIAv2|AM30,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/pam.d/common-account"
      regex       : "^[\\s]*account[\\s]+required[\\s]+pam_tally2\\.so[\\s]*"
      expect      : "^[\\s]*account[\\s]+required[\\s]+pam_tally2\\.so[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.4.3 Ensure password reuse is limited"
      info        : "The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.

Rationale:

Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password."
      solution    : "NOTE: Pay special attention to the configuration. Incorrect configuration can cause system lock outs. This is example configuration. You configuration may differ based on previous changes to the files.
Edit the /etc/pam.d/common-password file to include the remember= option of 5 or more. If this line doesn't exist, add the line directly above the line:
password [success=1 default=ignore] pam_unix.so obscure yescrypt:
Example:

password        required      pam_pwhistory.so use_authtok remember=5

Additional Information:

Changes only apply to accounts configured on the local system."
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/pam.d/common-password"
      regex       : "^\\s*password\\s+required\\s+pam_pwhistory.so.*$"
      expect      : "^\\s*password\\s+required\\s+pam_pwhistory.so\\s+(.*|\\s*)*remember=([5-9]|[1-9][0-9]+).*$"
    </custom_item>

    <if>
      <condition auto:"FAILED" type:"AND">
        <custom_item>
          system      : "Linux"
          type        : CMD_EXEC
          description : "Specified or no hashing algorithm should be configured in /etc/pam.d/common-password"
          cmd         : "/usr/bin/awk 'BEGIN { IGNORECASE=1 } /^\\s*password.*pam_unix.so/ { if (/@PASSWORD_ENCRYPTION@/) {printf \"pass: @PASSWORD_ENCRYPTION@ configured\"} else if (/(yescrypt|md5|bigcrypt|sha256|sha512|blowfish)/) {printf \"fail: hashing configured\"} else { printf \"pass: no hashing configured\" }; print \": \"$0}'  /etc/pam.d/common-password"
          expect      : "^pass:"
        </custom_item>

        <custom_item>
          system      : "Linux"
          type        : FILE_CONTENT_CHECK
          description : "Hashing algorithm in login.defs is yescrypt"
          file        : "/etc/login.defs"
          regex       : "^\\s*ENCRYPT_METHOD\\s+"
          expect      : "^\\s*ENCRYPT_METHOD\\s+(?i)@PASSWORD_ENCRYPTION@(?-i)\\s*$"
        </custom_item>
      </condition>

      <then>
        <report type:"PASSED">
          description : "5.4.4 Ensure password hashing algorithm is up to date with the latest standards"
          info        : "The commands below change password encryption to yescrypt. All existing accounts will need to perform a password change to upgrade the stored hashes to the new algorithm.

Rationale:

The yescrypt algorithm provides much stronger hashing than previous available algorithms, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords.

Note: these change only apply to accounts configured on the local system."
          solution    : "NOTE: Pay special attention to the configuration. Incorrect configuration can cause system lock outs. This is example configuration. You configuration may differ based on previous changes to the files.
PAM
Edit the /etc/pam.d/common-password file and ensure that no hashing algorithm option for pam_unix.so is set:

password[success=1 default=ignore]pam_unix.so obscure use_authtok try_first_pass remember=5

Login definitions
Edit /etc/login.defs and ensure that ENCRYPT_METHOD is set to yescrypt.

Additional Information:

Additional module options may be set, recommendation only covers those listed here."
          reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28(1),ITSG-33|SC-28a.,LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
          see_also    : "https://workbench.cisecurity.org/files/4115"
          show_output : YES
        </report>
      </then>
    </if>

    <report type:"WARNING">
      description : "5.4.5 Ensure all current passwords uses the configured hashing algorithm"
      info        : "Currently used passwords with out of date hashing algorithms may pose a security risk to the system.

Rationale:

In use passwords should always match the configured hashing algorithm for the system.

Impact:

If the administrator forces a password change, this could cause a large spike in CPU usage if a large number of users change their password during the same time.

NOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance."
      solution    : "If the administrator wish to force an immediate change on all users as per the output of the audit, execute:

#!/usr/bin/env bash

{
   UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
   awk -F: -v UID_MIN='${UID_MIN}' '( $3 >= UID_MIN && $1 != 'nfsnobody' ) { print $1 }' /etc/passwd | xargs -n 1 chage -d 0
}

NOTE: This could cause significant temporary CPU load on the system if a large number of users reset their passwords at the same time."
      reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28(1),ITSG-33|SC-28a.,LEVEL|1M,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
    </report>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.1.1 Ensure minimum days between password changes is configured - login.defs"
      info        : "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 1 or more days.

Rationale:

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls."
      solution    : "Set the PASS_MIN_DAYS parameter to 1 in /etc/login.defs :

PASS_MIN_DAYS 1

Modify user parameters for all users with a password set to match:

# chage --mindays 1 <user>

Default Value:

PASS_MIN_DAYS 0"
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/login.defs"
      regex       : "^[\\s\\t]*PASS_MIN_DAYS[\\s]+"
      expect      : "PASS_MIN_DAYS[\\s]+@PASSWORD_MIN_DAYS@[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.1.1 Ensure minimum days between password changes is configured - users"
      info        : "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 1 or more days.

Rationale:

By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls."
      solution    : "Set the PASS_MIN_DAYS parameter to 1 in /etc/login.defs :

PASS_MIN_DAYS 1

Modify user parameters for all users with a password set to match:

# chage --mindays 1 <user>

Default Value:

PASS_MIN_DAYS 0"
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "echo 'Username, Minimum number of days between password change'; output=\"\"; failures=0; for i in $(egrep \"^[^:]+:[^\!*]\" /etc/shadow | cut -d: -f1); do change_date=$(chage --list \"$i\" | grep 'Minimum number of days between password change' | cut -d: -f2 | awk '{$1=$1};1'); output=\"${i}, ${change_date}\"; if [ $change_date -ge 1 ]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; failures=$((failures+1)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.1.2 Ensure password expiration is 365 days or less - login.defs"
      info        : "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age.

Rationale:

The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity. It is recommended that the PASS_MAX_DAYS parameter does not exceed 365 days and is greater than the value of PASS_MIN_DAYS."
      solution    : "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Default Value:

PASS_MAX_DAYS 99999"
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_MAX_DAYS[\\s]"
      expect      : "^[\\s]*PASS_MAX_DAYS[\\s]+@PASSWORD_MAX_DAYS@[\\s]*$"
    </custom_item>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "5.5.1.2 Ensure password expiration is 365 days or less - users"
      info            : "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age.

Rationale:

The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity. It is recommended that the PASS_MAX_DAYS parameter does not exceed 365 days and is greater than the value of PASS_MIN_DAYS."
      solution        : "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :

PASS_MAX_DAYS 365

Modify user parameters for all users with a password set to match:

# chage --maxdays 365 <user>

Default Value:

PASS_MAX_DAYS 99999"
      reference       : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also        : "https://workbench.cisecurity.org/files/4115"
      file            : "/etc/shadow"
      regex           : "^[^:]+:[^!*]"
      expect          : "^([^:]*:){4}@PASSWORD_MAX_DAYS@:"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.1.3 Ensure password expiration warning days is 7 or more - login.defs"
      info        : "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.

Rationale:

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered."
      solution    : "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs :

PASS_WARN_AGE 7

Modify user parameters for all users with a password set to match:

# chage --warndays 7 <user>

Default Value:

PASS_WARN_AGE 7"
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/login.defs"
      regex       : "^[\\s]*PASS_WARN_AGE[\\s]+"
      expect      : "^[\\s]*PASS_WARN_AGE[\\s]+@PASSWORD_WARN_AGE@[\\s]*$"
    </custom_item>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "5.5.1.3 Ensure password expiration warning days is 7 or more - users"
      info            : "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days.

Rationale:

Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered."
      solution        : "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs :

PASS_WARN_AGE 7

Modify user parameters for all users with a password set to match:

# chage --warndays 7 <user>

Default Value:

PASS_WARN_AGE 7"
      reference       : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also        : "https://workbench.cisecurity.org/files/4115"
      file            : "/etc/shadow"
      regex           : "^[^:]+:[^!*]"
      expect          : "^([^:]*:){5}@PASSWORD_WARN_AGE@:"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.1.4 Ensure inactive password lock is 30 days or less - useradd"
      info        : "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.

Rationale:

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies."
      solution    : "Run the following command to set the default password inactivity period to 30 days:

# useradd -D -f 30

Modify user parameters for all users with a password set to match:

# chage --inactive 30 <user>

Default Value:

INACTIVE=-1

Additional Information:

A value of -1 would disable this setting"
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/sbin/useradd -D | /bin/grep INACTIVE"
      expect      : "^INACTIVE=(30|[1-2][0-9]|[0-9])$"
    </custom_item>

    <custom_item>
      system          : "Linux"
      type            : FILE_CONTENT_CHECK
      description     : "5.5.1.4 Ensure inactive password lock is 30 days or less - users"
      info            : "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.

Rationale:

Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies."
      solution        : "Run the following command to set the default password inactivity period to 30 days:

# useradd -D -f 30

Modify user parameters for all users with a password set to match:

# chage --inactive 30 <user>

Default Value:

INACTIVE=-1

Additional Information:

A value of -1 would disable this setting"
      reference       : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also        : "https://workbench.cisecurity.org/files/4115"
      file            : "/etc/shadow"
      regex           : "^[^:]+:[^!*]"
      expect          : "^([^:]*:){6}@INACTIVE_PASSWORD_LOCK@:"
      string_required : NO
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.1.5 Ensure all users last password change date is in the past"
      info        : "All users should have a password change date in the past.

Rationale:

If a users recorded password change date is in the future then they could bypass any set password expiration."
      solution    : "Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate."
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "echo 'Username, Current Days, Last Password Change Days'; output=\"\"; failures=0; for i in $(cut -d: -f1 < /etc/shadow); do now=$(($(date +%s) / 86400)); change_date=$(chage --list \"$i\" | grep 'Last password change' | cut -d: -f2 | awk '{$1=$1};1'); if [[ $change_date != \"never\" ]]; then epoch_change_date=$(($(date -d \"${change_date}\" +%s) / 86400)); else epoch_change_date='Never'; fi; output=\"${i}, ${now}, ${epoch_change_date}\"; if [[ $epoch_change_date -le $now ]]; then output=\"${output} - Pass\"; else output=\"${output} - Fail\"; ((failures++)); fi; echo \"${output}\"; done; echo \"Number of failures: ${failures}\""
      expect      : "^Number of failures: 0$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.2 Ensure system accounts are secured"
      info        : "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell.

Rationale:

It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands."
      solution    : "Set the shell for any accounts returned by the audit to nologin:

# usermod -s $(which nologin) <user>

Lock any non root accounts returned by the audit:

# usermod -L <user>

The following command will set all system accounts to a non login shell:

# awk -F: '$1!~/(root|sync|shutdown|halt|^\+)/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'' && $7!~/((\/usr)?\/sbin\/nologin)/ && $7!~/(\/bin)?\/false/ {print $1}' /etc/passwd | while read -r user; do usermod -s '$(which nologin)' '$user'; done

The following command will automatically lock not root system accounts:

# awk -F: '($1!~/(root|^\+)/ && $3<''$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)'') {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!~/LK?/) {print $1}' | while read -r user; do usermod -L '$user'; done"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/egrep -v \"^\+\" /etc/passwd | /usr/bin/awk -F: '($1!=\"root\" && $1!=\"sync\" && $1!=\"shutdown\" && $1!=\"halt\" && $3<1000 && $7!=\"/usr/sbin/nologin\" && $7!=\"/bin/false\")' | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'"
      expect      : "none"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.3 Ensure default group for the root account is GID 0"
      info        : "The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.

Rationale:

Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users."
      solution    : "Run the following command to set the root user default group to GID 0 :

# usermod -g 0 root"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/passwd"
      regex       : "^root:"
      expect      : "^root:x:0:0:"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.4 Ensure default user umask is 027 or more restrictive - Default user umask"
      info        : "The user file-creation mode mask (umask) is use to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-rw-). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either octal or Symbolic values

Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.

Symbolic Value - Represented by a comma separated list for User u, group g, and world/other o. The permissions listed are not masked by umask. ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027. This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----.

Setting the default umask:

pam_umask module:

will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.

umask=<mask> value in the /etc/login.defs file is interpreted as Octal

Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):

will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid, and username is the same as the primary group name

userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user

System Wide Shell Configuration File:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bash.bashrc - System wide version of .bashrc. etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bash.bashrc

User Shell Configuration Files:

~/.profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.

~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

Rationale:

Setting a very secure default value for umask ensures that users make a conscious choice about their file permissions. A default umask setting of 077 causes files and directories created by users to not be readable by any other user on the system. A umask of 027 would make files and directories readable by users in the same Unix group, while a umask of 022 would make files readable by every user on the system.

Impact:

Setting USERGROUPS_ENAB no in /etc/login.defs may change the expected behavior of useradd and userdel.

Setting USERGROUPS_ENAB yes in /etc/login.defs

userdel will remove the user's group if it contains no more members

useradd will create by default a group with the name of the user."
      solution    : "Run the following command and remove or modify the umask of any returned files:

# grep -RPi '(^|^[^#]*)\s*umask\s+([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b|[0-7][01][0-7]\b|[0-7][0-7][0-6]\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\b)' /etc/login.defs /etc/profile* /etc/bash.bashrc*

Follow one of the following methods to set the default user umask:
Edit /etc/login.defs and edit the UMASK and USERGROUPS_ENAB lines as follows:

UMASK 027

USERGROUPS_ENAB no

Edit /etc/pam.d/common-session and add or edit the following:

session optional                        pam_umask.so

OR
Configure umask in one of the following files:

A file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bash.bashrc

Example: /etc/profile.d/set_umask.sh

umask 027

Note: this method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked.

Default Value:

UMASK 022"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "passing=\"\"; /usr/bin/grep -Eiq '^\\s*UMASK\\s+(0[0-7][2-7]7|[0-7][2-7]7)\\b' /etc/login.defs && /usr/bin/grep -Eqi '^\\s*USERGROUPS_ENAB\\s*\"?no\"?\\b' /etc/login.defs && /usr/bin/grep -Eq '^\\s*session\\s+(optional|requisite|required)\\s+pam_umask\\.so\\b' /etc/pam.d/common-session && passing=true; /usr/bin/grep -REiq '^\\s*UMASK\\s+\\s*(0[0-7][2-7]7|[0-7][2-7]7|u=(r?|w?|x?)(r?|w?|x?)(r?|w?|x?),g=(r?x?|x?r?),o=)\\b' /etc/profile* /etc/bash.bashrc* && passing=true; [ \"$passing\" = true ] && echo \"Default user umask is set\";[ -z \"$passing\" ] && echo \"Default user umask is not set\""
      expect      : "Default user umask is set"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.4 Ensure default user umask is 027 or more restrictive - Restrictive system umask"
      info        : "The user file-creation mode mask (umask) is use to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-rw-). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.

umask can be set with either octal or Symbolic values

Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.

Symbolic Value - Represented by a comma separated list for User u, group g, and world/other o. The permissions listed are not masked by umask. ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027. This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----.

Setting the default umask:

pam_umask module:

will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.

umask=<mask> value in the /etc/login.defs file is interpreted as Octal

Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):

will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid, and username is the same as the primary group name

userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user

System Wide Shell Configuration File:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bash.bashrc - System wide version of .bashrc. etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bash.bashrc

User Shell Configuration Files:

~/.profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.

~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login

Rationale:

Setting a very secure default value for umask ensures that users make a conscious choice about their file permissions. A default umask setting of 077 causes files and directories created by users to not be readable by any other user on the system. A umask of 027 would make files and directories readable by users in the same Unix group, while a umask of 022 would make files readable by every user on the system.

Impact:

Setting USERGROUPS_ENAB no in /etc/login.defs may change the expected behavior of useradd and userdel.

Setting USERGROUPS_ENAB yes in /etc/login.defs

userdel will remove the user's group if it contains no more members

useradd will create by default a group with the name of the user."
      solution    : "Run the following command and remove or modify the umask of any returned files:

# grep -RPi '(^|^[^#]*)\s*umask\s+([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b|[0-7][01][0-7]\b|[0-7][0-7][0-6]\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\b)' /etc/login.defs /etc/profile* /etc/bash.bashrc*

Follow one of the following methods to set the default user umask:
Edit /etc/login.defs and edit the UMASK and USERGROUPS_ENAB lines as follows:

UMASK 027

USERGROUPS_ENAB no

Edit /etc/pam.d/common-session and add or edit the following:

session optional                        pam_umask.so

OR
Configure umask in one of the following files:

A file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bash.bashrc

Example: /etc/profile.d/set_umask.sh

umask 027

Note: this method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked.

Default Value:

UMASK 022"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/grep -RPi '(^|^[^#]*)\\s*umask\\s+([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b|[0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b|(u=[rwx]{0,3},)?(g=[rwx]{0,3},)?o=[rwx]+\\b|(u=[rwx]{1,3},)?g=[^rx]{1,3}(,o=[rwx]{0,3})?\\b)' /etc/login.defs /etc/profile* /etc/bash.bashrc* | /usr/bin/awk '{print} END {if (NR == 0) print \"pass - no less restrictive system umask set\"; else print \"fail\"}'"
      expect      : "pass - no less restrictive system umask set"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CONTENT_CHECK
      description : "5.5.5 Ensure default user shell timeout is 900 seconds or less - /etc/bash.bashrc"
      info        : "TMOUT is an environmental setting that determines the timeout of a shell in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables timeout.

readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.

export TMOUT - exports the TMOUT variable

System Wide Shell Configuration Files:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bash.bashrc - System wide version of bash.bashrc. etc/bash.bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bash.bashrc.

Rationale:

Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session."
      solution    : "Review /etc/bash.bashrc, /etc/profile, and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0.
Configure TMOUT in one of the following files:

A file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bash.bashrc

TMOUT configuration examples:

As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT

As a single line:

readonly TMOUT=900 ; export TMOUT

Additional Information:

The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files are also checked

Other methods of setting a timeout exist not covered here"
      reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/bash.bashrc"
      regex       : "^[\\s]*TMOUT[\\s]*"
      expect      : "^[\\s]*TMOUT[\\s]*=[\\s]*([1-9][0-9]|[1-8][0-9][0-9]|900)[\\s]*$"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "5.5.5 Ensure default user shell timeout is 900 seconds or less - /etc/profile /etc/profile.d"
      info        : "TMOUT is an environmental setting that determines the timeout of a shell in seconds.

TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables timeout.

readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.

export TMOUT - exports the TMOUT variable

System Wide Shell Configuration Files:

/etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the .bash_profile, however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive login shells, or shells executed with the --login parameter.

/etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh. It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.

/etc/bash.bashrc - System wide version of bash.bashrc. etc/bash.bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output to /dev/null if non-interactive. Is only executed for interactive shells or if BASH_ENV is set to /etc/bash.bashrc.

Rationale:

Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session."
      solution    : "Review /etc/bash.bashrc, /etc/profile, and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0.
Configure TMOUT in one of the following files:

A file in the /etc/profile.d/ directory ending in .sh

/etc/profile

/etc/bash.bashrc

TMOUT configuration examples:

As multiple lines:

TMOUT=900
readonly TMOUT
export TMOUT

As a single line:

readonly TMOUT=900 ; export TMOUT

Additional Information:

The audit and remediation in this recommendation apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files are also checked

Other methods of setting a timeout exist not covered here"
      reference   : "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/bin/grep -P '^[\\s]*TMOUT[\\s]*=' /etc/bash.bashrc /etc/profile /etc/profile.d/*.sh"
      expect      : ":[\\s]*TMOUT[\\s]*=([1-9][0-9]|[1-8][0-9][0-9]|900)"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.1 Ensure permissions on /etc/passwd are configured"
      info        : "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.

Rationale:

It is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd:

# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd

Default Value:

/etc/passwd 644 0/root 0/root

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/passwd"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.2 Ensure permissions on /etc/passwd- are configured"
      info        : "The /etc/passwd- file contains backup user account information.

Rationale:

It is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd-:

# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-

Default Value:

/etc/passwd- 644 0/root 0/root

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/passwd-"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.3 Ensure permissions on /etc/group are configured"
      info        : "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.

Rationale:

The /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs."
      solution    : "Run the following commands to remove excess permissions, set owner, and set group on /etc/group:

# chmod u-x,go-wx /etc/group
# chown root:root /etc/group

Default Value:

/etc/group 644 0/root 0/root

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/group"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.4 Ensure permissions on /etc/group- are configured"
      info        : "The /etc/group- file contains a backup list of all the valid groups defined in the system.

Rationale:

It is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run the following commands to remove excess permissions, set owner, and set group on /etc/group-:

# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-

Default Value:

/etc/group- 644 0/root 0/root

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/group-"
      owner       : "root"
      mask        : "133"
      group       : "root"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.5 Ensure permissions on /etc/shadow are configured"
      info        : "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts."
      solution    : "Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow:

# chown root:shadow /etc/shadow
  -OR-
# chown root:root /etc/shadow

Run the following command to remove excess permissions form /etc/shadow:

# chmod u-x,g-wx,o-rwx /etc/shadow

Default Value:

/etc/shadow 640 0/root 42/shadow

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/shadow"
      owner       : "root"
      mask        : "137"
      group       : "root" || "shadow"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.6 Ensure permissions on /etc/shadow- are configured"
      info        : "The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

It is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow:

# chown root:shadow /etc/shadow-
  -OR-
# chown root:root /etc/shadow-

Run the following command to remove excess permissions form /etc/shadow-:

# chmod u-x,g-wx,o-rwx /etc/shadow-

Default Value:

/etc/shadow- 640 0/root 42/shadow

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/shadow-"
      owner       : "root"
      mask        : "137"
      group       : "root" || "shadow"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.7 Ensure permissions on /etc/gshadow are configured"
      info        : "The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

If attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group."
      solution    : "Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow:

# chown root:shadow /etc/gshadow
  -OR-
# chown root:root /etc/gshadow

Run the following command to remove excess permissions form /etc/gshadow:

# chmod u-x,g-wx,o-rwx /etc/gshadow

Default Value:

/etc/gshadow 640 0/root 42/shadow

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/gshadow"
      owner       : "root"
      mask        : "137"
      group       : "root" || "shadow"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.1.8 Ensure permissions on /etc/gshadow- are configured"
      info        : "The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.

Rationale:

It is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions."
      solution    : "Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow:

# chown root:shadow /etc/gshadow-
  -OR-
# chown root:root /etc/gshadow-

Run the following command to remove excess permissions form /etc/gshadow-:

# chmod u-x,g-wx,o-rwx /etc/gshadow-

Default Value:

/etc/gshadow- 640 0/root 42/shadow

Additional Information:

NIST SP 800-53 Rev. 5:

AC-3

MP-2"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "/etc/gshadow-"
      owner       : "root"
      mask        : "137"
      group       : "root" || "shadow"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.1.9 Ensure no world writable files exist"
      info        : "Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the chmod(2) man page for more information.

Rationale:

Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity."
      solution    : "Removing write access for the 'other' category ( chmod o-w <filename> ) is advisable, but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "find_world_writeable_files"
    </item>

    <item>
      system      : "Linux"
      description : "6.1.10 Ensure no unowned files or directories exist"
      info        : "Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system.

Rationale:

A new user who is assigned the deleted user's user ID or group ID may then end up 'owning' these files, and thus have more access on the system than was intended."
      solution    : "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13.2,CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "find_orphan_files"
      find_option : "nouser"
    </item>

    <item>
      system      : "Linux"
      description : "6.1.11 Ensure no ungrouped files or directories exist"
      info        : "Sometimes when administrators delete users or groups from the system they neglect to remove all files owned by those users or groups.

Rationale:

A new user who is assigned the deleted user's user ID or group ID may then end up 'owning' these files, and thus have more access on the system than was intended."
      solution    : "Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13.2,CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "find_orphan_files"
      find_option : "nogroup"
    </item>

    <item>
      system      : "Linux"
      description : "6.1.12 Audit SUID executables"
      info        : "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID program is to enable users to perform functions (such as changing their password) that require root privileges.

Rationale:

There are valid reasons for SUID programs, but it is important to identify and review such programs to ensure they are legitimate.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Ensure that no rogue SUID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "find_suid_sgid_files"
      find_option : "suid"
      severity    : MEDIUM
    </item>

    <item>
      system      : "Linux"
      description : "6.1.13 Audit SGID executables"
      info        : "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SGID program is to enable users to perform functions (such as changing their password) that require root privileges.

Rationale:

There are valid reasons for SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different md5 checksum than what from the package. This is an indication that the binary may have been replaced.

NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance."
      solution    : "Ensure that no rogue SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries."
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "find_suid_sgid_files"
      find_option : "sgid"
      severity    : MEDIUM
    </item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.1 Ensure accounts in /etc/passwd use shadowed passwords"
      info        : "Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow, encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd.

Rationale:

The /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow. The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack.

Note:

All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.

A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username."
      solution    : "Run the following command to set accounts to use shadowed passwords:

# sed -e 's/^\([a-zA-Z0-9_]*\):[^:]*:/\1:x:/' -i /etc/passwd

Investigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off."
      reference   : "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28(1),ITSG-33|SC-28a.,LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/awk -F: '($2 != \"x\" ) { print $1 \" is not set to shadowed passwords \"}' /etc/passwd | /usr/bin/awk \'{print} END {if (NR == 0) print \"none\"}\'"
      expect      : "none"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.2 Ensure /etc/shadow password fields are not empty"
      info        : "An account with an empty password field means that anybody may log in as that user without providing a password.

Rationale:

All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user."
      solution    : "If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:

# passwd -l <username>

Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off."
      reference   : "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/awk -F : \'($2 == \"\") { print $1 \" does not have a password.\"}\' /etc/shadow | /usr/bin/awk \'{print} END {if (NR == 0) print \"none\"}\'"
      expect      : "none"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.2.3 Ensure all groups in /etc/passwd exist in /etc/group"
      info        : "Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group .

Rationale:

Groups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed."
      solution    : "Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1222, T1222.002

TA0003

M1027"
      reference   : "800-171|3.1.1,800-53|AC-2c.,800-53r5|AC-2c.,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2c.,LEVEL|1A,NESA|T5.2.1,NESA|T5.2.2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|1.1.5,PCI-DSSv3.2.1|7.1.1,PCI-DSSv3.2.1|7.1.3,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "passwd_invalid_gid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.10 Ensure root is the only UID 0 account"
      info        : "Any account with UID 0 has superuser privileges on the system.

Rationale:

This access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted."
      solution    : "Remove any users other than root with UID 0 or assign them a new UID if appropriate.

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1548, T1548.000

TA0001

M1026"
      reference   : "800-171|3.1.5,800-53|AC-6(5),800-53r5|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "passwd_zero_uid"
    </item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.9 Ensure root PATH Integrity"
      info        : "The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.

Rationale:

Including the current working directory (.) or other writable directory in root's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program."
      solution    : "Correct or justify any items discovered in the Audit step.

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1204, T1204.002

TA0006

M1022"
      reference   : "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "RPCV=\"$(sudo -Hiu root env | grep '^PATH' | cut -d= -f2)\"; echo \"$RPCV\" | grep -q \"::\" && echo \"root's path contains a empty directory (::)\"; echo \"$RPCV\" | grep -q \":$\" && echo \"root's path contains a trailing (:)\"; for x in $(echo \"$RPCV\" | tr \":\" \" \"); do if [ -d \"$x\" ]; then ls -ldH \"$x\" | awk '$9 == \".\" {print \"PATH contains current working directory (.)\"}; $3 != \"root\" {print $9, \"is not owned by root\"}; substr($1,6,1) != \"-\" {print $9, \"is group writable\"}; substr($1,9,1) != \"-\" {print $9, \"is world writable\"}'; else echo \"$x is not a directory\"; fi; done | /usr/bin/awk '{print} END {if (NR == 0) print \"All results passing\"; else print \"fail\"}'"
      expect      : "All results passing"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.2.5 Ensure no duplicate UIDs exist"
      info        : "Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.

Rationale:

Users must be assigned unique UIDs for accountability and to ensure appropriate access protections."
      solution    : "Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1078, T1078.001, T1078.003

TA0005

M1027"
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "passwd_duplicate_uid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.6 Ensure no duplicate GIDs exist"
      info        : "Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.

Rationale:

User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections."
      solution    : "Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.

Additional Information:

You can also use the grpck command to check for other inconsistencies in the /etc/group file.

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1078, T1078.001, T1078.003

TA0005

M1027"
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "group_duplicate_gid"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.7 Ensure no duplicate user names exist"
      info        : "Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.

Rationale:

If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd . For example, if 'test4' has a UID of 1000 and a subsequent 'test4' entry has a UID of 2000, logging in as 'test4' will use UID 1000. Effectively, the UID is shared, which is a security problem."
      solution    : "Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1078, T1078.001, T1078.003

TA0004

M1027"
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "passwd_duplicate_username"
    </item>

    <item>
      system      : "Linux"
      description : "6.2.8 Ensure no duplicate group names exist"
      info        : "Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.

Rationale:

If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group . Effectively, the GID is shared, which is a security problem."
      solution    : "Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.

MITRE ATT&CK Mappings:

Techniques / Sub-techniques

Tactics

Mitigations

T1078, T1078.001, T1078.003

TA0004

M1027"
      reference   : "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "group_duplicate_name"
    </item>

    <custom_item>
      system      : "Linux"
      type        : CMD_EXEC
      description : "6.2.4 Ensure shadow group is empty"
      info        : "The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.

Rationale:

Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts."
      solution    : "Run the following command to remove all users from the shadow group

# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\1/' /etc/group

Change the primary group of any users with shadow as their primary group.

# usermod -g <primary group> <user>"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      cmd         : "/usr/bin/awk -F: 'FILENAME == \"/etc/group\" && $1 == \"shadow\" { gid=$3; if ($4!=\"\") { print \"secondary \"$4; f=1 } } FILENAME == \"/etc/passwd\" && $4 == gid { print \"primary \"$1; f=1 } END { if (!f) print \"shadow group empty\" }' /etc/group /etc/passwd"
      expect      : "^shadow group empty$"
    </custom_item>

    <item>
      system      : "Linux"
      description : "6.2.11 Ensure local interactive user home directories exist"
      info        : "Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.

Rationale:

If the user's home directory does not exist or is unassigned, the user will be placed in '/' and will not be able to write any files or have local environment variables set."
      solution    : "If any users' home directories do not exist, create them and make sure the respective user owns the directory. Users without an assigned home directory should be removed or assigned a home directory as appropriate.
The following script will create a home directory for users with an interactive shell whose home directory doesn't exist:

#!/usr/bin/env bash

{
   valid_shells='^($( sed -rn '/^\//{s,/,\\\\/,g;p}' /etc/shells | paste -s -d '|' - ))$'
   awk -v pat='$valid_shells' -F: '$(NF) ~ pat { print $1 ' ' $(NF-1) }' /etc/passwd | while read -r user home; do
      if [ ! -d '$home' ]; then
         echo -e '\n- User \'$user\' home directory \'$home\' doesn't exist\n- creating home directory \'$home\'\n'
         mkdir '$home'
         chmod g-w,o-wrx '$home'
         chown '$user' '$home'
      fi
   done
}"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      name        : "active_accounts_without_home_dir"
    </item>

    <item>
      system           : "Linux"
      description      : "6.2.12 Ensure local interactive users own their home directories"
      info             : "The user home directory is space defined for the particular user to set local environment variables and to store personal files.

Rationale:

Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory."
      solution         : "Change the ownership of any home directories that are not owned by the defined user to the correct user.
The following script will update local interactive user home directories to be own by the user:

#!/usr/bin/env bash

{
   output=''
   valid_shells='^($( sed -rn '/^\//{s,/,\\\\/,g;p}' /etc/shells | paste -s -d '|' - ))$'
   awk -v pat='$valid_shells' -F: '$(NF) ~ pat { print $1 ' ' $(NF-1) }' /etc/passwd | while read -r user home; do
      owner='$(stat -L -c '%U' '$home')'
      if [ '$owner' != '$user' ]; then
         echo -e '\n- User \'$user\' home directory \'$home\' is owned by user \'$owner\'\n  - changing ownership to \'$user\'\n'
         chown '$user' '$home'
      fi
   done
}"
      reference        : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also         : "https://workbench.cisecurity.org/files/4115"
      name             : "accounts_bad_home_permissions"
      mask             : "0000"
      use_valid_shells : YES
    </item>

    <item>
      system           : "Linux"
      description      : "6.2.13 Ensure local interactive user home directories are mode 750 or more restrictive"
      info             : "While the system administrator can establish secure permissions for users' home directories, the users can easily override these.

Rationale:

Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges."
      solution         : "Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user file permissions and determine the action to be taken in accordance with site policy.
The following script can be used to remove permissions is excess of 750 from interactive user home directories:

#!/usr/bin/env bash

{
  perm_mask='0027'
   maxperm='$( printf '%o' $(( 0777 & ~$perm_mask)) )'
   valid_shells='^($( sed -rn '/^\//{s,/,\\\\/,g;p}' /etc/shells | paste -s -d '|' - ))$'
   awk -v pat='$valid_shells' -F: '$(NF) ~ pat { print $1 ' ' $(NF-1) }' /etc/passwd | (while read -r user home; do
      mode=$( stat -L -c '%#a' '$home' )
      if [ $(( $mode & $perm_mask )) -gt 0 ]; then
         echo -e '- modifying User $user home directory: \'$home\'\n- removing excessive permissions from current mode of \'$mode\''
         chmod g-w,o-rwx '$home'
      fi
   done
    )
}"
      reference        : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also         : "https://workbench.cisecurity.org/files/4115"
      name             : "accounts_bad_home_permissions"
      mask             : "0027"
      use_valid_shells : YES
    </item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "6.2.14 Ensure no local interactive user has .netrc files"
      info        : "The .netrc file contains data for logging into a remote host for file transfers via FTP.

While the system administrator can establish secure permissions for users' .netrc files, the users can easily override these.

Rationale:

The .netrc file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over .netrc files from other systems which could pose a risk to those systems.

If a .netrc file is required, and follows local site policy, it should have permissions of 600 or more restrictive."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .netrc file permissions and determine the action to be taken in accordance with local site policy.
The following script will remove .netrc files from interactive users' home directories

#!/usr/bin/env bash

{
   perm_mask='0177'
   valid_shells='^($( sed -rn '/^\//{s,/,\\\\/,g;p}' /etc/shells | paste -s -d '|' - ))$'
   awk -v pat='$valid_shells' -F: '$(NF) ~ pat { print $1 ' ' $(NF-1) }' /etc/passwd | while read -r user home; do
      if [ -f '$home/.netrc' ]; then
         echo -e '\n- User \'$user\' file: \'$home/.netrc\' exists\n - removing file: \'$home/.netrc\'\n'
         rm -f '$home/.netrc'
      fi
   done
}"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "~/.netrc"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "6.2.15 Ensure no local interactive user has .forward files"
      info        : "The .forward file specifies an email address to forward the user's mail to.

Rationale:

Use of the .forward file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The .forward file also poses a risk as it can be used to execute commands that may perform unintended actions."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .forward files and determine the action to be taken in accordance with site policy.
The following script will remove .forward files from interactive users' home directories

#!/usr/bin/env bash

{
   output=''
   fname='.forward'
   valid_shells='^($( sed -rn '/^\//{s,/,\\\\/,g;p}' /etc/shells | paste -s -d '|' - ))$'
   awk -v pat='$valid_shells' -F: '$(NF) ~ pat { print $1 ' ' $(NF-1) }' /etc/passwd | (while read -r user home; do
      if [ -f '$home/$fname' ]; then
         echo -e '$output\n- User \'$user\' file: \'$home/$fname\' exists\n  - removing file: \'$home/$fname\'\n'
         rm -r '$home/$fname'
      fi
   done
   )
}"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "~/.forward"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK_NOT
      description : "6.2.16 Ensure no local interactive user has .rhosts files"
      info        : "While no .rhosts files are shipped by default, users can easily create them.

Rationale:

This action is only meaningful if .rhosts support is permitted in the file /etc/pam.conf . Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, they may have been brought over from other systems and could contain information useful to an attacker for those other systems."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user .rhosts files and determine the action to be taken in accordance with site policy.
The following script will remove .rhosts files from interactive users' home directories

#!/usr/bin/env bash

{
   perm_mask='0177'
   valid_shells='^($( sed -rn '/^\//{s,/,\\\\/,g;p}' /etc/shells | paste -s -d '|' - ))$'
   awk -v pat='$valid_shells' -F: '$(NF) ~ pat { print $1 ' ' $(NF-1) }' /etc/passwd | while read -r user home; do
      if [ -f '$home/.rhosts' ]; then
         echo -e '\n- User \'$user\' file: \'$home/.rhosts\' exists\n - removing file: \'$home/.rhosts\'\n'
         rm -f '$home/.rhosts'
      fi
   done
}"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "~/.rhosts"
    </custom_item>

    <custom_item>
      system      : "Linux"
      type        : FILE_CHECK
      description : "6.2.17 Ensure local interactive user dot files are not group or world writable"
      info        : "While the system administrator can establish secure permissions for users' 'dot' files, the users can easily override these.

Rationale:

Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges."
      solution    : "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.
The following script will remove excessive permissions on dot files within interactive users' home directories.

#!/usr/bin/env bash

{
   perm_mask='0022'
   valid_shells='^($( sed -rn '/^\//{s,/,\\\\/,g;p}' /etc/shells | paste -s -d '|' - ))$'
   awk -v pat='$valid_shells' -F: '$(NF) ~ pat { print $1 ' ' $(NF-1) }' /etc/passwd | while read -r user home; do
      find '$home' -type f -name '.*' | while read -r dfile; do
         mode=$( stat -L -c '%#a' '$dfile' )
         if [ $(( $mode & $perm_mask )) -gt 0 ]; then
            echo -e '\n- Modifying User \'$user\' file: \'$dfile\'\n- removing group and other write permissions'
            chmod go-w '$dfile'
         fi
      done
   done
}"
      reference   : "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3"
      see_also    : "https://workbench.cisecurity.org/files/4115"
      file        : "~/.[!.]*"
      mask        : "022"
    </custom_item>
  </then>

  <else>
    <report type:"WARNING">
      description : "CIS_Debian_Linux_11_v1.0.0_L1_Workstation.audit from CIS Debian Linux 11 Benchmark"
      info        : "NOTE: Nessus has not identified that the chosen audit applies to the target device."
      see_also    : "https://workbench.cisecurity.org/files/4115"
    </report>
  </else>
</if>

</check_type>
